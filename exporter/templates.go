// Code generated by go-bindata.
// sources:
// exporter/templates/cat1/_.xml
// exporter/templates/cat1/_2.16.840.1.113883.10.20.24.3.23.xml
// exporter/templates/cat1/_address.xml
// exporter/templates/cat1/_author.xml
// exporter/templates/cat1/_code.xml
// exporter/templates/cat1/_id.xml
// exporter/templates/cat1/_measures.xml
// exporter/templates/cat1/_organization.xml
// exporter/templates/cat1/_patient_data.xml
// exporter/templates/cat1/_providers.xml
// exporter/templates/cat1/_reason.xml
// exporter/templates/cat1/_record_target.xml
// exporter/templates/cat1/_reporting_parameters.xml
// exporter/templates/cat1/_telecom.xml
// exporter/templates/cat1/cat1.xml
// exporter/hqmfr2_template_oid_map.json
// exporter/hqmf_template_oid_map.json
// exporter/hqmf_qrda_oids.json
// DO NOT EDIT!

package exporter

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesCat1_Xml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x51\xd4\xd5\x55\xc8\xcb\x57\x28\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x48\xcb\x2f\xcd\x4b\x51\x28\xcf\x2c\xc9\x00\x09\xe7\x67\xa6\x28\x14\x17\xa4\x26\x67\xa6\x65\xa6\xa6\x28\xe8\xea\xda\x01\x02\x00\x00\xff\xff\xf0\x89\x3e\x43\x30\x00\x00\x00")

func templatesCat1_XmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_Xml,
		"templates/cat1/_.xml",
	)
}

func templatesCat1_Xml() (*asset, error) {
	bytes, err := templatesCat1_XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_.xml", size: 48, mode: os.FileMode(420), modTime: time.Unix(1463512525, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_2168401113883102024323Xml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x57\x4d\x6f\xe3\x36\x10\xbd\xef\xaf\x98\xb2\x7b\x68\x17\x15\x65\x39\x6e\x90\x04\x49\x8a\xc0\x76\x8a\x00\x4d\x5c\xd8\x42\x7a\x59\xc0\xe0\x4a\xb4\x4d\xac\x2c\x0a\x24\xed\xc4\x10\xf4\xdf\x3b\xa4\x3e\x22\xc7\x4a\x76\xb7\x9b\x02\x3d\x14\xc9\x41\x22\x67\xde\x0c\x87\xef\xcd\xc8\xe7\x3c\x35\x6a\x77\xf9\x0e\x00\x9f\x22\xb9\x49\x0d\x57\x10\x25\x4c\xeb\xa1\x8c\xf9\x05\x19\xdf\x0d\x09\xac\xa5\x8c\xeb\xd7\x7b\x62\x8d\xd1\xfc\x07\xcf\x83\x71\xe3\xc2\x22\x23\xb6\xc2\x08\xae\xc1\xf0\x75\x96\x30\xc3\xc1\xf3\x2a\xd3\x7a\xe5\x26\x06\x25\xa5\xb9\x20\x7d\x1a\x1c\xd3\x93\x41\x8f\x06\x34\x08\x8e\x4e\x4e\x8e\x68\xd0\xa3\x7d\xfc\xef\xd3\x01\x1d\x9c\x12\xc8\x73\xb1\x00\xa1\xa7\x7d\xa0\x63\x9b\xe0\x8c\x23\xbe\x4c\x8b\x22\xcf\x79\xa2\x79\x51\xf0\x47\xc3\x53\x8d\x4b\x08\xd6\x0b\x06\x5e\xef\xd8\xeb\x9d\x12\xdc\x4d\xe3\xa2\x00\xbf\x33\xc7\x8c\xab\x85\x54\x6b\x1e\x7f\x57\x8a\x03\x7a\x44\xfb\x47\xff\x20\xc5\xa0\xef\xf5\x82\x83\x14\x45\x1d\x30\x40\xdc\x63\x8c\x36\x70\x11\x7f\x25\xd0\xf2\xcf\xf3\x94\x3f\x4c\x59\x1a\xcb\x75\x51\x90\xca\x35\xcf\xdf\x67\x8a\x2f\xb8\x52\xdc\xdd\xce\x8c\x1b\x0d\x67\x17\x60\xe4\xcc\x28\x91\x2e\x67\x89\x88\x38\x90\xd9\xdd\xe4\x76\x3c\xf2\x86\x21\x01\x72\x33\x1c\x79\xa7\xde\xf0\xb6\x7a\x0c\x7a\xe5\xf3\xf0\xcf\x90\x14\x45\x0d\x8a\x71\x15\x1b\x4a\x2c\x59\x6a\x2c\x1e\xd1\xb1\x89\xce\xb6\x2c\xd9\xd8\x10\x17\x1f\xc9\x8f\xb9\x7b\x99\x6b\x6e\xe6\x52\xc4\xc5\x47\xd2\xf2\x96\x99\xad\x42\x95\xc8\x2d\xcb\x80\x34\x49\xce\x23\xcc\xd2\x7a\x69\x02\x1d\xa9\x13\x17\x18\x8d\x5c\x64\x34\x69\x27\xd2\x04\xf0\x3f\x58\x94\x91\xd0\x78\x5d\xbb\xfd\xd2\x43\x1d\xfc\x83\xff\x55\xe6\xc4\x71\xdf\xc6\x27\x2d\x8f\x86\x1b\xc4\xe5\x4b\x1f\xd7\x09\xa9\x8f\xe2\x1c\x6e\xd2\x85\x24\x40\x81\xd8\xed\x70\x97\x71\xd2\x46\xaa\x70\x90\x50\x8f\xe6\x32\xcf\xf7\x22\xd2\x11\xd7\x91\x12\x59\xc9\x93\x73\xdf\xd9\x94\xe6\xda\x30\xb3\x71\x9a\x83\xc8\x29\x2d\x92\x98\x06\x37\x3c\xae\xaf\xfb\x9c\x2f\x16\x16\x66\xcb\x43\xb1\xe6\xe5\x5a\x45\xf1\xbf\x38\x60\x10\x4c\x12\x12\x29\x3f\x03\x92\x1c\xcc\x8a\x03\x8b\xd7\xc2\xf8\xb1\xd0\xd1\x8a\xa9\x25\xda\xa0\x9f\x06\x3c\xb8\xdd\x7c\x52\x3b\xd2\x18\x17\x76\xc0\x14\xb7\x0f\x8a\x53\xb8\x59\x40\x2a\xcd\x2f\xf0\xc0\x61\xc1\x92\x04\x3e\xb1\xe8\xb3\x85\xb7\x8e\x66\x97\x89\x88\x25\x80\x19\x2b\xe3\x23\x99\x21\xc6\x6a\xd1\x46\x4a\x8e\x05\x6e\xd3\xe6\x69\x79\x80\x37\x1a\x5f\x69\x2d\x96\xe9\xfe\x05\xd0\x2b\x9b\xa0\xb3\xda\x5f\x9f\xd5\xde\x55\x31\x4b\x5a\xa6\xf1\x17\x01\x47\xf5\x59\x3b\x40\xc7\xa5\x7f\x03\x79\x9e\xc8\x07\xc4\x75\x54\x9e\xa8\xbb\x4d\x92\x5c\x27\x6c\x8b\xa5\x7b\x4a\xbe\x28\xfc\xa6\xce\x2b\xb1\x5c\x75\x9b\xf3\x1a\xb8\xbe\x28\xbf\xe3\xa6\x5c\xb7\x78\x21\x59\xcb\x4e\xa9\x45\xc9\x8a\xe6\xc0\x71\xc7\x76\x27\x8f\x5f\x03\xaa\xba\xcd\xbb\x46\x0d\xe0\xb9\xbf\x05\x8b\x44\x22\xcc\xce\x91\x0d\x96\x12\x79\x61\x6f\xbe\xda\x75\x6a\x78\x4a\xbb\xab\xc9\x35\x69\x1e\x1c\x2b\x54\x2c\xd5\x28\xed\x6b\x65\x9b\x55\x65\x87\x55\xc9\xb0\xa8\x22\x12\x19\xc3\xae\x82\x1c\xe2\xe5\x40\x99\x4c\x7f\x27\x97\x8d\x51\xc5\xe7\x1a\x02\x2c\x06\xfc\x84\xaa\x31\x22\x65\x16\xfd\xe7\xc3\xd6\x5d\xf9\x7d\x5b\x03\x3f\x09\x88\xbf\xef\x6e\x09\xd3\x75\xbd\x2f\x1f\x8e\x3e\xa3\xc8\xf3\x53\x4e\x65\xc2\xdb\xa3\xf4\x8f\xc9\x70\xbc\x77\xd6\xea\x46\xee\x26\xe1\xf8\x0c\x62\x1c\x04\xa8\x39\x14\x2d\x8e\xa7\x2a\xca\x7c\xab\xe7\x6b\xec\x3b\xa8\xbc\xba\xad\xae\x98\x5e\x51\xd0\x2b\xb9\x49\x62\xb8\x81\xd8\x6a\x52\xe8\xdf\xa0\x69\x60\x6d\xe8\xf7\x35\xd0\xbd\xc6\xf6\x35\x4e\xf8\xba\x6a\xe9\x55\x3b\xc3\x56\x4c\x5e\x3b\xa0\x6b\xcd\x3b\x8d\xa5\x05\xe2\x2a\xa3\x49\x47\x9c\x26\xca\x04\x8f\x80\xe0\x4b\x6e\xc2\xd6\x0a\xc5\x50\x23\x66\xd8\x50\x09\xec\x36\x82\xd1\xf6\x0b\x90\x70\x7a\x75\x37\xbb\x1e\x4f\xe7\xd7\xd3\xc9\x2d\x39\x04\xdf\xea\x90\x2d\x2d\xac\x9d\x42\xf7\xd5\x10\xba\x32\x38\xe1\x3e\x6d\x90\x05\xed\xe0\x87\xce\x6f\x38\x8c\x5c\x1e\x1d\x35\xfe\x86\x69\xf4\x75\x6e\xe4\x79\x8d\xcf\xfd\x67\xa4\x7a\xe2\xd0\xde\xd6\x53\xfb\x2d\x35\x5f\xbf\xbd\xa8\xd0\x50\x7e\x59\x9f\xa3\x59\xf8\x8a\x3e\x43\xf9\xef\xa8\xb3\xff\x7d\xea\x0c\xe5\x7f\x5d\x9b\x6f\xa4\x99\x70\xf2\xbf\x62\xde\x58\x31\xfb\xcf\x07\xda\x99\x72\xa6\xf7\xe6\x5f\xeb\x73\x51\xb9\xbd\xf2\x83\x91\x1e\xc0\xe1\x67\x41\xfd\xc9\x75\xf9\xce\xbe\xd8\xdf\x5d\x7f\x07\x00\x00\xff\xff\x99\x2d\xc5\x9e\x7f\x0d\x00\x00")

func templatesCat1_2168401113883102024323XmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_2168401113883102024323Xml,
		"templates/cat1/_2.16.840.1.113883.10.20.24.3.23.xml",
	)
}

func templatesCat1_2168401113883102024323Xml() (*asset, error) {
	bytes, err := templatesCat1_2168401113883102024323XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_2.16.840.1.113883.10.20.24.3.23.xml", size: 3455, mode: os.FileMode(420), modTime: time.Unix(1464192008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_addressXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\x3d\xca\xc3\x30\x0c\x86\x77\x9f\x42\xe4\x00\xc9\x05\xfc\x05\x3e\xb2\x76\x0b\x5d\xba\x99\x58\x94\x40\x71\x82\xe5\x0c\x45\xe8\xee\xf5\x8f\x06\x97\x7a\x7b\x7f\xf4\xbc\x60\xeb\xbc\x8f\x70\x11\xfe\x0d\xcc\x80\xb4\xb9\x13\x01\xc6\x3b\x21\x88\x0c\xb3\x81\xfc\x98\xa3\x0b\x4f\x84\x71\x4d\x11\x31\x89\x54\x17\xc0\x52\xd5\xff\x99\x80\x44\xb7\x3d\xe0\xcc\xac\x88\x51\xc4\x4e\xbf\xb9\xf2\x30\x78\xa5\xd8\x6d\x4f\xef\xee\x6c\xc9\xb2\x9c\x56\xdb\xe8\x8a\x4b\x3d\x79\x2d\xba\xe1\x4b\xd0\x4a\xe7\x91\xd5\x6b\x39\x7c\xdf\x7c\xec\x67\xe9\x75\x99\x6e\x1e\x57\x48\xf1\x6b\xb6\x39\x75\x59\x43\x63\xa7\xf2\x37\xb3\xf9\x04\x00\x00\xff\xff\x7b\x8d\x9d\x48\x23\x01\x00\x00")

func templatesCat1_addressXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_addressXml,
		"templates/cat1/_address.xml",
	)
}

func templatesCat1_addressXml() (*asset, error) {
	bytes, err := templatesCat1_addressXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_address.xml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_authorXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x92\x4d\x6f\xa3\x30\x10\x86\xef\xf9\x15\xb3\x1c\x57\xc2\x68\xef\x2c\x12\xd2\x6a\xd5\x4a\x49\x5b\xa9\xb9\xf4\x54\x4d\xf1\x40\x2c\x81\x1d\xd9\x86\x7e\x20\xfe\x7b\x8d\x4d\x48\x48\x90\x7a\xb3\xdf\x79\xe7\xf1\x7c\x38\xfd\x15\xc7\xf0\x7c\x97\x6f\xb7\x70\xc0\x8e\xe0\x0f\x63\xbf\x01\x5b\x7b\x50\x9a\xc1\x2e\x7f\x81\x37\x02\x4e\x9d\x28\x08\x94\x86\x23\x69\xa3\x24\x83\x38\xce\x36\x69\x70\x65\x1b\x80\xd4\x8a\x86\xa0\xc3\xba\xa5\xbf\x51\xdf\x03\x99\x02\x8f\x04\x6c\xef\xe4\x61\x88\x20\xf1\x26\x34\x46\x54\x92\x78\x3e\xe7\xf5\xbd\x46\x59\x39\xe3\x3d\x37\xc3\xe0\x84\x51\xb2\xd4\x1c\x6b\xb4\x04\xd1\xab\xe0\xec\xa3\xa9\x23\x60\x3e\xd8\xf7\x24\xf9\x74\x9a\xf2\x72\xce\x35\x19\x43\xab\xd9\x18\x82\x3f\x20\xf6\x54\x53\xa1\x9a\x55\x82\x0d\xb1\x35\x82\x3f\x8a\x12\xd8\x53\x18\xc9\x7f\xa1\x8d\x9d\x18\x73\xa7\x21\x96\x79\xd1\xc9\x12\x1b\x3a\x5d\xdc\xb5\x12\x1d\xc9\xcc\x01\xa7\x69\x2d\x49\x69\x12\xe2\x67\x7f\x89\x8d\xa8\x3f\x6f\x13\xb6\x18\xfc\x53\xfc\xf4\x5a\x72\x7e\x2e\x4d\x6e\x2b\x72\x98\xda\x10\x8c\x2d\xfc\xf3\xfb\x65\x3b\xc5\xa9\xbe\x6e\x21\x2c\x4b\xc8\x2a\x98\xe6\x72\xd2\x06\x65\x5b\x62\x61\x5b\x4d\xda\x67\x3e\x8c\xcf\x9d\x8b\x5b\x42\xd3\x64\xdd\x3f\xe3\x8c\x2a\xed\x3b\x6a\x5a\xa7\x8c\xea\x08\x59\xb8\x36\xb0\xec\x6d\xa5\xd4\xc5\xb6\x2e\x16\xab\x74\x85\x52\x7c\xa1\x15\x6e\x7e\x61\xbb\x8f\x17\x92\x1f\xc2\x35\xd8\xfd\xf8\xe4\xf4\xe5\xbf\x03\x00\x00\xff\xff\xc2\xe2\x61\xfa\x36\x03\x00\x00")

func templatesCat1_authorXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_authorXml,
		"templates/cat1/_author.xml",
	)
}

func templatesCat1_authorXml() (*asset, error) {
	bytes, err := templatesCat1_authorXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_author.xml", size: 822, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_codeXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x52\xcd\x6a\xf3\x30\x10\xbc\xe7\x29\x96\x10\xf0\x29\xca\xfd\xc3\x09\x7c\xe4\x07\x42\x21\x2d\xc4\x7d\x00\xd5\x5a\xa7\x02\x45\x32\x92\x1c\x6c\x8c\xde\xbd\x96\x12\xbb\x56\x42\x1b\x7a\x93\x76\x67\x46\xa3\xd9\x6d\xdb\x39\xcc\x72\xc5\x70\xc3\x4d\x29\x68\x03\xff\x96\xe0\xaf\x99\xea\x0b\x04\xa5\xd5\xcd\x5e\x16\x8a\x6c\xfd\xe9\x88\xb9\xe5\x4a\x02\x09\xb0\xa6\x44\xe7\x26\xa9\x97\xb9\x50\x51\xe1\xab\xde\x60\x41\x2b\x61\x23\x55\x92\xd1\xd3\x81\x9e\x11\xa6\xbe\x38\x85\x79\xc7\x01\xf0\x24\x5e\xc0\x27\x35\x6f\x1a\x0b\xd4\x1a\xd9\xba\x6b\xc7\xcc\xa8\x15\x68\x10\x0c\x2e\x93\x7b\xeb\x31\x94\x5c\xf1\x49\x00\x1f\x1b\x63\xf1\x7c\xa5\x28\xce\x76\x4a\xaf\x87\xea\x33\x8d\x23\x5a\x2f\xd3\xb6\x11\x6e\x5b\x5b\x4d\xd7\x4a\xda\x2e\x9d\xe1\x33\x28\x4c\x6f\x31\x98\xc3\x3a\x17\x15\xc3\x43\x25\xc4\x4e\xd0\x8b\xd2\x3e\xdd\xdf\x62\xda\x3e\x10\x0a\x1a\x6b\x76\x79\x3d\xca\x3a\x77\xf7\x3a\x80\xe4\x7d\x73\x99\xbc\x1f\x5e\x92\x41\x00\x25\xfb\xf6\x2b\x59\x18\xc5\xea\x76\x9f\x51\x6b\x35\xff\xa8\x2c\x3e\x33\xfa\x7f\x00\x86\x89\x9a\xe9\x78\xa0\x23\xe0\x80\xdb\x1b\x9f\xa5\x19\x3d\x71\xb3\x9a\x2a\xcd\x4f\x5c\x52\x91\x61\x6d\x57\x5e\xe1\x87\x85\x23\x1b\x34\xb9\xe6\xa5\x3f\x3b\x97\x2e\x22\xde\x64\xfc\xb9\x74\xf1\xb7\x75\x74\x6e\xf5\x15\x00\x00\xff\xff\x12\xec\xd7\x1b\x07\x03\x00\x00")

func templatesCat1_codeXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_codeXml,
		"templates/cat1/_code.xml",
	)
}

func templatesCat1_codeXml() (*asset, error) {
	bytes, err := templatesCat1_codeXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_code.xml", size: 775, mode: os.FileMode(420), modTime: time.Unix(1464192008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_idXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\xc9\x4c\x51\xa8\xae\xce\x4c\x53\xd0\x0b\xca\xcf\x2f\xa9\xad\x2d\x02\x92\xb6\x4a\xd5\xd5\xa9\xc5\xc9\x89\x05\xa9\x30\x51\x90\x40\x5e\x4a\x6d\xad\x42\x6a\x45\x49\x6a\x5e\x71\x66\x7e\x1e\xb2\x1a\x57\x98\x20\x50\xa1\x82\xbe\x1d\x17\x20\x00\x00\xff\xff\xed\x79\x0c\xa3\x54\x00\x00\x00")

func templatesCat1_idXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_idXml,
		"templates/cat1/_id.xml",
	)
}

func templatesCat1_idXml() (*asset, error) {
	bytes, err := templatesCat1_idXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_id.xml", size: 84, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_measuresXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x6f\x6f\xfa\x36\x10\x7e\xbf\x4f\xe1\x45\xda\x9b\x6a\x04\x02\xfd\xc3\xaa\x80\xd4\x41\xbb\x22\x51\x10\xd0\xf6\xbd\x89\x8f\x12\x29\xd8\xcc\x71\xba\x31\xc4\x77\xdf\x39\x89\x13\x87\x40\xc5\xba\x5f\x85\xaa\x5c\x38\xdf\x73\x77\xcf\xdd\x63\xfc\x40\x6c\xb6\x82\x03\x57\xfd\x9f\x08\xf1\x63\x08\x54\x28\xb8\x7e\x46\xeb\xe7\x46\x23\x7d\x20\xe4\xea\xff\xfe\xe5\x71\x5e\x80\xc6\x89\x04\xb2\xc8\x70\x7e\x68\xf4\x46\xa3\x4c\x9b\xbc\xae\xc3\x98\xe0\x47\xad\x81\x28\xd8\x6c\x23\xaa\x60\xc4\xc8\x4a\xc8\xe3\x1c\xca\x73\x96\x9f\x14\x42\xf5\x9c\xb6\xeb\xdd\xba\xdd\xeb\x96\xeb\xb9\x9e\xd7\xe9\x76\x3b\xae\xd7\x72\xdb\xf8\xb9\x76\xdb\x6e\xdb\x69\x7e\x0f\x6f\x36\x7c\xf9\x2e\x66\xe7\x2c\xe6\x78\x3a\x9a\x0c\x48\x20\x18\xa4\x98\x8e\x01\x65\x22\x48\x36\xc8\xae\xe3\x66\xee\xb1\xa2\xbb\xec\x44\x4c\x37\x99\x2f\x8d\x22\xb2\xc9\xdd\x73\xfe\x89\x84\x3f\x93\x50\x02\x23\xcb\x1d\x99\xcd\x87\x0f\xfa\x1c\x67\x54\xb2\x32\xf3\x14\x4b\xff\xeb\x39\x37\x37\x5e\xf7\xb6\xe1\x39\xa9\xb9\xd8\xc5\x58\xd4\xa9\x42\x6e\x5d\xaf\xc8\x5f\x85\x2a\x82\xfe\x51\x6b\xfc\x66\xf6\xda\xb4\xe6\x6f\xd5\xcf\x27\xc4\x57\x74\x19\x01\x59\x0a\xc9\x40\xf6\x1c\x84\xfa\x2b\x64\x6a\x8d\x4f\xad\xd6\x2f\x8e\xf1\xd2\x7e\x6b\xa0\xac\xb4\xf5\x1b\x69\x9b\xa9\x4b\x1f\x0c\xf0\xab\xc6\x43\xd8\x75\xdd\xe7\x1d\x64\xac\x5b\x31\x81\x44\x49\x1a\x91\x11\xc3\x36\x86\xab\x10\xe4\x69\xff\x22\x66\x71\x30\xd9\x2c\xcf\x39\x1b\x9f\xc5\x16\x02\x8c\x19\x7c\x11\x1d\x6d\xab\x02\xfd\x6d\xa5\x42\x5f\x2d\x05\xdb\xd9\x07\xf6\x7b\x49\xf9\x07\x10\xf7\x70\xf8\xba\x0f\xac\xbf\xdf\x43\x1c\xd0\x2d\xfa\x4e\x70\x1a\x0e\x07\x8c\xce\xbe\xf2\x7a\x9e\xbd\x3c\x2d\x40\x8d\x86\x97\xb9\xe6\x55\x66\x8d\xb8\xec\xc8\xf9\xd0\xc7\x6f\xab\x7d\xd1\x65\x03\x67\x56\xc9\xf8\xbd\xdd\x19\x34\xf5\x08\xe5\xb3\xd5\x2c\x87\x2b\x5d\x25\xcf\x75\xaf\xc8\x54\x7e\x50\x1e\xfe\x83\x49\xff\x4a\x80\x06\x6b\x1c\x67\xae\x68\xc8\x43\xfe\x41\x28\xae\xc4\x0a\x24\xf0\x00\xf7\x5b\x10\xca\x49\xc1\xb7\xd9\x88\xe3\xbe\xfb\xc8\xa8\x2c\xf1\x85\x89\x4e\x82\x88\xc6\xf1\x20\xdd\x9c\xc1\xf8\x6d\xf1\xfa\x38\x77\xc8\x46\x08\x96\xbd\x7a\x7c\x9f\xd8\x03\x7d\xa1\xb8\xcc\x8b\xec\x4c\x3a\x59\xdf\xfe\x83\xbc\x74\xdc\xdf\xba\x66\x3f\x2f\x81\x86\x3a\xb6\x2d\x6d\xdf\xc1\xbf\xab\xe0\x87\x8c\x20\x4b\xc0\xf5\x0c\xf5\x9c\x72\x4e\xf4\x8c\x54\x1c\x51\x9c\x54\x92\x76\x34\x17\x24\x7d\xa9\x45\xa0\x80\xd5\xea\x19\x94\x94\x86\xf1\xef\x48\x18\xd2\xac\x41\x24\xc7\x15\x2f\x28\x8e\xab\x55\x58\xd4\xef\xb6\x90\xd1\x34\x7f\x7c\x9a\x3b\x95\x79\x34\x61\x86\xb9\xe4\xda\x3c\x0f\xa7\x83\xf3\x1c\x17\xc9\x2d\x9e\x1f\xc6\xe3\xfb\x4a\xcf\x3f\x73\xa1\x88\x8d\x50\x84\x85\x50\x54\x48\xb8\x27\xb3\x84\x46\xa1\xda\xe5\xb6\x49\xa2\x89\x4d\x0c\x95\x8e\x46\xc9\x1f\x6f\xa3\xa1\x5d\x97\x69\xf2\x39\x66\xae\xdd\xbb\x4e\xd7\x39\xcd\x81\xd9\x55\xbb\xc1\x56\x1d\xd3\xb7\xf1\xb0\x3a\x3b\x5a\x68\x89\x58\xa5\x46\x6d\x75\xac\x79\xc1\xb5\x3c\xa1\x4a\xd6\x55\x50\xc3\xb9\xc7\x5b\x4b\xe1\x80\xe5\x48\x45\x70\xd3\x3a\x9e\x0b\x38\x56\x5a\x07\xcc\x8e\x66\x1d\x38\xa9\x73\x27\x0b\xb4\x2b\x8b\xf1\xaa\xd4\x94\x20\x42\xed\x0a\xe0\xa9\xf2\xd5\x51\x3f\x6d\x61\x24\x9f\x34\x4a\xe0\x18\xfe\x48\x3b\xab\x69\xf8\xcd\xe3\x61\xb3\x6f\x88\x62\x5c\x4b\xed\x2b\xc4\xc7\xe8\x9f\xa5\x4d\xa5\x70\xfa\xcd\xe2\xf7\x9f\xdf\xb4\x7e\x18\xfe\x1b\x00\x00\xff\xff\x9c\x6a\x0d\x8f\x25\x0a\x00\x00")

func templatesCat1_measuresXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_measuresXml,
		"templates/cat1/_measures.xml",
	)
}

func templatesCat1_measuresXml() (*asset, error) {
	bytes, err := templatesCat1_measuresXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_measures.xml", size: 2597, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_organizationXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x90\xb1\x6e\xc3\x30\x0c\x44\xf7\x7e\x05\x9b\x5d\xce\x0f\x08\x01\x8a\x4e\x59\x32\x14\xde\x0b\xc2\x62\x0d\x02\x36\xe5\x88\x34\xd0\xd6\xf0\xbf\x57\x96\x80\x26\x83\x36\xe9\x4e\xba\x7b\xa4\xdf\x36\xd2\x01\x17\x82\xae\xc7\xf1\x86\x33\xed\xfb\xe5\x05\xc0\xbf\x3a\x07\x1f\xb4\x24\x52\x12\x53\x58\x85\xef\x2b\x41\xa2\x91\xd5\xd2\x0f\xc4\x34\xa2\xf0\x2f\x1a\x47\x81\xfe\x7a\x03\xe7\x8e\x6f\xdb\x96\x50\xc6\x1c\x76\x0d\xba\xef\x59\x38\x24\xa3\x79\x99\xd0\x08\x4e\x9f\x1c\xba\xef\x79\x3a\x41\x57\xcc\xdc\x2d\xa1\x9c\x4a\xdd\x7b\x14\x43\x16\x05\xc9\x18\xe0\x40\x17\x1a\xf8\x8b\x87\x47\xab\x44\xcb\x97\xfb\xca\x89\x42\x2d\xf4\xc7\xdb\xcb\x63\x88\x3a\x81\x3f\x17\xf9\x19\xa8\xa7\x89\x86\x38\x37\xa9\xac\x7a\x6d\xb4\xff\x84\xb7\x10\xf2\x36\x94\x9a\x11\x58\xcd\x56\x84\x3f\x37\x77\xfc\x17\x00\x00\xff\xff\x57\x28\xae\x37\x7a\x01\x00\x00")

func templatesCat1_organizationXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_organizationXml,
		"templates/cat1/_organization.xml",
	)
}

func templatesCat1_organizationXml() (*asset, error) {
	bytes, err := templatesCat1_organizationXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_organization.xml", size: 378, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_patient_dataXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x92\x41\x6b\xc2\x40\x10\x85\xef\xfe\x8a\x31\x90\xe3\x6e\xb2\x31\x6a\x0e\x6b\x4e\xb6\xe0\xa1\xd0\x52\xef\x25\x8d\x93\xba\x10\x77\x25\x3b\x05\x45\xfc\xef\x1d\xcd\x2a\x29\xf4\x64\x43\x08\x99\x65\xde\xfb\xde\x0e\xa3\x6b\xb7\xdb\x3b\x8b\x96\xca\x91\xf6\x58\x93\x71\xb6\x1c\x01\x3f\x7a\x2c\x04\xac\xb7\xc6\x03\xbf\xb4\x45\x20\xdc\xed\xdb\x8a\x70\xb5\x81\xc6\x75\xf0\x5a\x91\x61\x19\x2c\x2b\xaa\x20\x28\x41\x88\x20\x1e\x34\x77\xce\xd1\x22\xca\xa4\x9a\xc9\x22\x4f\xa5\x92\x4a\x4d\x8a\x62\x22\x55\x2a\x33\x2e\xe7\x32\x93\x79\x94\x3c\x00\x7d\x5b\xbe\xfc\x03\x9c\xe5\x0c\x56\x11\xe8\x18\x4c\x03\xe3\x2e\xfb\xb8\x8c\x82\xfd\x3f\x4d\x6b\xe8\x08\x71\x89\x07\x42\xeb\xd9\x9d\x4d\x52\x95\x0b\x95\x89\x54\x45\x3a\x46\xbb\x89\x4b\x08\x89\x4f\x27\x56\x37\x55\xeb\xf1\x7c\x7e\x30\xc1\x6f\xce\x54\xa4\xf3\x0b\xe7\xee\xcf\xb8\x9b\x75\xed\x36\x08\x97\xcf\x22\x9a\x4e\x55\x51\x88\x79\x74\x2d\xdf\x8f\x9e\xa9\x7f\x91\x66\xf2\xee\xa4\xc9\x50\x8b\xe5\x70\x84\x3a\xe9\xcf\x6e\xc1\x0f\xbc\x05\xfd\x7f\xd2\x17\x7d\x82\xae\xb2\x5f\x08\xf2\xc9\x52\x77\x5c\xd9\xc6\xf9\x90\xe7\x9a\xee\x80\xf5\x37\xe1\x3a\x5c\xfa\xd9\x75\xd7\x36\x90\xa1\xe7\x96\x5f\x27\xf7\xed\xd2\xc9\x60\xe9\x7e\x02\x00\x00\xff\xff\x30\x1d\x96\xdd\x81\x02\x00\x00")

func templatesCat1_patient_dataXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_patient_dataXml,
		"templates/cat1/_patient_data.xml",
	)
}

func templatesCat1_patient_dataXml() (*asset, error) {
	bytes, err := templatesCat1_patient_dataXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_patient_data.xml", size: 641, mode: os.FileMode(420), modTime: time.Unix(1464192008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_providersXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x41\x6f\xe2\x3c\x10\xbd\xf3\x2b\xe6\xcb\xb9\x24\x04\x28\xed\x21\x1f\xd2\x8a\x52\xa9\x17\x8a\xba\x5c\xf6\x68\xc5\x13\x62\x6d\xb0\xb3\x8e\x43\xb7\x8b\xf8\xef\x3b\x0e\xa4\x8d\x4b\x1a\x44\xbb\x55\x0f\xc1\x79\xe3\x99\xf7\x66\xde\x28\x11\x57\x71\xb9\x41\x69\x98\x11\x4a\x3e\x26\x60\x5e\x72\x9c\x29\x8e\xff\x7b\x77\x8f\x33\x6f\xda\x03\x88\x0a\xd4\x5b\x11\xe3\x7c\x4b\x30\x88\x33\x56\x14\x07\xc0\x72\xb6\x7c\xf2\xa6\x10\xfd\xd7\xef\x43\xcc\x34\x42\xae\xd5\x56\x14\x74\x0f\xf4\xfb\x36\x72\xb7\x13\x09\xf8\x4b\x7b\xca\x51\x2f\x51\x27\x4a\x6f\x98\x8c\xb1\xd8\xef\xe9\xb5\x05\x68\x26\xd7\xd8\x8e\x81\x23\x88\x2a\xc0\x24\xc1\xd8\x88\x2d\xae\xc4\x06\xa7\xc7\x53\x3a\xcf\xd4\x33\x6c\x59\x56\x52\x31\xbb\x9d\xa1\x77\x2b\x75\x6f\xc3\x0d\xf8\xdf\x0d\xd3\xe6\x8e\x19\x04\x6f\x38\x18\x4c\x06\xe1\x60\xe8\xed\xf7\x5e\xd0\x88\x4e\xc5\x3a\xfd\x28\x7c\x2e\x79\x47\x70\x14\xb4\x56\x54\x29\xf1\x43\x95\xa4\x86\x04\x21\xe3\xac\xe4\x08\x9b\x32\x33\x22\xcf\x48\x9d\x03\x37\xd4\xc5\x15\x20\x8b\x53\x78\x16\x26\x05\x42\x2e\x96\x0f\x57\xb0\x7a\x58\x5c\xc1\x6c\xb6\xf0\x8f\xda\x55\xf7\xbd\x86\x34\xda\xb2\x7c\xba\xf7\x1a\x24\x8c\xa3\xc8\x57\x35\xf9\x92\x2a\x56\x17\xb7\x9c\x88\x66\x45\xac\x25\xf2\xb9\x34\xc2\xbc\x34\xf3\x9c\xb4\xde\x9f\xdd\x7d\x7b\xe0\x34\x62\x82\x0b\xd2\xe8\xb5\xf9\x35\x9c\x46\x49\x12\xfc\x49\x29\x43\xf9\xfd\x70\xe2\xdf\x8e\x07\x7e\xe8\x87\xe1\xe8\xf6\x76\xe4\x8f\x7d\x5b\x8c\x13\x43\xf9\x05\x07\x4d\x01\x96\x09\x60\x11\xb3\xfc\x78\x03\x95\x0d\xf8\xdb\xa0\xb4\xd3\xea\xbc\x9d\xd7\xa7\x16\xe2\x28\x63\x8b\x40\xc9\x9d\x24\xa7\x27\x91\xc6\x5c\x63\x41\x3c\x90\x3f\xea\x35\x93\xe2\x4f\x65\xad\xf7\x37\x5d\xc4\xfe\xc8\x1f\x7f\x5d\xc8\xbf\xa9\x40\x7b\xc8\x27\x54\x68\x63\xdd\xaa\x44\x70\x56\x8a\x28\x68\x1f\x90\x28\x78\x9d\xfc\x69\xcf\xbd\x9d\x9e\xb2\x02\xab\xc7\xca\x6e\x0b\x75\x58\x3b\xa4\x21\x70\x66\x18\x24\xaa\x94\x9c\xdc\x07\x26\x25\xcf\x51\x42\xbb\xb5\x34\xc6\x4a\xf3\x3a\x6f\x5e\x1a\x23\xe4\xda\x82\x08\xcf\x7e\xe2\xdb\x15\x07\xf3\xb5\x2d\x9c\xa6\xb1\x68\xfc\x87\x83\x9b\x70\x52\xcf\x7e\x97\x69\xec\x8f\x05\x85\x9e\x7a\xa6\x65\x8b\xfc\xcb\x0d\x72\x66\x7b\x38\x9b\xa3\x8b\xdc\x67\xe9\xb9\xeb\xe0\x83\x55\x50\x11\x5e\xa5\xa2\x00\xfa\xaf\x3a\x56\x77\x82\x38\x35\x57\x61\xe7\x1c\x4f\x9c\x39\x0e\xeb\xbf\xc6\xe8\x9e\xb7\xe5\x49\x25\xaa\x01\xb3\xe2\x36\xaa\xb9\xcc\x57\xe1\x70\x34\xbe\x9e\xdc\x38\x46\xea\xce\x46\x5d\xbc\x20\xdb\x68\xe4\xf2\xbf\x1e\x8f\x86\x0e\xf7\x6e\x23\xb6\x99\xf0\x9d\x01\xdf\xec\x17\x05\xcd\xaf\x81\x69\x2f\x0a\xde\x7d\x40\x4c\x7b\x7f\x03\x00\x00\xff\xff\x48\xbe\x8b\xeb\x53\x08\x00\x00")

func templatesCat1_providersXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_providersXml,
		"templates/cat1/_providers.xml",
	)
}

func templatesCat1_providersXml() (*asset, error) {
	bytes, err := templatesCat1_providersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_providers.xml", size: 2131, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_reasonXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x64\x90\xcf\x6a\xc3\x30\x0c\xc6\xef\x7d\x0a\xe3\x7b\x95\x38\xc9\x4a\x0e\x69\x0f\x1b\x1d\xf4\xb2\x42\x32\x76\xf7\x62\x85\x1a\x12\x3b\xd8\x66\xac\x04\xbf\xfb\x94\x64\x2d\xfb\x03\x3e\x58\xd2\x27\xfd\xa4\x6f\x9a\x74\xc7\x2e\xd2\xd7\x28\xbd\x35\x0c\x8e\x26\xb8\x6b\x83\x6d\xd0\xd6\xac\x41\x8c\x1b\xc6\x2a\x9c\xbf\x35\xf6\x72\x2e\xf8\x8b\x1e\x59\xb8\x8e\xf8\x64\x15\xee\x79\xdd\x9c\x5f\xf8\x81\x54\xa4\xb3\xef\x1e\xdd\xc7\xa2\x62\x6d\x2f\xbd\x5f\x25\xe7\xc7\x86\xb3\xc1\x5a\xb5\x86\xc7\xb7\x5b\x03\xb5\x04\x1c\x46\x9a\x8b\x27\xc5\x9c\xb5\x61\xcf\x33\x10\x3b\x28\x8b\x14\x04\x08\x91\x97\x65\x0e\x22\x85\x8c\x5e\x01\x39\x94\x25\x67\xcb\xd2\xda\xd7\xd9\xef\x7d\x63\x9c\x26\xec\x3d\xc6\x88\x9f\x01\x8d\xa7\x14\x0d\x4b\x45\xb1\x15\xd9\x36\x15\x9c\xaa\x46\xc5\x98\xdc\xc9\xfa\x46\x14\x34\x78\x47\xb8\x62\x41\x3e\x2c\x04\x45\x27\xeb\x4e\xa3\x7b\xb6\xee\x64\x02\xba\x4e\xb6\xc8\x60\x35\x0a\xe6\x3b\xfe\xb8\xd5\x04\xe9\xc2\xab\x1e\xf0\x8e\xa8\x92\x1f\x76\xcc\xa9\x2a\xf9\xe7\xe3\x61\xf3\xbd\xd6\x57\x00\x00\x00\xff\xff\x6e\xb9\x4a\x79\x8a\x01\x00\x00")

func templatesCat1_reasonXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_reasonXml,
		"templates/cat1/_reason.xml",
	)
}

func templatesCat1_reasonXml() (*asset, error) {
	bytes, err := templatesCat1_reasonXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_reason.xml", size: 394, mode: os.FileMode(420), modTime: time.Unix(1464192008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_record_targetXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\x5d\x6f\xea\x38\x10\x7d\xef\xaf\xb0\xf2\xba\xaa\xf3\xd5\x96\xec\x2a\x45\xa2\xd9\xf6\x5e\x24\x6e\x17\x01\xab\x95\xf6\xcd\x25\x53\xb0\x94\xd8\xc8\x71\xaa\x76\x23\xfe\xfb\x8e\x93\x00\x4e\x13\x96\x87\x55\xef\x0b\x8a\x67\xc6\x67\xe6\x1c\x8f\xc7\xc4\x0a\xd6\x52\xa5\x2b\xa6\x36\xa0\xc7\x57\x84\xc4\x3b\xa6\x39\x08\xbd\x90\x19\x98\x35\x21\x55\xc5\x5f\x09\xfd\x01\x29\x5f\xb3\x6c\x51\x87\x3f\x97\xf9\x0b\xa8\xfd\xbe\xf6\x0f\x46\x4c\x8a\x82\x6f\x84\x15\x83\xc8\x3c\x25\xf0\xae\x41\x14\x5c\x8a\x7b\xa7\xaa\xa0\x58\xb3\x1d\x9c\x81\x76\x88\x92\x52\x9f\x0d\x3b\xe1\x3b\xc4\x1d\x1f\xeb\x80\xac\x80\xf3\x29\xfd\x20\xbc\xb9\x3d\x00\xcf\x33\xb6\x86\xad\xcc\x52\x50\x7f\xa8\x0d\x13\xfc\x1f\x24\x2e\x45\x17\x4e\xa4\x2d\xda\x27\xe8\xff\x03\x6c\xc3\xc6\x2c\x4d\x15\x29\x0b\xb8\x77\xbe\xcf\x9d\x71\x47\xcf\x09\xba\xa0\x28\xa0\xb0\x08\x55\x95\x62\x62\x03\xc3\x4e\xcb\xbd\xd4\x0a\x40\x77\x7c\x98\xac\xa8\xad\xed\xd6\x19\x17\x30\x3e\xa9\xbb\xdf\xc7\x6e\xdf\xdf\xc1\x3e\x95\xdd\xe2\xad\xb9\xfe\xb0\x20\x12\x5c\x1a\x98\xda\x7c\xd5\xc9\xcb\xb4\x9d\x6b\x69\xd6\x4d\x42\xe3\xb0\x43\x77\x12\x6d\x59\x22\x53\x3b\xfe\x6f\xbe\x33\xd1\x96\xaf\x53\x85\x2c\x85\x56\x9d\x42\x1a\x0b\xa9\x8b\x69\xbd\x57\xc3\x3c\xfa\x2d\xd3\x17\x21\xf0\x02\xf2\x50\xaa\x8c\x8b\x8d\x96\x82\x2c\x52\xfa\x9f\x52\x35\xb2\x3c\x40\xfa\x8a\x7d\xfa\x59\x8d\x56\x8b\x1f\x93\x1e\x79\x9b\xba\xe7\x8f\x42\x6f\x98\xf0\x91\xee\x9f\xcb\x1e\xb9\x4e\x67\xb9\xa6\xb5\x1a\x4f\xac\x21\xc3\x5b\x93\x37\x8d\xf6\xd7\xdc\x21\x6f\x2c\x2b\xf1\x13\xed\xbf\xfd\xe2\x5f\x8f\x22\xff\x3a\x18\xf9\xd7\xa1\xe7\x79\x4e\xdb\xa5\x87\x39\x70\xc0\x8e\x05\xcb\xed\x32\x36\xfc\x0d\x84\xa5\xf9\x13\x57\x85\x36\x82\x37\x8e\x53\xe0\x2b\xcb\x79\x66\x9f\xce\x8c\x35\x81\xad\xe3\x80\xef\xda\x09\xf0\x5e\xe4\x5c\x70\x54\x19\xab\x78\x83\x6f\xc8\x0b\x94\x11\x82\xac\xf1\xc7\x9e\x0a\x8d\xcb\x8c\x01\xe3\x59\x7e\x14\x1a\xf2\x7b\x27\xa0\xfe\x1d\x8d\x6e\x3c\xea\x53\xdf\x0f\xa3\x28\xa4\xb7\xd4\xb7\x43\x9e\x31\x19\xde\xb9\xd9\x88\x4c\x06\x32\x39\xc7\x19\x10\xbf\x70\xa5\xb7\x2b\x9e\xc3\x41\xb3\xaa\xd2\xb8\x5a\xc9\x27\xa9\x72\xa6\x09\x7d\x30\x01\x29\x1e\x25\x71\x02\xcf\xbb\xf3\x7c\x2f\x70\xb0\x1c\xb7\x7b\x99\x17\x38\x13\xec\x2e\x53\xb8\x1e\xe4\x63\x02\xa9\xf1\x18\x4a\xa7\xbd\xd4\x14\x8c\x0d\x9d\xf2\x62\x97\xb1\x8f\xa6\xfc\x4f\xbb\x8c\x11\x77\xb5\x5d\xd0\x23\x9b\xfc\x9e\x10\x13\x47\x98\x48\xc9\xa3\xde\x0a\x6e\x5a\xf3\x92\x6e\x77\x34\x08\x23\x67\x70\x26\x1e\xb8\x1d\xb1\x88\xcd\x10\x6a\xeb\x37\x25\xcb\xdd\x20\xd1\xe3\x2e\x8b\x2d\xe9\xc0\x5d\xe0\xdc\x8b\xfb\xf9\xcc\x67\x38\x6d\x4b\xb6\x19\x1e\xd1\x43\x4e\xd4\x25\x6b\xcd\x89\xcc\xf3\x12\x2b\xa9\x1f\x87\x71\x77\x50\x63\x45\xc8\x58\xc3\x34\x6d\xdf\x94\x7e\x75\x21\x8d\x22\xfc\xa6\xf8\x19\x38\x84\xd5\xcf\x21\x0e\xa8\x49\xa9\xb7\x52\x21\xbb\xb6\xc1\xa7\xab\xe5\xdc\x4d\xa2\xf0\xc4\xe3\x5c\x0a\x9f\x1a\xca\x3e\xbd\x31\x39\x7e\x0d\x47\xe6\xfb\x16\x6d\x3e\x0d\xcc\xd5\x39\x97\x61\xfa\xfd\xd1\x9d\x27\x49\x0f\xff\x44\xd3\x3a\x7b\x8e\x97\xeb\x9d\xd4\x07\x5e\x10\x67\xfa\xb8\x7a\x72\x88\x47\xec\xdb\xd2\x8c\x82\x0b\x1a\x5d\x1a\xe1\x17\x25\xfe\x72\x81\xbf\x56\xde\x21\x71\x41\xd8\x31\x17\x24\xec\x3e\x14\xd6\xa4\x3f\x2e\x9a\xbf\x7f\xb1\xdb\xfd\x7b\xf8\x6f\x00\x00\x00\xff\xff\xeb\x75\xb4\x8c\x2e\x0a\x00\x00")

func templatesCat1_record_targetXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_record_targetXml,
		"templates/cat1/_record_target.xml",
	)
}

func templatesCat1_record_targetXml() (*asset, error) {
	bytes, err := templatesCat1_record_targetXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_record_target.xml", size: 2606, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_reporting_parametersXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x54\x61\x6f\x9b\x30\x10\xfd\xbe\x5f\x71\xf3\xe7\x01\x36\x09\x84\x46\xa4\x52\xd5\x76\x52\x26\xad\x9b\xda\xa8\xdf\x3d\xb8\x34\x96\x00\x23\xdb\xcb\x16\x45\xf9\xef\x3b\x20\x10\xaa\xa5\x5b\x23\x21\xe4\xc3\xba\xe7\xf7\xee\x3d\x9c\x66\xba\xac\x75\x85\x95\xbb\xfe\x00\x90\x5a\xcc\x9c\xd2\x55\xb3\xa6\xea\xa3\xe7\xc1\x6a\xa3\x2c\xd0\xe3\x36\x08\x0e\xcb\xba\x90\x0e\x97\x39\xac\xb5\x81\x47\xac\xb5\x71\xaa\x7a\x81\xef\xd2\xc8\x12\x1d\x1a\x0b\x47\x04\xf0\xbc\x23\xc8\xa8\xc9\x68\xed\x16\x2c\xf4\x45\xec\x27\x53\xee\x0b\x5f\x88\x49\x92\x4c\x7c\xc1\xfd\x90\xca\x99\x4f\x5b\x2c\x38\xf6\x65\x3a\x47\x68\x5e\x0b\x16\x45\x22\x99\x79\x57\xac\x2d\x9f\x76\x96\x20\xcf\xc1\xc4\xa3\x6e\xa7\x5c\x81\xd7\xe7\x18\xa6\x41\xb7\xd7\xb3\xfb\xed\xba\x25\x15\x85\xb2\x43\x41\xa5\xa2\x73\x46\x10\x35\x1a\xa5\xf3\x39\xec\xf7\x4e\x95\xb8\xd2\x9f\xb5\x29\xa5\x03\xff\xc9\x49\xe3\xee\x48\x21\xb0\xaf\xba\xfa\x04\x3c\x84\x2f\xb2\x82\x90\xf3\x18\x44\x34\xe7\xd3\x39\x8f\xc0\xe3\x33\xce\xd9\xe1\x00\xde\x5f\xfd\xf7\x55\xfe\xde\xee\x34\x68\x39\xf5\x7c\x83\x13\x61\x52\x35\x28\x49\xc9\x4d\xb3\x03\xb7\xab\xf1\xb6\x9d\xdf\xdd\xe3\xf2\x99\x0d\x5d\x32\x73\x90\x15\xd2\xda\x6e\xf3\xe6\x76\xc5\xa0\xd4\x3a\xef\xca\xfb\xe7\x07\x36\x9a\xc1\xe5\x11\x40\x0b\x37\x74\x42\xef\xff\xc5\x19\x98\xf8\x49\xef\x62\xe7\x42\x0e\xa4\x0c\x2b\x4b\xa9\x5a\xb0\xfd\x5e\xe5\x24\x4f\xad\x15\x1a\x1a\xe0\xb2\x7a\x65\x40\x3f\xcb\xc3\x81\xc1\x18\x63\x94\xa5\x30\x0a\x85\x88\x39\x9f\xfe\x3f\x4d\x57\x31\x83\x5c\x59\x62\xbe\x7b\x20\x6d\x0b\xf6\xed\x87\x45\xb3\x95\x6d\xbe\x4f\x81\x7a\xc5\x16\xd7\xeb\xe6\x07\xd8\xe2\x8a\x3c\x3e\x7d\x6f\xc2\xa5\x7f\xc1\x56\x16\x3f\xb1\x11\xf1\x66\x82\x1a\xdf\xb9\xe0\xa1\x88\xf8\x94\x47\x64\xf9\x18\x9d\x50\x36\xea\x65\xf3\x16\xcc\x10\xa4\x7f\x82\xa4\xc1\x59\x8e\x69\x40\xb9\xe8\xb3\xd4\x06\xa8\xbd\x10\x82\xe1\x46\x48\x83\xd1\x55\xf1\x27\x00\x00\xff\xff\x43\x00\xc8\x07\x37\x04\x00\x00")

func templatesCat1_reporting_parametersXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_reporting_parametersXml,
		"templates/cat1/_reporting_parameters.xml",
	)
}

func templatesCat1_reporting_parametersXml() (*asset, error) {
	bytes, err := templatesCat1_reporting_parametersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_reporting_parameters.xml", size: 1079, mode: os.FileMode(420), modTime: time.Unix(1460741990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1_telecomXml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb2\x29\x49\xcd\x49\x4d\xce\xcf\x55\x28\x2d\x4e\xb5\x55\xaa\xae\x4e\x2d\x4e\x4e\x2c\x48\x55\xd0\x0b\x2d\x4e\xad\xad\x55\x52\x28\x4b\xcc\x29\x05\x8a\x03\x15\x59\x69\x23\x24\xc3\x40\xa2\x20\x69\x7d\x3b\x2e\x40\x00\x00\x00\xff\xff\x72\x45\xed\xd2\x41\x00\x00\x00")

func templatesCat1_telecomXmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1_telecomXml,
		"templates/cat1/_telecom.xml",
	)
}

func templatesCat1_telecomXml() (*asset, error) {
	bytes, err := templatesCat1_telecomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/_telecom.xml", size: 65, mode: os.FileMode(420), modTime: time.Unix(1462198733, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1Cat1Xml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x4b\x6f\xdb\xc6\x13\xbf\xeb\x53\xec\x9f\xa7\x7f\x0b\xf0\x29\xd9\x56\x0c\x5a\x81\x22\x35\xb0\x01\xdb\x71\x2c\x07\x6d\x4f\xc6\x9a\x1c\x49\x44\xc8\xa5\xba\x5c\x4a\x56\x0d\x7f\xf7\xce\x2e\x5f\x4b\xea\x61\xb7\xcd\xb1\x81\x0e\xcc\xec\xbc\xe7\x37\x33\xbb\xf6\x3f\x3e\x27\x31\x59\x03\xcf\xa2\x94\x5d\x18\xae\xe5\x18\x04\x58\x90\x86\x11\x5b\x5c\x18\xb9\x98\x9b\x43\xe3\xe3\xa8\xe7\x4f\xe2\x88\x45\x01\x8d\xa7\x69\x90\x27\xc0\x04\x41\x31\x96\x9d\x3f\x67\xd1\x85\xb1\x14\x62\x75\x6e\xdb\x9b\xcd\xc6\xda\xf4\xad\x94\x2f\x6c\xcf\x71\x5c\xfb\xb7\x9b\xeb\x59\xb0\x84\x84\x9a\x11\xcb\x04\x65\x01\x18\xbd\x42\x0c\x15\x73\x76\xbe\x8c\xcf\x4c\x64\x3e\x5f\xf7\x2b\xfa\xf9\x3a\x0d\xba\x67\x36\xd2\xea\xf3\x2c\x14\x1d\x06\x49\x31\x46\x3d\x42\xfc\xff\x99\x26\xf9\x7a\x3f\x1d\x93\x4b\xa0\x21\x70\x62\x9a\x8a\xcc\x81\xc6\xc9\x24\x0d\x81\x60\x50\x70\x61\x7c\x9b\x19\xb6\x3a\x10\xdb\x15\x5c\x85\x84\xa7\xa9\xb8\x30\x3c\xcb\x3d\xb5\x86\x03\xc7\x72\x2d\xd7\xed\x0f\x87\x7d\xfc\xe8\x63\x26\x9e\x05\xb0\x22\x33\x77\x5f\x26\xd3\xc7\xcb\xa9\x83\xff\x06\x4e\xa9\x42\x9a\xfc\x36\x23\xf7\xd2\x44\x65\xf6\x01\x92\x55\x4c\x05\x10\xd4\x5d\xba\x20\x4a\xd2\x31\x6b\x8e\xe5\xe1\xcf\x93\x94\x96\x59\xcf\x71\x07\xa6\x73\x6a\x3a\x1f\x0c\x62\xb7\xe3\xd4\xd4\xfe\x6d\x43\x83\xfd\x86\x5c\xcf\x74\xdc\x96\xa1\xe9\x8d\xf9\x44\x33\x08\x7f\x8c\x49\x4f\xd7\xfd\xb0\x8c\x32\x82\x3f\xb1\x04\xb2\x88\xd3\x27\x1a\xc7\x5b\x92\xb3\xe8\x8f\x1c\x48\x14\x22\xc6\xa2\x79\x84\x09\x9d\xa7\x1c\x59\x90\x4f\x79\x10\x56\xf8\x2b\xed\x47\x95\xdd\x97\x17\xc2\x60\x73\x4f\x59\x98\x26\xe4\xf5\xd5\xe8\x24\xab\x96\x93\x65\x57\x50\xa8\x34\x04\x0d\x36\x4e\x4e\xdc\x21\x66\xc0\x50\xff\x9d\x6d\x33\x0c\x6e\x5f\x40\xa7\x32\x75\x0d\xcb\x2d\x4d\x50\xf6\xfa\xcb\xd5\xed\xc4\x20\x61\x94\x61\x3e\xb6\x05\xed\x6b\x4e\xe3\x48\x6c\xc9\x0d\xd0\x2c\xe7\x80\x40\x59\xa5\x5c\x54\xf8\x8b\x44\x0c\x23\xe5\xdc\x15\x0b\x64\xc0\x41\xc5\xe1\xdb\xc5\xe1\xbe\x4c\xd5\x81\x04\x88\x6c\x81\xa5\x23\x22\x4a\xea\x60\x60\x3e\x87\x40\x44\x6b\x78\x90\xc4\x35\x8d\x73\x50\xa9\x91\x3c\xb7\xe9\xa6\x49\x4c\x90\xb2\x79\x91\x64\xe5\xa2\xd6\x20\xb7\x6f\x85\x7f\x62\x79\x27\xa5\x96\x98\xb2\x45\x4e\x17\xa0\x89\x03\xd3\x52\xcf\x55\x38\x88\x9e\x15\xba\xda\x54\x8d\x90\x97\x97\x0a\x38\xc4\x78\xe4\x10\xa4\x3c\x7c\x14\x94\x2f\x40\x58\xd8\xe9\x06\xb1\xee\x15\xed\xf5\xb5\x57\xb2\x47\x73\x62\x15\x1d\x86\xb4\x82\xc4\xd1\x38\x54\x54\x6b\x9c\x8b\x65\xca\xb3\xf2\xb4\x63\x81\xaa\xc3\x52\x75\xad\x00\x58\x58\x7e\x2b\x67\x67\x97\xe3\xeb\x6b\xb2\xa4\x6b\x20\xae\x65\xfd\x4c\x4a\x21\x72\x33\xfe\x9d\x3c\x61\xe2\x61\x1d\x61\x85\x10\x8d\x2b\x9c\x96\x29\xb3\x4a\x43\x0f\x58\x94\x82\x95\xa4\x73\x55\xa2\x89\x8e\xb7\x88\x15\xe8\x85\x67\x8a\xee\x80\x2c\x23\xad\x74\x51\x21\xbf\xa9\xa0\x24\xcb\x9f\x92\x28\x93\x9d\x88\xb3\x18\x21\xcc\x6d\x0e\x8b\x28\x13\x7c\x6b\xa9\x9c\x35\x5e\x4a\x73\x41\x9e\x09\x9c\xd0\x94\xed\xb7\x58\x00\x25\x43\x08\x12\x5a\x7c\xc7\xb0\xa0\xb1\xf2\x52\x56\x3c\xa0\x02\x9d\x2d\x1d\x53\x9a\x2b\xe7\xb0\x7b\x64\xcd\x38\x64\xc8\x57\x88\x16\x25\xc4\x6d\x80\x91\x2f\x28\x8b\xfe\x54\xa0\xb3\xea\x4a\x6a\xa9\xab\x49\xb5\x7f\xa3\x32\x47\x3e\xc5\xd8\x16\x0c\xc2\x49\xf7\xa4\x53\xa8\x96\x8d\xa2\x5c\x65\x7d\x6b\x49\xeb\x8b\xc6\x53\x97\xdb\xb7\x0f\x98\xf0\x6d\xcd\x9b\x76\x1a\xf7\x65\xe5\x40\x42\xb1\x42\x98\x02\xcc\x50\x51\x7b\xb2\x59\xa6\x8a\x2c\x24\x77\xe9\x82\x4a\xb8\x1e\x40\x95\xfd\xa6\x5c\x1d\x30\x58\x45\x67\x43\x0c\xca\x4e\x82\x7c\x12\x69\x65\xfe\x8f\xe7\x58\x39\x3f\xd6\x7d\xaf\x93\xbd\xcb\xad\xc6\x8d\x3e\x10\x20\x0b\xe8\xaa\xdd\x3c\xb5\x1e\x4b\xce\x8e\x6a\x50\x1c\x56\x28\xb3\x4d\x05\x8e\x35\xad\xf9\x67\x9a\x50\x55\x8f\x5f\x50\xaf\xd8\x36\xf5\xd6\xb4\x5d\x4d\x35\x85\xfb\x5b\xba\xf1\xea\x2a\x6c\x9a\x7b\x07\x37\x51\xd8\x6e\xee\x6e\x83\xbf\xad\x7e\x1c\x86\x98\xf6\x0c\x8e\x18\xa1\x05\xcb\xbf\xb5\xf4\x80\xf5\x0e\xd2\xe4\x88\x21\x51\x70\xbc\x6d\xa8\x4e\xf2\x9d\x82\xe5\x48\x53\xe8\x33\x84\xa3\x4e\x90\xb4\x05\x6e\x06\x36\x7a\xa3\xfc\x85\x2e\xeb\x73\xc4\x33\xf1\xfa\xea\xdb\x85\x50\x47\xd3\x9c\x26\x51\xbc\x7d\xa7\xaa\x6b\x5a\x68\x2a\x85\x74\x2f\xed\x96\x9b\x4d\x17\x77\x03\x7a\xe7\x94\x68\x9b\x7f\x63\x52\xe8\xc8\xf4\xed\x7d\x0d\xd5\x93\x86\xb1\x3f\x33\x20\xd5\xa6\x28\x46\x7d\x29\x24\x8e\x6f\x59\xad\x40\x63\x4d\xac\xec\x01\xbc\xba\x68\xf7\xaf\xc9\x56\xb6\x7d\x66\x1c\xbe\x46\x7d\xb0\x70\xed\xea\x1d\x28\x95\xdc\xde\x5d\xe9\xa4\xb6\xce\xcf\xf4\x3b\x20\xc3\x61\x9d\x03\xeb\x54\xef\x58\xc4\xb7\xd6\xa7\xb8\x7d\x00\x44\xd9\x17\xd7\x11\x83\x91\xe7\x78\xe4\x53\xce\xf1\x29\xb0\x10\x38\xde\xee\x43\xcb\xb7\x77\xb9\x1a\x0d\x81\x4c\xef\x27\x08\xf1\x0a\x17\xe2\x1c\x6e\x8f\x01\x7c\x12\x08\x18\xdd\x8c\xa5\x0a\xf9\xd5\x9c\xac\x52\xa4\xc4\x72\xac\x8c\x1c\xf7\xac\xef\xf8\xb6\x46\xd1\xb4\xa7\x39\xc3\x05\x39\xfa\x36\x43\xdd\xe5\x77\x53\x63\x2d\x16\xbf\xec\x27\x92\x67\x58\xa7\x5f\xef\x8c\xaa\x64\x48\x3f\xff\xff\xd9\xd0\xfd\xc9\x3b\x73\xcd\x3e\xde\xec\xf7\x8c\xaf\xa2\x70\x18\xf1\x54\xed\x6c\xcd\x7e\x42\x59\x3e\xa7\x81\x1c\x81\xfc\x06\x5d\x8b\xe5\xa5\x6f\x54\xd6\xd1\xb7\xf7\x1e\x13\x3d\x01\xe9\x5c\x6c\x28\x87\xb6\x98\x4e\x25\xa3\x1d\xcc\x76\xdc\x21\x15\x7a\x77\x71\x86\xb4\xe6\xbb\xb3\x91\x0f\xef\x63\xbf\x5e\xff\xda\xa1\xde\x47\x5a\x00\xd1\x91\x3b\xbf\x02\xab\xc6\xcb\xb4\x20\xf1\x8d\x84\x8b\x6e\x0a\xc1\xf7\x4e\xfb\xff\xa3\x4a\xed\x00\xf7\x47\x40\xf7\x0d\xf0\x1e\x83\xef\xbb\x01\x7c\x1c\xc2\x3b\x20\xb6\xdf\x57\x99\x03\x17\xa1\xd6\x35\xe8\xc8\xf5\xe1\x1d\x23\xed\xe8\xe2\x3f\xb0\xf6\x1b\xac\x3c\x05\x8e\x4b\x4f\x42\xac\x22\xed\x0f\xcc\x81\x37\x3c\x35\x87\x5e\x10\x98\x83\x3e\x3c\x39\x83\xe0\xc3\x99\x47\xcf\xfe\x9b\x49\xc7\x67\x52\x77\x39\xee\xee\xfa\x72\xd3\x5f\x02\xe3\xdb\x7d\x1b\xbc\xda\xdf\x33\xc0\x93\xdd\xc5\xdc\xea\xcb\x43\x4b\x59\x1f\x15\x3f\x78\x42\xb4\xe7\x42\x0b\xfa\xc7\x10\xdf\x60\x6e\xff\x3a\x6f\x2e\x50\xbd\xce\x8d\x62\xc5\xd3\x35\x3e\x87\x79\xd6\x7d\x7e\xaa\x9a\x26\xab\x94\xa1\x9a\x0a\xff\x82\xe7\x6a\xac\x87\x9f\xd2\xb0\x4e\x5a\x4b\x5d\x52\x3c\xf8\x2b\x6d\xe5\xfb\xff\xc0\xe3\xb4\x7e\x61\x3d\xae\x28\xc7\xb0\x45\xe3\xc6\x7e\x81\xf2\x31\xfd\x28\x5f\x8e\x6d\x46\x05\xfd\x8e\x73\x12\x88\x75\x00\x3d\xdf\xee\xfe\x25\x6f\xd4\xfb\x2b\x00\x00\xff\xff\x72\x93\x70\x86\x04\x14\x00\x00")

func templatesCat1Cat1XmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesCat1Cat1Xml,
		"templates/cat1/cat1.xml",
	)
}

func templatesCat1Cat1Xml() (*asset, error) {
	bytes, err := templatesCat1Cat1XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/cat1.xml", size: 5124, mode: os.FileMode(420), modTime: time.Unix(1463417292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmfr2_template_oid_mapJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x5a\x5b\x6e\xe3\x38\x10\xfc\xcf\x29\x06\xfe\x1e\x08\xd1\x23\x96\x76\x2e\x23\x30\x12\x65\x13\x2b\x91\x02\x49\x19\xf1\x2e\xe6\x66\x0b\xec\x91\xf6\x0a\x4b\x39\xf1\x63\x3c\x2e\xca\x36\x9b\x41\x10\xd8\x86\x9c\x6a\x36\xab\x8b\xd5\x2d\xfd\xfd\xf2\xed\xdb\x2a\x4b\xd2\x75\x52\x15\xaf\x49\x9a\xa4\x69\x5e\x55\x79\x92\xbe\x26\x99\xfb\xad\x92\x3c\x79\xcb\x57\x3f\xe6\xab\xe6\x9f\x55\xcb\x3b\x21\x85\x15\x4a\xae\x7e\xac\x46\x66\x05\x97\xb6\x6e\xb6\x4c\xb3\xc6\x72\x2d\x8c\x15\xcd\xea\xfb\xf1\x62\x63\x99\x9d\x8c\xbb\xf0\xfc\x91\xe4\x1b\xf6\xf9\xed\x8e\xf5\x86\xff\xfc\xbe\x0c\x5f\x3c\x06\x5f\xbf\x0b\x6d\xb7\x2d\xb3\x9c\x38\x90\x75\x70\x1a\x9a\xde\x7d\xa9\x61\x7d\x6d\xb5\x70\x7f\x47\xa6\xdd\x75\x62\x64\xd2\x06\x25\xe8\xed\xc1\x04\x6d\xb8\x6c\xb9\xa6\xde\xa6\x07\xd3\x53\x73\xbb\x75\xc9\x10\x76\x4f\x1d\x48\xf9\x68\x20\x1f\xa3\xd0\xbc\xa5\x0e\xa3\x7a\x30\x8c\x91\xed\xe9\x37\xe5\x8f\x07\x83\x70\xaf\x49\xca\x66\xe6\xc3\xfc\x16\xd6\x2e\x97\x8d\x9a\xa4\x25\x5f\x71\x06\x69\xe8\x43\x74\x19\x10\x3b\x1e\x94\xe9\x67\x60\x47\xae\x3b\xa5\x87\x4b\xee\x3d\xb1\x62\xc8\x77\x1f\xb4\xd2\x4e\x02\x02\x81\x21\xc3\x7d\xc0\x9a\x37\x6a\x18\x66\x05\x0a\x02\x5f\xe3\x2a\xd7\xaa\xe1\xed\xa4\x6f\xf1\x98\x24\xe1\x6b\xac\x74\x1e\x68\x82\x84\xaf\x71\x35\x1f\x81\x6b\xcd\xcd\xd4\x5b\xea\x93\x0f\x1f\xc1\x27\x60\xd6\xee\xb8\x36\xbc\xe6\x3b\x2e\xc9\xf1\xf1\x09\x77\xc2\x17\xd2\xaa\x9e\x6b\x26\x69\x04\xec\x12\x1d\x2b\xb9\x67\xbf\x89\x78\x9e\x22\xec\x56\xb0\x8d\x54\x46\x98\x28\x72\x96\x42\xaa\xf9\x70\x1d\xf9\x54\xbf\x0b\x5c\x30\x2c\x6c\x1f\x72\xc7\x06\xd1\xef\xeb\xad\x3b\xc5\x94\xde\x07\xe1\xc3\xdd\xf6\xe1\x0b\x49\x90\xf3\xf4\xf5\x19\xe8\x30\x48\xc8\x2f\x94\x51\x9a\x53\x1a\xb6\x14\x5f\x2b\x9d\xbd\x88\xb1\x53\x7b\x0b\xf8\x5e\x11\xff\xef\xdf\x7f\xfc\x41\x40\x55\xb9\x0e\x22\x8e\xaa\x66\x4b\xdb\x7d\xc6\x8f\x29\xae\xd9\x92\xc4\x9c\xc3\x88\xa7\xb1\x59\x16\x40\x08\x0a\x2f\x13\x8d\x90\x56\x4f\xf7\x04\x50\x40\xc1\x75\xff\xd7\xf5\x8c\x87\x37\xbf\x43\xb7\xc2\x8c\x5c\x9a\xb0\xc5\xbf\x41\x06\x78\xb1\x09\xd2\x5e\x40\xb1\x5d\x5a\xf5\xdc\xb7\x6c\x82\xe4\xb6\x80\xa6\xc6\x8b\x1d\xae\xf3\x05\xd4\x1d\x3f\x70\x3b\xb8\x2b\x8d\x0d\xce\x39\xb4\xaf\x67\xf8\xb3\xe0\x74\x1d\x6f\x2c\xf5\xb1\x53\xc0\x33\xfe\x32\x84\xde\x49\xcd\x86\x7c\x3a\x00\x45\xf7\x02\x3a\x9e\xce\xa5\x29\x14\x3a\x31\x0c\x93\x14\x7f\xc5\xde\x7e\xf7\xc9\x93\x11\x1c\xea\x3d\x0c\x1a\x96\xdc\xd2\xe2\xaf\xb9\xf0\x0c\x38\x2c\xbb\x05\xf0\x9b\x6c\x78\xa2\x8d\x80\xcc\x1b\xb7\x7b\x73\x18\x0b\xf2\x0f\x36\x50\x37\x2f\x50\xdb\x97\x50\x29\x1a\x56\x48\xf6\x25\xf0\xbb\x1b\x75\x3f\x3e\x9e\x5c\x2f\xe0\x13\x75\x6f\x90\xef\x3d\x7b\x57\x9a\xcd\xce\xba\xb6\xdc\x50\x5b\xba\x02\xe6\x7d\x19\x97\x64\x44\x92\x43\x37\x73\x15\x40\x54\x67\x5b\xc0\x8a\xbb\x8e\x22\x9e\xe0\x17\xb0\xfe\x96\xb7\x82\xc2\x60\xc1\x0a\x58\x86\x27\xaa\x01\x78\xd6\x37\x4c\xf3\x7a\xa3\x58\x4f\x9c\x72\xe8\x29\xe7\xe5\x4c\xf2\x78\xc8\x77\x5a\x0d\xf5\x71\x0c\x6e\x55\x3d\x6a\xb5\x13\xf4\xf7\x45\x60\x25\xdc\x8a\xe6\x2b\x84\x43\x38\x9f\x91\x51\xfb\x0f\x58\x12\x4b\xe1\xc4\xc9\x0e\x36\x23\x2d\xdf\x89\x9b\xd5\xc8\xc6\xb1\x17\xa1\x1e\xc8\x8f\x1a\x55\x95\xb0\x03\x3c\x82\x47\x31\xbe\xd8\x7b\x7d\xc1\x46\x34\xbd\x78\xd0\x82\x36\x99\x40\xfa\x52\xd8\xe7\x40\x54\x2a\xc5\x83\xa4\x36\xd3\xbb\x03\xbb\x9d\x61\x2a\x83\x5f\x42\xc1\xf5\xa1\x53\x9c\x35\xeb\xa4\x84\x24\x3b\x61\x47\xad\xad\x12\xee\xf9\x19\x3f\x1e\xcf\x4b\xc8\xf3\x8b\xd5\x47\x29\xee\x12\x9e\x79\xbe\x3d\x27\xa2\x7b\x8e\x1b\xca\xf9\x1e\xe0\xbc\xcd\xbf\x8c\x14\x22\xec\x7b\x8e\x1b\xcb\xcb\x10\xe2\x6d\x7d\x8e\x9b\xcb\x8b\x00\xe2\xd4\x5d\x0e\x49\xbf\x80\x4d\x63\xf5\x21\xf5\x7e\x49\x7d\x94\x09\x7a\x0e\xa5\x6e\x61\xe5\x54\x42\x0f\xcd\x9d\xd9\x0f\xa3\x55\xb7\x3a\xcb\xf0\xf9\x61\x05\x3d\x9c\x07\xd5\x18\x6e\x02\xc7\xc4\x15\x74\x4d\x18\x97\xe2\xbe\x58\x05\x0d\x13\xc6\x25\xb9\x13\x89\x1d\x04\x06\x0e\xa2\x33\xdc\xd8\x6e\x92\xcd\xfc\x92\xf5\xf5\x17\x52\xa4\x6a\xce\x20\xa3\xef\x09\x81\x42\xcc\xf0\x0d\xc9\x3b\x02\xa0\x3a\xd1\x20\xe3\x7e\x0b\x22\x8e\xb0\x95\x30\x00\x2d\xcc\x9f\xb5\x6b\xd2\xf8\x66\xee\xdc\x3f\xcb\x7a\x88\x60\xa4\xf0\xb0\xf2\xd8\x14\x1e\xda\x77\xfe\xe1\x68\xe7\xfa\x54\xf2\x03\xf5\x0d\x8f\x0e\x8f\x4f\xae\x45\xc5\xaf\x3c\xcf\x17\xf1\xce\xb1\x7c\x36\x73\x91\x9a\xe2\xca\xf3\x80\xd1\x19\x3b\xca\x7c\xa0\xc4\xe3\xe2\xd3\xbe\xc7\x7c\xd8\xb7\x82\x46\xce\x3a\xdb\x66\xdc\xe2\x0f\xa3\x09\x6a\x54\xe8\xde\x4e\xa8\x56\x3d\x84\xf9\xf2\xf3\xe5\xff\x00\x00\x00\xff\xff\x0f\xaa\xcb\x7f\x59\x2d\x00\x00")

func hqmfr2_template_oid_mapJsonBytes() ([]byte, error) {
	return bindataRead(
		_hqmfr2_template_oid_mapJson,
		"hqmfr2_template_oid_map.json",
	)
}

func hqmfr2_template_oid_mapJson() (*asset, error) {
	bytes, err := hqmfr2_template_oid_mapJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmfr2_template_oid_map.json", size: 11609, mode: os.FileMode(420), modTime: time.Unix(1460741990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmf_template_oid_mapJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x9c\xdd\x6e\xe2\x3a\x10\xc7\xef\xfb\x14\x2b\xae\x57\x88\x34\x40\x61\x5f\x26\x72\x13\x07\xac\x93\x2f\xd9\x0e\x2a\x3a\xda\x77\x3f\x09\x2d\xf4\x8b\x49\xfe\x89\x67\xaa\xb3\x17\xab\x2e\xca\xf6\x37\xf6\xfc\x67\x3c\x1e\x3b\xfc\xfb\xf0\xeb\xd7\xe2\x71\x19\x6d\x97\xbb\xf5\x6a\x19\x2d\xa3\x28\xde\xed\xe2\x65\xbc\xdc\x6c\x2f\xff\x5c\xad\xa2\xc5\x9f\xfe\xa1\xfe\xcf\x22\xd3\xb9\xa9\x8c\x37\x75\xb5\xf8\xb3\x68\x94\x37\xba\xf2\x49\x7a\x54\x56\xa5\x5e\x5b\xe3\xbc\x49\x17\xbf\xaf\x0f\x3b\xaf\x7c\xeb\xba\x07\xdf\x3f\xaa\xf4\x41\xbd\xfe\xef\x5c\x15\x4e\xff\xfd\x3d\x4c\x7f\xdc\x4c\x63\x27\xcf\xc6\xfa\x63\xa6\xbc\xe6\xb4\x62\xbd\x5a\xfd\x3f\xcc\x98\xe8\x89\x24\x2d\xba\x47\x52\x55\x24\xde\x9a\xee\xef\x46\xd9\xee\x53\xd3\xa8\xca\xf3\xda\xf5\x38\xd1\xae\x83\xae\x32\x6d\x79\x6d\x88\x27\xda\xa0\xfd\xb1\x9b\x1b\xe3\xcf\xbc\x66\xac\xa7\x9a\xf1\xd2\x18\xab\x33\x5e\x23\xa6\x46\x4d\xa3\xce\xdc\xee\xd8\x4e\x34\xa1\xfb\x99\x37\x58\x28\xbe\xae\xd2\xba\xad\x3c\xef\x78\x77\x64\x64\x0e\xe1\xba\xe1\x9b\x93\x9e\x0d\x7d\xda\xcf\x81\x36\xda\xe6\xb5\x2d\x3f\x4a\x6e\xea\x60\xc9\x50\x1b\xe2\xd6\xb6\x0b\xf9\x10\xea\x2c\x8f\x5a\x9d\xd6\x65\xd9\xa7\x9b\xf9\xe4\x48\x60\xa2\xbd\x6d\xc7\xb9\x3b\x32\xaf\x0a\x73\x99\xd5\x8c\x41\xb9\x55\x85\x51\x25\x54\x05\x91\xe9\x95\x62\x6a\x86\x42\x70\x74\x3a\xb6\x75\xaa\xb3\xd6\xde\x4b\xbe\xe1\xa9\x62\x4b\x57\x06\x03\xdc\xd0\x54\xb1\xa5\x6b\x81\x2b\x35\xb1\xda\xb5\x05\x6b\x19\xb4\xa5\x8b\xc4\x1b\x55\x65\x27\x6d\x9d\x4e\xf4\x49\xf3\xd6\x60\x5b\xba\x34\xbc\xc1\x4d\xe5\xeb\x42\x5b\x55\xf1\xae\xb4\xfb\x59\x3e\x66\x49\xcc\xec\xf2\x82\x22\x97\x5d\x5e\x18\x55\x48\x5e\x18\x5c\x44\x5e\x58\x9e\xe4\x4f\x5d\x10\x57\x44\xd6\x08\x99\xe4\x66\x46\x1d\xaa\xda\x19\xc7\x5f\x4a\x3e\x92\x8b\xd1\x10\xb4\x13\x79\x5d\x9c\x02\x02\x38\x9e\x35\xd6\x5c\x95\xa6\x38\x27\xc7\x6e\xe3\x50\xdb\xf3\xfc\x31\x93\x61\x3c\x04\x37\x55\xe0\x54\xc7\xe3\xd8\xa4\xdb\x13\xfd\x93\xd4\x39\x67\x96\x8e\xf8\x5d\x0c\x85\x91\x94\x8b\x21\x38\xbf\x8b\xb1\x94\xc5\x1c\xc2\xd8\x44\xb3\xeb\x0a\xc1\x8e\x41\xfb\xad\xbd\xf3\x6d\x76\xaf\xcb\x12\x5e\x5e\x46\xe4\xb2\xf4\x15\x2f\x50\xef\xc5\x3b\x18\x2e\x56\xf6\xc5\xe4\xce\xf4\x9b\x0d\x42\xd5\xdf\x9a\x2c\x4b\x00\x05\x84\x16\xfa\x11\xdd\xf5\x0b\xd5\x1f\x16\x73\xb2\x12\xc0\x6c\x90\x94\x00\x64\x81\x94\x04\x20\xb8\x54\x0a\x40\xe0\xa4\xf7\x3b\x4d\x99\xf4\xf5\x17\x7d\xa7\x65\xc6\x35\xba\x72\x41\x0d\xa9\x59\xe0\xe0\x68\xdb\x93\x52\x1b\x1b\x70\xdf\xec\x3d\x04\x94\xa7\xf4\x01\xcc\x7c\x32\x16\x5d\xb3\xb8\x81\x25\x62\x44\x96\x6a\xc3\xd4\xac\xec\x9e\x74\x3e\xc8\xc9\x80\xb4\xde\x73\x59\x9e\xeb\xd4\xdf\xab\x65\xe6\x0f\x1d\xc1\x17\x5d\x12\x3b\xb0\x9e\xdb\x44\xe4\x89\xc9\x07\xae\xd0\x0a\xfa\x34\x2f\x9a\xe7\x4a\xfa\x69\x5e\xd6\x0a\xcd\xd3\x2b\x81\x64\x89\x2d\x10\xdc\x21\x8c\x0d\x57\x2e\x8e\x30\x3e\x7f\x20\x61\xb3\x2d\x13\x48\x18\x5b\x26\x6d\x62\xe7\x08\x64\xb3\xe8\x78\x76\x97\x23\x78\xfd\xa2\x4a\xce\xb4\xb1\xa1\xfb\x62\x23\xc8\xd0\x3a\x60\x43\x6a\x7b\x8c\x1c\xbe\xe3\xdb\xd3\x8d\xc8\x11\x36\x4b\xc3\x59\x64\xd2\x21\x81\x09\x4d\x3a\xd6\x0a\x95\x9a\x74\x2c\xac\x59\x63\x0b\xeb\x1b\x51\xc4\x42\x3d\xd7\x56\xf5\x3d\xa9\xc4\x6b\xc7\xba\x95\x27\x13\xe7\x38\x33\x3c\xac\xd6\xe4\x1c\x7f\xa1\xcb\xb5\x32\xd6\xe4\xe6\xe2\xab\x09\x42\x75\xd8\x86\xdc\x63\x8c\x7b\x20\x34\xa5\xee\x03\xd8\x2c\x89\x8d\x5b\xf2\x58\xe3\x40\x54\x75\x98\x09\x82\xaa\xc3\xf2\xba\x8c\xea\xb0\xbc\x2e\xa7\x3a\xac\x48\x95\xca\x79\x08\x9d\x74\x7c\xaa\xac\x4e\x0e\xb5\x2a\x58\x37\x98\x2b\x36\x1e\xd4\x96\x27\x3d\xdb\x7b\xad\xad\xae\x95\x78\x6e\xeb\x32\xb9\xde\xc8\xf3\x75\xd2\xd8\xfa\x64\x98\xaf\x66\xc6\x64\xf5\x70\xcf\x96\x37\x03\x2e\xc6\xbc\xda\xc5\x69\xcb\x23\xed\x85\x11\x5b\x04\x26\x26\xfa\x21\x2f\x61\x8d\xae\x9f\xf1\x12\x56\x7e\xfd\x90\x97\xb0\x24\x45\xf6\x97\xf5\xc9\xdc\x5d\x0b\x54\xd3\x14\x26\xe4\x54\x9c\x3e\xa9\xbd\x20\x05\x8f\x93\xc8\x84\x7c\x25\xf3\xb7\xde\x62\x72\x4b\xf5\xc6\x14\x2a\xf7\x62\x72\x43\x45\x3a\x36\xf8\x0a\xeb\x74\x2d\xb1\x14\x77\x22\x82\xc2\xb2\x0a\xaf\xa0\x30\x26\xbf\xa0\x30\x2e\xab\xa0\xb0\xae\x13\xbb\xa0\xb0\x1d\x39\x6b\x4e\x84\xae\xaf\x92\x0a\x76\xed\x73\x07\xb9\xef\x4a\x96\x03\x91\x2d\xb9\x49\x19\x42\x07\x5f\x61\x25\x03\xe7\x46\x15\xbc\x4c\x4a\x2a\xf9\x1d\x2e\x94\x95\xb7\x64\xf0\x7e\x18\x37\xff\x22\xb4\x27\x0f\x09\x86\x9c\xcc\x73\x87\x55\xc8\xd3\xd8\xbd\x4e\x11\x4f\x63\x68\x91\x90\xc6\xd0\xdc\x21\x8d\xed\xb6\x25\x34\x86\x8d\x97\x3d\xa8\x10\xec\x9a\x1c\xaf\xe9\x5f\x6e\xe8\xa5\xfc\xe9\x10\x8c\xbd\xa1\x48\x0a\xec\x13\x5f\xea\x5e\x14\x19\xd6\x1f\xe9\x02\x2b\xc7\x9a\x74\xf6\x08\x98\xa1\x8b\x4c\x66\x93\x4f\x33\xce\x7f\x15\x6f\x47\x6e\x18\x47\xc6\xcc\x92\xc1\x05\x85\x8e\xf5\x30\xa5\x84\x8e\xd1\x05\x84\x8e\x81\x45\x84\x8e\xa1\x05\x84\x8e\x15\xfc\x42\x42\x87\x6a\x70\x92\xed\xce\x65\xe3\xeb\x7b\x27\x70\xa1\x6f\xb8\x92\x1b\x8d\x01\xa4\x73\xda\x85\xdc\xae\xdb\xd3\x35\x11\x09\x0d\x7e\x2b\x60\x4f\x97\x24\x24\x34\xf8\xf5\x8b\x88\xd7\xa5\x90\x82\xb9\x5d\x8a\x95\x5e\xcc\x2e\xc5\xa0\xcc\x2e\x85\x6a\x2e\xb2\x8b\x9b\xb7\x55\xda\xff\xa8\x8a\xe4\x8d\xc6\xb9\xfe\x92\x6b\x00\x82\x65\x78\x23\x9d\x5c\x0a\x10\x7e\x70\x5b\x8f\x54\x17\x42\xe7\x28\x41\x76\xa4\xd4\xbe\x59\x20\x50\x7d\x45\x82\xee\xc7\x56\x45\x29\xf7\x63\x74\x49\xf7\x63\x16\x48\xb9\x1f\x2b\x86\xd8\x73\x0e\xf4\x96\x24\x49\xbd\xbc\xe4\x94\x2a\xaf\x0f\xfd\xf1\xf1\xeb\xda\x51\x32\xef\x2d\x23\x31\x3c\x34\x76\xfa\x46\xd4\xf5\x30\xec\x72\xa8\xac\x5f\xba\xd8\x32\x9a\x79\x67\x1b\x89\xe1\xa1\x63\xfb\xf1\x2f\x96\x11\x1c\xba\x14\x1d\x19\xf9\x86\x2c\xd6\x1a\xab\xf3\x2e\x85\xf5\x6d\x1c\x89\x73\xea\xcd\x80\xbf\xdf\xc1\xfc\x87\xf5\x7b\xba\x43\x78\x76\x5e\x97\x82\xdf\x3b\x16\xc9\xb0\x21\x81\xd3\x5f\xde\x74\x8b\x2e\xc1\x71\x0b\xd1\xa1\x37\x13\xc8\x9c\xea\xad\xaa\x5c\xa7\xb4\xcb\x89\x3f\xe7\x78\x9f\xc8\x6b\x6f\x37\xa4\xaf\x59\x27\x98\x77\x90\xd8\x96\x8b\x71\x90\x17\xe0\xc3\xdf\x87\xff\x02\x00\x00\xff\xff\xc4\x9a\x8a\xb6\x36\x50\x00\x00")

func hqmf_template_oid_mapJsonBytes() ([]byte, error) {
	return bindataRead(
		_hqmf_template_oid_mapJson,
		"hqmf_template_oid_map.json",
	)
}

func hqmf_template_oid_mapJson() (*asset, error) {
	bytes, err := hqmf_template_oid_mapJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmf_template_oid_map.json", size: 20534, mode: os.FileMode(420), modTime: time.Unix(1460741990, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmf_qrda_oidsJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x5c\x5d\x6f\xdb\x38\x16\x7d\xef\xaf\x20\xfc\xb4\x0b\x24\x81\x65\x3b\xb2\x3d\x6f\x85\x93\x74\x02\x4c\xa7\x41\x93\x7d\x1a\x14\x01\x23\x31\x09\xb1\xb2\xe8\x91\xe4\x6c\x8d\x45\xff\xfb\x52\x8e\x65\x53\xd2\xe5\xd7\xe5\x26\x0e\x30\xd3\x36\xb6\x73\x79\x8e\x29\x9e\x7b\xee\x25\xa5\xbf\x3e\x11\xf2\x5f\xf9\x3f\x21\x83\xe7\xbf\x97\x8f\xf7\x39\x5d\xb2\xc1\x6f\x64\xb0\xa0\x05\x23\x5f\x04\xcd\x06\x27\xca\xbb\x82\xa7\xf5\x9b\xa3\xb3\x28\x3e\x9b\x4d\x86\x67\xd1\x59\x14\x8d\x67\xb3\xf1\xd9\xf8\xec\x3c\xae\x7f\x9c\x37\x1f\xff\xbb\x48\xa9\x3e\xd8\xf6\x5d\x6d\xb0\x68\x78\x36\x92\xff\x4d\x64\xd4\x68\x20\x7f\xe1\xd7\x89\x0e\xa4\x58\x2e\xd7\x39\x4f\x68\xc5\x45\xfe\x1b\xb9\x2a\xc4\x92\xdc\xc8\x1f\x58\x5e\x91\x4a\x90\x9b\x42\xbc\xf0\x94\x15\x7e\x14\xc6\x43\x98\x83\x3a\x16\x79\xb4\x0c\xe5\x4c\x70\xe4\x4f\x70\x37\xd4\x76\xd8\x57\x04\x9e\x04\x23\x67\x82\xfa\xa1\x9c\x09\x8e\xc3\x08\xa2\xa6\x70\xa4\xb9\x0c\x2d\x0c\xb1\x73\x38\x31\x52\xbc\x60\x2f\x3c\x61\x27\xe4\x73\xfa\xc2\x8a\x92\x91\xcb\x17\xff\x19\x9b\x80\x7c\x5e\x23\xc3\x81\x9d\xc1\x9f\xbb\x81\xcf\x32\x56\x3c\x6d\x3c\x61\x9f\x1b\x61\xb7\x43\x3a\x03\x8e\xdd\x00\xaf\x56\x19\x67\xa9\x1f\xe0\x08\x5e\xfa\x0d\xe0\x76\x48\x67\xc0\x53\x27\xc0\xd7\x79\x25\xe4\x17\x42\xf3\x84\x79\x7e\xcb\xb1\x09\x34\x10\xd6\x19\xf8\xcc\x09\xf8\xb7\xc2\x5f\x62\xa7\x26\xc8\xad\x80\xce\x60\xe7\x4e\x60\xbf\xb3\x44\x8a\x00\xcb\x53\xdf\x4b\x63\x66\xbc\x34\x80\xb0\xee\x29\x6e\x68\x46\xce\xe9\x53\x2e\x4a\x5e\xca\x6b\x3a\xa9\xf8\x8b\xe7\xd5\x31\x82\x61\x37\x41\x3b\x31\xdd\x41\x9b\x13\xb3\x02\xfa\x8a\x2e\x79\xb6\x21\xbf\xf3\xb2\x12\x85\xaf\x80\xd8\xd0\xc3\xc1\xdd\x59\x98\xb3\xaf\xc2\xe2\x3a\xa7\x98\x2f\x7f\x6c\xc1\xdf\x0d\xeb\x8e\xdc\x9c\x56\x15\xe4\xdf\x59\x29\xb2\x17\xdf\xcb\x7d\xa4\xc9\x38\x7b\xe4\xdd\xb0\xee\xc8\x2d\xd9\xf2\x75\x84\x8a\x27\xe4\xb6\x5a\xa7\x9b\xa0\xb4\x39\x33\x91\xb0\x0c\xe1\x4e\xc8\x92\x41\x3b\xa3\x85\x28\x3d\x6c\x6b\x7a\x7c\x42\x34\x3f\xb2\xa4\xd7\x1e\x1b\x84\xfc\x4f\x34\x5a\xda\xe5\x81\x4b\x04\x91\x25\xdf\xc2\x0c\x48\x2e\x2a\x92\x8a\xdc\x73\x4a\xa2\x0f\xc6\xe5\x86\x15\x8f\xa2\x58\xfa\x2e\x77\xa3\x4e\x1d\x48\xf4\xa2\xbb\x13\xb1\x78\x89\x1e\x11\x74\xa2\x76\x9d\x90\xa0\x94\x6d\x31\x1b\x00\x9b\x72\x9d\x79\xaa\x57\x04\x97\x69\x00\x11\x35\xb6\x7b\xe1\x69\xb3\x1d\x65\xf2\x4c\x8b\x27\x46\xbe\xb2\xb4\x29\x99\xfe\xf1\x3b\xa3\x59\xf5\xbc\xfd\xee\x8a\x94\x5c\x71\x96\xc9\x3f\x33\xf1\x1f\xf2\xb9\xaa\x0a\xfe\xb0\xae\xd8\x3f\x3d\x49\xce\x75\x9a\x06\x0c\x7f\xba\x73\x2b\xca\x6b\x08\xb7\x65\x96\xeb\xcb\x3c\x11\xeb\xbc\x62\x05\xce\x6e\xcd\xe0\x49\xdb\x47\xc5\xfa\xad\x91\xd9\x6f\x29\xa8\x11\x7a\x3c\x83\x97\xff\x01\x34\x4e\xbc\x46\x66\x77\xa5\x60\x46\xaa\xd6\x14\xbe\x76\x0e\xb8\xf1\x7a\x75\x70\x6e\x89\x48\xd9\x7d\xca\xcb\x55\x46\x37\xa5\xfc\xbd\xbf\xb6\x2f\x37\x94\x0e\x1f\xa9\x36\xab\xed\xe8\xd2\x42\x14\x9b\x85\x7c\x65\x17\x60\xfb\x89\x8a\x3e\xed\xe1\x25\x9d\xf7\x68\xb3\x74\xea\x37\xd5\x37\xd8\xcf\x24\x5b\xcb\xc8\xf9\x3a\xcb\xee\x1f\x33\xfa\x22\x0a\xf9\x91\xaa\x58\xb3\xd6\x87\xaa\x82\xde\x27\x42\xf2\x95\xde\x45\x46\x58\x6e\xee\xdb\xaf\x29\x1f\x5e\x15\xec\x91\x15\x05\x4b\xef\xb7\x90\x4b\x56\x6d\x19\x0d\x6e\xff\xfc\xf6\xf5\xf2\xe2\x74\x71\x37\x38\x21\x83\xeb\xc5\xc5\xe9\xfc\x74\xf1\xb5\xf9\x77\x34\xdc\xfd\xb0\xb8\xb9\x1b\xfc\xd8\x05\xfb\xb5\xfd\xfb\x87\xe3\xfc\xe2\xab\x2e\xd8\x86\x1e\x66\x38\x44\xc5\x47\x66\x27\x7a\x45\x13\x9e\xf1\x6a\x43\xfe\x10\x8d\xfc\x51\xac\xca\x0d\x35\x1d\x9c\xde\x18\x08\x3d\x33\xeb\xf8\xd5\x3a\x4f\xea\xc0\x34\x93\xe9\x82\x56\xeb\x12\xa7\x10\x70\x8f\xa1\x17\x1c\xab\x14\x66\x4d\x06\x38\x20\x15\x63\x06\x77\xa4\xfa\x3c\x02\x94\xc3\x6c\xa0\x01\x2e\xf8\xd5\x01\xb7\x51\xfa\x6c\x82\x56\x89\xd9\x82\x82\x7c\xfc\xcd\xce\x0c\x2e\xd5\x20\x2a\x38\xb7\x63\xf6\x9f\xd7\x79\xc2\xcb\x7a\x89\x5f\xd0\x8a\x55\x7c\xc9\x42\xd6\xfa\x10\x9e\x96\xde\x18\xfe\xfd\x38\xb3\xed\xbc\xae\x15\xb1\x2e\x61\xe5\x20\x41\xed\xe6\x09\xec\x07\xd4\xf8\x81\x35\xf3\xc8\x87\x09\xba\x5e\x9e\xc0\xa2\xdb\xe2\x11\x52\x2b\x8f\xcd\xd2\xdb\x66\x81\xa9\x93\x61\xb5\x6a\xe1\xc7\x09\xee\xd8\x6c\x27\x01\xe4\xe8\xfa\xf8\x63\x70\x40\xe6\x8b\x09\x9c\xf7\x5a\xe8\xf1\xa9\x62\x6c\x36\xc8\x6d\x06\xf8\x2c\x01\xbb\xe4\x16\x87\x90\x04\x31\x36\xb7\x22\xbb\x2c\xfc\x73\xc3\x44\xa7\xa7\x2d\x02\xa8\xb4\x30\x36\x5b\xc0\x3f\xe8\x83\x28\x68\xdd\x5a\x26\x77\xac\xac\xc2\x44\x15\xce\x70\x9d\x21\x02\x75\x75\x6c\x36\x52\x3d\x3e\x78\x69\x85\x2f\xaa\x2e\x9b\x20\x75\x35\x1b\xa9\x1e\x17\x84\xc0\x9e\xc3\xbd\xa2\x2e\x0b\xa4\x3e\x99\x8d\x13\x8c\x1f\x2b\xb3\x1f\x8a\x09\x52\x6c\xe1\x4c\xd1\xa5\x10\x20\xb7\x66\x0f\xd8\xa3\x81\x56\xdc\xb9\xdb\x64\x04\x89\xae\xd9\x40\x01\x5c\x10\x0d\x48\x78\xf7\xad\x4f\x03\x25\xbd\x13\xb3\x79\x3a\xb4\xf8\x70\x8d\xb8\x08\xf6\xb0\x4a\x37\x11\xd9\x89\x9b\x98\x6d\x47\x0b\x77\xba\xe4\x39\x2f\x65\x9a\xf2\x3e\x88\x00\x3b\x57\x15\x3d\x10\xdb\x9d\x83\xd9\x78\xb4\x39\xec\xf2\xd1\xe3\x23\x4b\xaa\xd2\xb3\x41\x67\x67\xa1\x46\xf7\xe7\x61\xb6\x1e\x2d\x1e\x98\x03\x2c\x70\x33\x57\xc5\x8f\x3c\xc3\x32\x31\xfb\x0e\x15\xf8\x05\x2f\x57\x2c\x2f\xbd\x5d\x9f\x0d\x7a\x2f\xae\x3b\x78\xb3\xc9\x50\xc1\xa3\xfd\x45\x04\x27\x03\x05\x7f\x88\xb5\x98\x98\xad\x85\xca\x00\xe1\x2a\x22\xeb\x65\x8f\x4b\xc3\x13\x73\x1a\x6e\x4e\x23\x6e\x0f\x5b\x5e\xfe\x5c\xb1\x42\xfe\xe8\xfb\xbd\xcf\xe1\x82\xc7\x12\xdb\x9d\x82\x39\x05\xef\x87\x79\xa6\x05\x4d\xa4\xb6\xf1\x7a\x9f\xeb\x8b\xcc\x32\x74\xd7\x05\xfa\xfc\xe4\x7b\x21\x0d\x87\xf0\x2a\x86\xc7\x22\x9a\xc1\x3c\xfa\xb1\xe6\xfc\xa0\x19\x76\x91\xf1\xfa\x60\x62\x46\xee\x0a\x2e\xff\xbc\xa1\x85\x7c\x95\xaf\xa8\x77\x95\xe1\xc7\xd6\x3e\xac\xfb\x39\x42\x14\x6f\x79\x2d\x71\xef\xec\x38\x19\xc2\xe9\xd1\x6d\x0c\x77\x46\x66\x91\xd6\x8c\x76\x43\x37\xfe\xe7\x21\x60\xb5\x73\x19\xc1\x9d\x8d\x59\xb5\x7b\x63\x95\x5c\x8e\x75\x42\x2e\x17\xdf\xbe\x34\x9e\xbb\xd6\xda\x7d\x83\x5c\x08\x5f\x59\xf4\x5c\x89\xdf\x1e\x4a\x59\xdf\xef\xf2\x6c\x29\xff\x8d\xdc\x1f\x31\x7b\x04\x2d\x6f\x89\x61\x49\x2b\x96\x6e\xdb\xb5\x44\x3c\x92\x85\x90\xf4\x57\x2a\x88\xb7\xe1\xed\x32\xb2\x07\x7d\xb3\xd5\xd3\xd1\xbf\x13\x0f\x34\x49\x04\x59\xcb\xef\x9d\xd0\x3c\x25\x7f\x8a\xfc\xf4\x5f\xa5\x77\x2a\xd4\x71\x6f\xe2\xcb\x90\x5e\x9c\x46\x67\x93\x7a\x13\xc7\x85\xd2\xcd\x76\xb3\xb3\x4e\x53\x21\xcd\x7c\x4d\x1d\xd1\x1f\xc4\xbf\x9b\x6f\xb9\x30\x9f\x37\xe5\x56\x9a\x2f\x7f\xd2\xe5\x09\xb9\xe2\x79\xca\xf3\x27\x4f\xf8\xb0\x0b\x6c\x85\xee\x46\x76\x17\x14\x8b\x1d\x69\xe3\xc7\x74\x67\x34\x5e\xa4\x85\x1e\x67\xa5\xce\x2d\x3e\xa4\x8d\x1d\xdb\xcf\x80\x7d\x60\x1b\x3f\xbe\x9d\x71\x6e\x6e\x01\x74\x38\xe0\x9b\x19\x1a\xf1\x6a\xb1\x08\x69\x65\xc4\xe6\x46\xc0\x4d\x21\x12\x96\xae\x8b\xb0\x3b\x28\x62\xb8\x25\xb3\x0f\x1e\xd8\x77\x8d\x2d\xe6\xe7\xc0\x01\x5d\x11\xc5\x9a\x79\xd8\x33\x08\x29\x88\x62\x4b\x96\x38\xe0\x47\xac\xe3\x18\xee\x23\x1d\x90\xe3\xd6\x70\x6c\xd1\xcf\x03\x66\xe4\xfa\xd5\xc8\xcf\x1e\x36\x7e\xe9\xc6\x16\x67\x79\x80\x8e\x5f\xb6\xb6\x2f\x3d\x68\xc9\x5a\x32\xb0\x8a\xdf\xbf\xef\x18\x6b\x52\xae\x02\x1d\xd5\x71\x8c\xcd\x55\xff\xfe\x56\xb0\xa0\x02\x7a\xa4\x49\xb9\x96\xe0\xee\x24\x2c\x59\xb7\x19\xe7\xff\xe4\x7e\x34\x85\x56\x7f\x14\x7f\xfb\x63\x5e\x03\xdf\x69\xca\x77\x8d\x2a\x51\xd2\xa7\x30\x16\x70\x79\xd5\x1b\xa2\xf6\xb9\x17\xeb\x02\x77\x10\x6b\x6e\x4e\x01\xca\x60\xbb\x11\x82\x8e\x98\x68\x2a\xc6\xf7\xa5\xc4\x68\x12\x4a\x44\xbe\x03\xe7\xb5\x26\xb8\xff\x75\x65\xd6\x26\x19\xb7\x0c\x84\x3c\xd5\x43\x2e\x31\x80\xcd\x5e\xf4\x55\xec\x82\x00\xc3\x7b\xb5\x48\x15\x9d\x99\x05\xe8\x3b\x2f\xff\x2d\x45\xae\x62\x4f\xf5\x06\x51\x5d\xb7\x97\xe5\xd2\xdb\xae\x8d\x34\xdf\xb0\x25\xb8\xbb\x8a\x9a\xbd\xf3\x2d\x93\x66\xb0\x3e\x96\x19\xf0\xad\x6b\x28\xec\x43\x2b\xed\x0d\xff\x0a\xd8\x8c\xfe\xb5\x43\x13\x82\x1d\x36\x0f\xaf\x81\xfd\x65\xc4\x6c\xd4\x6e\xd7\x0f\x65\x55\xbb\xd6\x90\x0d\xb3\xf8\xa8\x1b\x66\x2d\x0a\xf8\x1a\xc5\xba\xe7\xf1\xb6\xdb\x65\x2a\x0b\xcc\x6e\x59\x0c\x1b\xe6\xb7\xdf\x2e\x53\x80\xe3\xcb\x2b\xeb\xa6\xcd\x1b\x6e\x38\x29\x04\x30\xf5\x95\x75\xaf\xef\x4d\xf6\x9b\x14\xd0\xf8\x2a\x05\xb6\xfa\xfb\xd0\x41\x55\xca\xd4\xec\x04\x6e\x37\xcb\x55\x25\x96\xb8\xe3\x05\x31\x9c\x53\x77\x31\xb1\x67\x0b\xa6\x96\xcb\x64\x8f\x78\x9b\xf9\xbc\x6f\x97\x81\x7b\x20\x7b\xcc\x9d\xa0\xee\xa8\x2d\xd7\x49\x83\x1a\x77\x0f\xf5\x1c\x5e\x98\x0d\x6a\xf4\x1d\xd4\x53\x4b\x12\x6d\x50\xe3\xee\x9f\x9e\xc3\x6b\xb2\x41\x8d\xbe\x7b\x7a\x6a\x36\x2e\x77\x52\x9e\x4a\x59\x91\xbd\x3e\x48\x05\xed\x00\xa6\x9a\xa6\xbd\x1a\xdd\xdf\x38\x9a\xab\x89\x7d\xf0\x3b\x11\x00\x1c\x36\x2e\x4a\x6c\x7f\xd8\xe6\xd4\xdf\x3b\x69\x55\x1f\xe0\x43\x36\x9c\x22\x4d\x55\xf7\x6e\x47\xe0\xfa\x37\xae\x06\xb1\x39\xfe\x5d\xc5\xfd\x9b\x48\x83\x28\x8d\x86\xba\x9b\x8b\x8f\x74\xb7\xaa\xd2\x69\x0b\x9a\xa9\xa3\xb5\x3a\xbb\x13\x13\x70\x64\xee\xb8\x67\xe6\xda\xc7\xdc\x43\x26\xe3\xa8\xf7\x1c\xf4\xe6\x03\x73\xf4\xf2\x23\x9c\xbd\x0c\x39\x4d\x3d\x3d\x8e\xa1\xee\x3c\xba\x0a\x7b\x14\xfc\x98\x0f\xb1\x0a\x3a\xc3\xfe\xfe\x4f\x85\xea\xee\x6b\x61\x91\x1f\x67\x87\x4b\xd3\x38\x41\x93\x38\xaa\x7e\xba\x3e\x08\x10\xcb\xee\x43\x3d\x12\xd0\xf1\xb9\x95\xe8\x85\xf4\x81\x9e\x60\xa9\x6b\xd9\xa2\xe7\xf1\xb8\x9d\x61\xc7\x07\x72\xa2\x67\xee\x03\x3d\x9a\x53\x77\x08\x06\x7d\x8b\xd2\xbb\x1c\x87\xf9\xf4\xe3\xd3\xff\x02\x00\x00\xff\xff\x25\x91\x90\x7c\xd3\x56\x00\x00")

func hqmf_qrda_oidsJsonBytes() ([]byte, error) {
	return bindataRead(
		_hqmf_qrda_oidsJson,
		"hqmf_qrda_oids.json",
	)
}

func hqmf_qrda_oidsJson() (*asset, error) {
	bytes, err := hqmf_qrda_oidsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmf_qrda_oids.json", size: 22227, mode: os.FileMode(420), modTime: time.Unix(1464192008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/cat1/_.xml": templatesCat1_Xml,
	"templates/cat1/_2.16.840.1.113883.10.20.24.3.23.xml": templatesCat1_2168401113883102024323Xml,
	"templates/cat1/_address.xml": templatesCat1_addressXml,
	"templates/cat1/_author.xml": templatesCat1_authorXml,
	"templates/cat1/_code.xml": templatesCat1_codeXml,
	"templates/cat1/_id.xml": templatesCat1_idXml,
	"templates/cat1/_measures.xml": templatesCat1_measuresXml,
	"templates/cat1/_organization.xml": templatesCat1_organizationXml,
	"templates/cat1/_patient_data.xml": templatesCat1_patient_dataXml,
	"templates/cat1/_providers.xml": templatesCat1_providersXml,
	"templates/cat1/_reason.xml": templatesCat1_reasonXml,
	"templates/cat1/_record_target.xml": templatesCat1_record_targetXml,
	"templates/cat1/_reporting_parameters.xml": templatesCat1_reporting_parametersXml,
	"templates/cat1/_telecom.xml": templatesCat1_telecomXml,
	"templates/cat1/cat1.xml": templatesCat1Cat1Xml,
	"hqmfr2_template_oid_map.json": hqmfr2_template_oid_mapJson,
	"hqmf_template_oid_map.json": hqmf_template_oid_mapJson,
	"hqmf_qrda_oids.json": hqmf_qrda_oidsJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"hqmf_qrda_oids.json": &bintree{hqmf_qrda_oidsJson, map[string]*bintree{}},
	"hqmf_template_oid_map.json": &bintree{hqmf_template_oid_mapJson, map[string]*bintree{}},
	"hqmfr2_template_oid_map.json": &bintree{hqmfr2_template_oid_mapJson, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"cat1": &bintree{nil, map[string]*bintree{
			"_.xml": &bintree{templatesCat1_Xml, map[string]*bintree{}},
			"_2.16.840.1.113883.10.20.24.3.23.xml": &bintree{templatesCat1_2168401113883102024323Xml, map[string]*bintree{}},
			"_address.xml": &bintree{templatesCat1_addressXml, map[string]*bintree{}},
			"_author.xml": &bintree{templatesCat1_authorXml, map[string]*bintree{}},
			"_code.xml": &bintree{templatesCat1_codeXml, map[string]*bintree{}},
			"_id.xml": &bintree{templatesCat1_idXml, map[string]*bintree{}},
			"_measures.xml": &bintree{templatesCat1_measuresXml, map[string]*bintree{}},
			"_organization.xml": &bintree{templatesCat1_organizationXml, map[string]*bintree{}},
			"_patient_data.xml": &bintree{templatesCat1_patient_dataXml, map[string]*bintree{}},
			"_providers.xml": &bintree{templatesCat1_providersXml, map[string]*bintree{}},
			"_reason.xml": &bintree{templatesCat1_reasonXml, map[string]*bintree{}},
			"_record_target.xml": &bintree{templatesCat1_record_targetXml, map[string]*bintree{}},
			"_reporting_parameters.xml": &bintree{templatesCat1_reporting_parametersXml, map[string]*bintree{}},
			"_telecom.xml": &bintree{templatesCat1_telecomXml, map[string]*bintree{}},
			"cat1.xml": &bintree{templatesCat1Cat1Xml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

