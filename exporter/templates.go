// Code generated by go-bindata.
// sources:
// exporter/templates/cat1/r3/_.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.1.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.103.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.105.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.11.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.12.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.13.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.14.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.17.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.18.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.2.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.22.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.23.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.26.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.3.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.31.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.32.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.37.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.38.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.4.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.41.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.42.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.43.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.44.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.45.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.46.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.47.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.51.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.54.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.55.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.59.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.62.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.63.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.64.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.69.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.7.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.76.xml
// exporter/templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.9.xml
// exporter/templates/cat1/r3/_address.xml
// exporter/templates/cat1/r3/_author.xml
// exporter/templates/cat1/r3/_code.xml
// exporter/templates/cat1/r3/_fulfills.xml
// exporter/templates/cat1/r3/_id.xml
// exporter/templates/cat1/r3/_measures.xml
// exporter/templates/cat1/r3/_medication_details.xml
// exporter/templates/cat1/r3/_medication_dispense.xml
// exporter/templates/cat1/r3/_ordinality.xml
// exporter/templates/cat1/r3/_organization.xml
// exporter/templates/cat1/r3/_patient_data.xml
// exporter/templates/cat1/r3/_providers.xml
// exporter/templates/cat1/r3/_reason.xml
// exporter/templates/cat1/r3/_record_target.xml
// exporter/templates/cat1/r3/_reporting_parameters.xml
// exporter/templates/cat1/r3/_result_value.xml
// exporter/templates/cat1/r3/_telecom.xml
// exporter/templates/cat1/r3/cat1.xml
// exporter/templates/cat1/r3_1/_.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.1.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.103.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.105.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.11.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.12.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.13.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.135.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.14.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.17.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.18.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.2.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.22.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.23.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.26.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.3.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.31.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.32.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.37.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.38.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.4.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.41.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.42.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.43.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.44.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.45.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.46.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.47.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.51.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.54.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.55.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.59.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.62.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.63.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.64.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.69.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.7.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.76.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.81.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.82.xml
// exporter/templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.9.xml
// exporter/templates/cat1/r3_1/_address.xml
// exporter/templates/cat1/r3_1/_author.xml
// exporter/templates/cat1/r3_1/_code.xml
// exporter/templates/cat1/r3_1/_fulfills.xml
// exporter/templates/cat1/r3_1/_id.xml
// exporter/templates/cat1/r3_1/_measures.xml
// exporter/templates/cat1/r3_1/_medication_details.xml
// exporter/templates/cat1/r3_1/_medication_dispense.xml
// exporter/templates/cat1/r3_1/_ordinality.xml
// exporter/templates/cat1/r3_1/_organization.xml
// exporter/templates/cat1/r3_1/_patient_data.xml
// exporter/templates/cat1/r3_1/_providers.xml
// exporter/templates/cat1/r3_1/_reason.xml
// exporter/templates/cat1/r3_1/_record_target.xml
// exporter/templates/cat1/r3_1/_reporting_parameters.xml
// exporter/templates/cat1/r3_1/_result_value.xml
// exporter/templates/cat1/r3_1/_telecom.xml
// exporter/templates/cat1/r3_1/cat1.xml
// exporter/hqmf_template_oid_map.json
// exporter/hqmf_qrda_oids.json
// exporter/hqmf_qrda_oids_r3_1.json
// DO NOT EDIT!

package exporter

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesCat1R3_Xml = []byte(`<!-- no template found with no oid specified -->`)

func templatesCat1R3_XmlBytes() ([]byte, error) {
	return _templatesCat1R3_Xml, nil
}

func templatesCat1R3_Xml() (*asset, error) {
	bytes, err := templatesCat1R3_XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_.xml", size: 48, mode: os.FileMode(420), modTime: time.Unix(1493311295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202431Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="GOL">
    <!-- Conforms to C-CDA R2 Goal Observation -->
    <templateId root="2.16.840.1.113883.10.20.22.4.121" />
    <templateId root="2.16.840.1.113883.10.20.24.3.1" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
  </observation>
</entry>`)

func templatesCat1R3_216840111388310202431XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202431Xml, nil
}

func templatesCat1R3_216840111388310202431Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202431XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.1.xml", size: 670, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_21684011138831020243103Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.103" extension="2014-12-01"/> 
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" />
    <statusCode code="completed" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_21684011138831020243103XmlBytes() ([]byte, error) {
	return _templatesCat1R3_21684011138831020243103Xml, nil
}

func templatesCat1R3_21684011138831020243103Xml() (*asset, error) {
	bytes, err := templatesCat1R3_21684011138831020243103XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.103.xml", size: 724, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_21684011138831020243105Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Discharge Medication Entry -->
    <templateId root="2.16.840.1.113883.10.20.24.3.105" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="10183-2"
          codeSystem="2.16.840.1.113883.6.1" 
          codeSystemName="LOINC" 
          displayName="Discharge medication"/> 
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
      <substanceAdministration moodCode="EVN" classCode="SBADM">
        <!-- Medication Activity (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/> 
        <!-- Medication, Active template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.41" extension="2014-12-01"/>
        
        <id root="{{newRandom}}"/>
        <text>{{.EntrySection.Description}}</text>
        <statusCode code="active"/> 
        <effectiveTime xsi:type="IVL_TS">
            <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
            <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{if .EntrySection.HasSetAdministrationTiming}}
          <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
            <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
          </effectiveTime>
        {{end}}
        {{if .EntrySection.Route}}
        <!-- Attribute: route -->
          {{$vset := oidForCode .EntrySection.Route (index .MapDataCriteria.FieldOids "ROUTE")}}
          {{if ne $vset ""}}
            <routeCode code="{{.EntrySection.Route.Code}}" codeSystem="{{oidForCodeSystem .EntrySection.Route.CodeSystem}}" sdtc:valueSet="{{$vset}}"/>
          {{end}}
        {{end}}
        
        <!-- Attribute: dose -->
        {{if .EntrySection.HasSetDose}}
          <doseQuantity value="{{.EntrySection.Dose.Value}}"/>
        {{end}}

        {{if .EntrySection.ProductForm}}
        <administrationUnitCode code="{{.EntrySection.ProductForm.Code}}" codeSystem="{{.EntrySection.ProductForm.CodeSystem}}"/>
        {{end}}

        <consumable>
          <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template --> 
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
              {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
            </manufacturedMaterial>
            <manufacturerOrganization>
              <name>Medication Factory Inc.</name>
            </manufacturerOrganization>
          </manufacturedProduct>
        </consumable>
      </substanceAdministration>
    </entryRelationship>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_21684011138831020243105XmlBytes() ([]byte, error) {
	return _templatesCat1R3_21684011138831020243105Xml, nil
}

func templatesCat1R3_21684011138831020243105Xml() (*asset, error) {
	bytes, err := templatesCat1R3_21684011138831020243105XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.105.xml", size: 3123, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024311Xml = []byte(`<entry> 
  <act classCode="ACT" moodCode="EVN">
  <!-- Conforms to C-CDA Problem Concern Act (V2) -->
  <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
  <!-- Diagnosis Active Concern Act -->
  <templateId root="2.16.840.1.113883.10.20.24.3.121" extension="2014-12-01" />
  <id root="{{newRandom}}" />
  <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
  <!-- The statusCode represents whether this is an active (active),       inactive (suspended) or resolved (completed) diagnosis -->    
  <statusCode code="active" />
  <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
  <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!--  Diagnosis active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.11" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="29308-4" displayName="diagnosis" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}
    {{template "_code.xml" codeDisplayWithPreferredCodeAndLaterality .EntrySection.Entry .EntrySection.Entry.Coded "entryCode" .EntrySection.Laterality .MapDataCriteria}}
    {{if .EntrySection.HasSetSeverity}}
    <entryRelationship typeCode="REFR">
       <observation classCode="OBS" moodCode="EVN">
          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>
          <code code="SEV" 
                codeSystem="2.16.840.1.113883.5.4"/>
           <statusCode code="completed"/>
           <value xsi:type="CD"
                code="{{.EntrySection.Severity.Code}}"
                codeSystem="{{oidForCodeSystem .EntrySection.Severity.CodeSystem}}"
              {{if ne .EntrySection.Severity.Title ""}}
                displayName="{{.EntrySection.Severity.Title}}"
              {{end}}
                sdtc:valueSet="{{oidForCode .EntrySection.Severity.CodedConcept (index .MapDataCriteria.FieldOids "SEVERITY")}}"
            />
       </observation>

    </entryRelationship>
   {{end}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_2168401113883102024311XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024311Xml, nil
}

func templatesCat1R3_2168401113883102024311Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024311XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.11.xml", size: 2802, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024312Xml = []byte(`<entry typeCode="DRIV">
  <organizer moodCode="EVN" classCode="CLUSTER">
    <templateId root="2.16.840.1.113883.10.20.22.4.45" extension="2014-06-09"/>
    <!--    Family history organizer template   -->
    <templateId root="2.16.840.1.113883.10.20.24.3.12" extension="2014-12-01"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <!-- The subject is currently hardcoded to father -->
    <subject>
      <relatedSubject classCode="PRS">
        <code code="FTH" displayName="Father" 
              codeSystemName="HL7RoleCode" 
              codeSystem="2.16.840.1.113883.5.111">
          <translation code="9947008" 
                displayName="Biological father" 
                codeSystemName="SNOMED CT" 
                codeSystem="2.16.840.1.113883.6.96"/>
        </code>
        <subject>
          <administrativeGenderCode 
               code="M" codeSystem="2.16.840.1.113883.5.1"
               codeSystemName="HL7AdministrativeGender" 
               displayName="Male"/>
            <birthTime value="1912"/>
        </subject>
      </relatedSubject>
    </subject>
    <component>
      <observation classCode="OBS" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.22.4.46" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
        <code code="55607006" displayName="Problem" 
              codeSystemName="SNOMED CT" 
              codeSystem="2.16.840.1.113883.6.96"/>
        <statusCode code="completed"/>
        <effectiveTime>
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        <text>{{.EntrySection.Description}}</text>
      </observation>
    </component>
  </organizer>
</entry>`)

func templatesCat1R3_2168401113883102024312XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024312Xml, nil
}

func templatesCat1R3_2168401113883102024312Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024312XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.12.xml", size: 2090, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024313Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN">
    <!-- Conforms to C-CDA Problem Concern Act (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
    <!-- Diagnosis Resolved Concern Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.123" extension="2014-12-01" />
    <id root="{{newRandom}}"/>
    <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
    <statusCode code="suspended" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
  <!--  Problem observation template -->
  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
  <!-- Diagnosis, inactive template -->
  <templateId root="2.16.840.1.113883.10.20.24.3.13" extension="2014-12-01"/>
  <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
  <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="diagnosis"/>
  
  <statusCode code="completed"/>

  <effectiveTime>
    <!-- Attribute: Start Datetime -->
    <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    <!-- Attribute: Stop Datetime -->
    <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
  </effectiveTime>
  {{template "_ordinality.xml" .}}

  {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_2168401113883102024313XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024313Xml, nil
}

func templatesCat1R3_2168401113883102024313Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024313XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.13.xml", size: 1702, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024314Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN">
    <!-- Conforms to C-CDA Problem Concern Act (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
    <!-- Diagnosis Resolved Concern Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.125" extension="2014-12-01" />
    <id root="{{newRandom}}"/>
    <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
    <statusCode code="completed" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!-- Diagnosis, resolved template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.14" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="diagnosis"/>
    
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}

    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_2168401113883102024314XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024314Xml, nil
}

func templatesCat1R3_2168401113883102024314Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024314XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.14.xml", size: 1733, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024317Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidated Plan of Care Activity Observation
        templateId (Implied Template) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.44" extension="2014-06-09"/>
    <!-- Diagnostic Study, Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.17" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>
    <!-- The effectiveTime indicates the time when the Diagnostic Study is intended to take place -->
    <effectiveTime>
      <low  {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </observation>
</entry>
`)

func templatesCat1R3_2168401113883102024317XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024317Xml, nil
}

func templatesCat1R3_2168401113883102024317Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024317XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.17.xml", size: 1322, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024318Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
  <entry>
    <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
      <!-- Consolidated Procedure Activity Observation templateId 
        (Implied Template) -->
      <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
      <!-- Diagnostic Study, Performed template -->
      <templateId root="2.16.840.1.113883.10.20.24.3.18" extension="2014-12-01"/>
      <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
      {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
      <text>{{$.EntrySection.Entry.Description}}</text>
      <statusCode code="completed"/>
      <effectiveTime>
        <!-- Attribute: Start Datetime -->
        <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
        <!-- Attribute: End Datetime -->
        <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
      </effectiveTime>
      {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
      {{template "_reason.xml" $}}
    </observation>
  </entry>
{{end}}
`)

func templatesCat1R3_2168401113883102024318XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024318Xml, nil
}

func templatesCat1R3_2168401113883102024318Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024318XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.18.xml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202432Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Communication from patient to provider -->
    <templateId root="2.16.840.1.113883.10.20.24.3.2" extension="2014-12-01" />
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}} 

    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>

    <participant typeCode="AUT">
      <participantRole classCode="PAT">
        <code code="116154003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Patient"/>
      </participantRole>
    </participant>

    <participant typeCode="IRCP">
      <participantRole classCode="ASSIGNED">
        <code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
      </participantRole>
    </participant>

    {{if .EntrySection.Entry.HasReason}}
      {{template "_reason.xml" .}}
    {{end}}

  </act>
</entry>
`)

func templatesCat1R3_216840111388310202432XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202432Xml, nil
}

func templatesCat1R3_216840111388310202432Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202432XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.2.xml", size: 1287, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024322Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="RQO">
    <!--  Plan of Care Activity Encounter template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.40" extension="2014-06-09"/>
    <!-- Encounter order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.22" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
		{{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
  
    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}} />
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>

  </encounter>
</entry>
`)

func templatesCat1R3_2168401113883102024322XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024322Xml, nil
}

func templatesCat1R3_2168401113883102024322Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024322XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.22.xml", size: 896, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024323Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="EVN">
    <!-- Encounter activities template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09" />
    <!-- Encounter performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.23" extension="2014-12-01" />
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- We try to look for the admit/discharge times on the encounter if they are there. If not, we fall back to the typical start/end date. -->
      {{$startTime := condAssign .EntrySection.AdmitTime .EntrySection.StartTime}}
      {{$endTime := condAssign .EntrySection.DischargeTime .EntrySection.EndTime}}
      <low {{valueOrNullFlavor $startTime}}/>
      <high {{valueOrNullFlavor $endTime}}/>
    </effectiveTime>
    {{if .EntrySection.DischargeDisposition}}
      {{dischargeDispositionDisplay .EntrySection.DischargeDisposition}}
    {{end}}

    {{if not .EntrySection.Facility.IsEmpty}}
      <participant typeCode="LOC">
        <!-- Facility Location template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.100"/>
        <time>
          <!-- Attribute: facility location arrival datetime -->
          <low {{valueOrNullFlavor .EntrySection.Facility.StartTime}}/>
          <!-- Attribute: facility location departure datetime -->
          <high {{valueOrNullFlavor .EntrySection.Facility.StartTime}}/>
        </time>
        <participantRole classCode="SDLOC">
          {{if .EntrySection.Facility.Code}}
            {{$vset := oidForCode .EntrySection.Facility.Code (index .MapDataCriteria.FieldOids "FACILITY_LOCATION")}}
            {{if ne $vset ""}}
              <code code="{{.EntrySection.Facility.Code.Code}}"
                codeSystem="{{oidForCodeSystem .EntrySection.Facility.Code.CodeSystem}}" sdtc:valueSet="{{$vset}}"/>
            {{else}}
              <code nullFlavor="UNK"/>
            {{end}}
          {{else}}
            <code nullFlavor="UNK"/>
          {{end}}
          {{if gt (len .EntrySection.Facility.Addresses) 0}}
            {{$firstAddr := index .EntrySection.Facility.Addresses 0}}
            <addr>
              <streetAddressLine>{{$firstAddr.Street}}</streetAddressLine>
              <city>{{$firstAddr.City}}</city>
              <state>{{$firstAddr.State}}</state>
              <postalCode>{{$firstAddr.Zip}}</postalCode>
              <country>{{$firstAddr.Country}}</country>
            </addr>
          {{end}}
          <telecom nullFlavor="UNK"/>
          <playingEntity classCode="PLC">
            <name>{{.EntrySection.Facility.Name}}</name>
          </playingEntity>
        </participantRole>
      </participant>
    {{end}}
    {{if .EntrySection.Reason}}
      {{template "_reason.xml" .}}
    {{end}}
  </encounter>
</entry>
`)

func templatesCat1R3_2168401113883102024323XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024323Xml, nil
}

func templatesCat1R3_2168401113883102024323Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024323XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.23.xml", size: 3053, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024326Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- Conforms to C-CDA R2 Procedure Activity Observation (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
    <!-- Functional Status, Performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.26" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>

    <!-- Result -->
    {{if len .EntrySection.Entry.Values}}
      {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValue (index .EntrySection.Entry.Values 0) .MapDataCriteria)}}
    {{else}}
      <value xsi:type="CD" nullFlavor="UNK"/>
    {{end}}
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024326XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024326Xml, nil
}

func templatesCat1R3_2168401113883102024326Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024326XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.26.xml", size: 1089, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202433Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Communication from provider to patient -->
    <templateId root="2.16.840.1.113883.10.20.24.3.3" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>  
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>
    
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    
    <participant typeCode="AUT">
      <participantRole classCode="ASSIGNED">
        <code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
      </participantRole>
    </participant>
    
    <participant typeCode="IRCP">
      <participantRole classCode="PAT"/>
    </participant>
    
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_216840111388310202433XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202433Xml, nil
}

func templatesCat1R3_216840111388310202433Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202433XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.3.xml", size: 1108, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024331Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Plan of Care Activity Act template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.39" extension="2014-06-09"/>
    <!-- Intervention Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.31" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="active"/>
     <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_2168401113883102024331XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024331Xml, nil
}

func templatesCat1R3_2168401113883102024331Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024331XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.31.xml", size: 1025, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024332Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidation CDA: Procedure Activity Act template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.12" extension="2014-06-09"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.32" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_reason.xml" .}}
    {{if not .EntrySection.Entry.IsValuesEmpty}}
      {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValues .EntrySection.Entry.Values .MapDataCriteria)}}
    {{end}}

  </act>
</entry>`)

func templatesCat1R3_2168401113883102024332XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024332Xml, nil
}

func templatesCat1R3_2168401113883102024332Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024332XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.32.xml", size: 1011, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024337Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="RQO" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Consolidation Plan of Care Activity Observation -->
    <templateId root="2.16.840.1.113883.10.20.22.4.44" extension="2014-06-09"/>
    <!-- Lab Test Order -->
    <templateId root="2.16.840.1.113883.10.20.24.3.37" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024337XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024337Xml, nil
}

func templatesCat1R3_2168401113883102024337Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024337XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.37.xml", size: 995, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024338Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Lab test performed -->
    <templateId root="2.16.840.1.113883.10.20.24.3.38" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValues .EntrySection.Entry.Values .MapDataCriteria)}}
    {{template "_reason.xml" .}}
    </observation>
</entry>`)

func templatesCat1R3_2168401113883102024338XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024338Xml, nil
}

func templatesCat1R3_2168401113883102024338Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024338XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.38.xml", size: 859, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202434Xml = []byte(`<entry>
	<act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
		<!-- Communication from provider to provider -->
		<templateId root="2.16.840.1.113883.10.20.24.3.4" extension="2014-12-01"/>
		<id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
		{{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
		<text>{{ .EntrySection.Description }}</text>
		<statusCode code="completed"/>

		<effectiveTime>
			<low {{valueOrNullFlavor .EntrySection.StartTime}}/>
			<high {{valueOrNullFlavor .EntrySection.EndTime}}/>
		</effectiveTime>

		<participant typeCode="AUT">
			<participantRole classCode="ASSIGNED">
				<code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
			</participantRole>
		</participant>

		<participant typeCode="IRCP">
			<participantRole classCode="ASSIGNED">
				<code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
			</participantRole>
		</participant>
		{{template "_reason.xml" .}}
		{{template "_fulfills.xml" .EntrySection.Entry}}
	</act>
</entry>
`)

func templatesCat1R3_216840111388310202434XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202434Xml, nil
}

func templatesCat1R3_216840111388310202434Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202434XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.4.xml", size: 1243, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024341Xml = []byte(`<entry>
  <substanceAdministration classCode="SBADM" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Medication Activity (consolidation) template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/>
    <!-- Medication, Active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.41" extension="2014-12-01"/>

    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime xsi:type="IVL_TS">
        <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
        <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{if .EntrySection.HasSetAdministrationTiming}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
      </effectiveTime>
    {{end}}
    {{template "_medication_details.xml" .}}

    {{if .EntrySection.ProductForm}}
    <administrationUnitCode code="{{escape .EntrySection.ProductForm.Code}}" codeSystem="{{.EntrySection.ProductForm.CodeSystem}}"/>
    {{end}}

    <consumable>
      <manufacturedProduct classCode="MANU">
        <!-- Medication Information (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <manufacturedMaterial>
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </manufacturedMaterial>
        <manufacturerOrganization>
          <name>Medication Factory Inc.</name>
        </manufacturerOrganization>
      </manufacturedProduct>
    </consumable>
    {{template "_reason.xml" .}}

    {{template "_medication_dispense.xml" .}}

  </substanceAdministration>

</entry>`)

func templatesCat1R3_2168401113883102024341XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024341Xml, nil
}

func templatesCat1R3_2168401113883102024341Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024341XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.41.xml", size: 1985, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024342Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Medication, Administered template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.42" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="416118004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Administration"/>
    <statusCode code="completed"/>
    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="COMP">
      <substanceAdministration classCode="SBADM" moodCode="EVN">
        <!-- Medication Activity (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <text>{{.EntrySection.Description}}</text>
        <statusCode code="completed"/>
        <effectiveTime xsi:type="IVL_TS">
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{template "_medication_details.xml" .}}
        <consumable>
          <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template -->
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
              {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
            </manufacturedMaterial>
          </manufacturedProduct>
        </consumable>
      </substanceAdministration>
    </entryRelationship>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_2168401113883102024342XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024342Xml, nil
}

func templatesCat1R3_2168401113883102024342Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024342XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.42.xml", size: 1897, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024343Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <!--  Medication Allergy -->
    <templateId root="2.16.840.1.113883.10.20.24.3.43" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" displayName="Assertion" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse drug effect" xsi:type="CD"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024343XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024343Xml, nil
}

func templatesCat1R3_2168401113883102024343Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024343XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.43.xml", size: 1186, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024344Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <!--  Medication Allergy -->
    <templateId root="2.16.840.1.113883.10.20.24.3.44" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" displayName="Assertion" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <value code="416098002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug allergy" xsi:type="CD"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024344XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024344Xml, nil
}

func templatesCat1R3_2168401113883102024344Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024344XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.44.xml", size: 1238, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024345Xml = []byte(`<entry>
  <!--Medication dispensed -->
  <supply classCode="SPLY" moodCode="EVN">
    <!--  Medication Dispensed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.45" extension="2014-12-01"/>
    <!-- Medication Dispense template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.18" extension="2014-06-09"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/>
    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <product>
      <manufacturedProduct classCode="MANU">
        <!-- Medication Information (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <manufacturedMaterial>
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </manufacturedMaterial>
      </manufacturedProduct>
    </product>
  </supply>
</entry>`)

func templatesCat1R3_2168401113883102024345XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024345Xml, nil
}

func templatesCat1R3_2168401113883102024345Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024345XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.45.xml", size: 1184, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024346Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy Observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.46" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" 
          displayName="Assertion" 
          codeSystem="2.16.840.1.113883.5.4" 
          codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value xsi:type="CD" 
           code="59037007" 
           displayName="Drug intolerance"
           codeSystem="2.16.840.1.113883.6.96" 
           codeSystemName="SNOMED CT"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024346XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024346Xml, nil
}

func templatesCat1R3_2168401113883102024346Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024346XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.46.xml", size: 1230, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024347Xml = []byte(`<entry>
  <!--Medication Order -->
  <substanceAdministration classCode="SBADM" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <templateId root="2.16.840.1.113883.10.20.22.4.42" extension="2014-06-09"/>
    <!-- Medication, Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.47" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{if (.EntrySection.Entry.NegationInd) and derefBool .EntrySection.Entry.NegationInd}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period nullFlavor="NA"/>
      </effectiveTime>
    {{else if .EntrySection.HasSetAdministrationTiming}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
      </effectiveTime>
    {{end}}
    {{if .EntrySection.AllowedAdministrations}}
      <repeatNumber value="{{.EntrySection.AllowedAdministrations}}" />
    {{end}}
    {{template "_medication_details.xml" .}}
    <consumable>
      <manufacturedProduct classCode="MANU">
        <!-- Medication Information (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <manufacturedMaterial>
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </manufacturedMaterial>
      </manufacturedProduct>
    </consumable>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </substanceAdministration>
</entry>
`)

func templatesCat1R3_2168401113883102024347XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024347Xml, nil
}

func templatesCat1R3_2168401113883102024347Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024347XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.47.xml", size: 2194, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024351Xml = []byte(`<entry>
  <!-- Clinical Trial Participant -->
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.51" extension="2014-12-01"/>
    <id root="{{newRandom}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024351XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024351Xml, nil
}

func templatesCat1R3_2168401113883102024351Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024351XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.51.xml", size: 616, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024354Xml = []byte(`<entry>
  <!-- Patient characteristic expired -->
  <observation classCode="OBS" moodCode="EVN">
    <!-- Consolidation Deceased Observation templateId -->
    <templateId root="2.16.840.1.113883.10.20.22.4.79" extension="2014-06-09"/>
    <!-- Patient Characteristic Expired -->
    <templateId root="2.16.840.1.113883.10.20.24.3.54" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{newRandom}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value code="419099009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Dead" xsi:type="CD"/>
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024354XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024354Xml, nil
}

func templatesCat1R3_2168401113883102024354Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024354XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.54.xml", size: 797, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024355Xml = []byte(`<entry>
  <!-- Patient Characteristic Payer -->
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.55"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="48768-6" codeSystemName="LOINC" codeSystem="2.16.840.1.113883.6.1" displayName="Payment source"/> 
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      {{if .EntrySection.EndTime}}
        <high {{valueOrNullFlavor .EntrySection.EndTime}} />
      {{end}}
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}

  </observation>            
</entry>`)

func templatesCat1R3_2168401113883102024355XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024355Xml, nil
}

func templatesCat1R3_2168401113883102024355Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024355XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.55.xml", size: 813, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024359Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
<entry>
  <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
    <!-- Procedure Activity Procedure (Consolidation) template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
    <!-- Physical Exam, Performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.59" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
    <text>{{$.EntrySection.Description}}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
    {{template "_reason.xml" $}}
  </observation>
</entry>
{{end}}`)

func templatesCat1R3_2168401113883102024359XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024359Xml, nil
}

func templatesCat1R3_2168401113883102024359Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024359XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.59.xml", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024362Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.62" extension="2014-12-01"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.104" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" 
          codeSystem="2.16.840.1.113883.5.4"
          codeSystemName="ActCode"
          displayName="Assertion"/>  
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value xsi:type="CD"
           code="102460003"
           codeSystem="2.16.840.1.113883.6.96"
           codeSystemName="SNOMED CT"
           displayName="Decreased tolerance"/>
    <entryRelationship typeCode="CAUS" inversionInd="true">
      <procedure classCode="PROC" moodCode="EVN">
        <!--  Procedure performed template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.64" extension="2014-12-01"/>
        <!-- Procedure Activity Procedure-->
        <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        <text>{{ .EntrySection.Description }}</text>
        <statusCode code="completed"/>
        <effectiveTime>
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
      </procedure>
    </entryRelationship>
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024362XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024362Xml, nil
}

func templatesCat1R3_2168401113883102024362Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024362XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.62.xml", size: 1706, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024363Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidated Plan of Care Activity Procedure TemplateId (Implied Template) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.41" extension="2014-06-09"/> 
    <!-- QRDA Procedure, Order TemplateId --> 
    <templateId root="2.16.840.1.113883.10.20.24.3.63" extension="2014-12-01"/> 
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="active"/>
    <!-- Attribute: datetime --> 
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}}/> 
      <assignedAuthor>
        <id nullFlavor="NA"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </procedure>
</entry>`)

func templatesCat1R3_2168401113883102024363XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024363Xml, nil
}

func templatesCat1R3_2168401113883102024363Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024363XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.63.xml", size: 1011, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024364Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!--  Procedure performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.64" extension="2014-12-01"/>
    <!-- Procedure Activity Procedure-->
    <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}
    {{template "_reason.xml" .}}
    {{if .EntrySection.HasSetIncisionTime}}
    <entryRelationship typeCode="REFR">
      <procedure classCode="PROC" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.24.3.89"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface .EntrySection.Entry.ObjectIdentifier.ID .EntrySection.IncisionTime}}" />
        <code code="34896006" 
              codeSystem="2.16.840.1.113883.6.96"
              codeSystemName="SNOMED CT" 
              displayName="incision"/>
              <effectiveTime {{valueOrNullFlavor .EntrySection.IncisionTime}}/>
      </procedure>
    </entryRelationship>
    {{end}}

    {{range .EntrySection.Entry.Values}}
      <entryRelationship typeCode="REFR">
       <observation classCode="OBS" moodCode="EVN">
         <!-- Conforms to C-CDA R2 Result Observation (V2) -->
         <templateId root="2.16.840.1.113883.10.20.22.4.2" extension="2014-06-09"/>
         <!-- Result (QRDA I R3) -->
         <templateId root="2.16.840.1.113883.10.20.24.3.87" extension="2014-12-01"/>
         <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface $}}"/>
          {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
          <statusCode code="completed"/>
          <effectiveTime>
            <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
            <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
          </effectiveTime>
         {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
        
       </observation>
     </entryRelationship>
   {{end}}
  </procedure>
</entry>`)

func templatesCat1R3_2168401113883102024364XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024364Xml, nil
}

func templatesCat1R3_2168401113883102024364Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024364XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.64.xml", size: 2554, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024369Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
<entry>
  <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
    <!-- Consolidation Assessment Scale Observation templateId -->
    <templateId root="2.16.840.1.113883.10.20.22.4.69"/>
    <!-- Risk Category Assessment -->
    <templateId root="2.16.840.1.113883.10.20.24.3.69" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
    <text>{{$.EntrySection.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
    {{template "_reason.xml" $}}
  </observation>
</entry>
{{end}}`)

func templatesCat1R3_2168401113883102024369XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024369Xml, nil
}

func templatesCat1R3_2168401113883102024369Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024369XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.69.xml", size: 1027, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202437Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Procedure Activity Procedure -->
    <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
    <!-- Device Applied -->
    <templateId root="2.16.840.1.113883.10.20.24.3.7" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="360030002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="application of device"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>
    
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>

    {{$vset := oidForCode .EntrySection.AnatomicalStructure (index .MapDataCriteria.FieldOids "LATERALITY")}}
    {{if ne $vset ""}}
      <targetSiteCode code="{{.EntrySection.AnatomicalStructure.Code}}"
        codeSystem="{{oidForCodeSystem .EntrySection.AnatomicalStructure}}" sdtc:valueSet="{{$vset}}"/>
    {{end}}
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </procedure>
</entry>`)

func templatesCat1R3_216840111388310202437XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202437Xml, nil
}

func templatesCat1R3_216840111388310202437Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202437XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.7.xml", size: 1505, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_2168401113883102024376Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!-- Symptom, active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.76" extension="2014-12-01"/>  
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="418799008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Symptom"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/> 
   
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_2168401113883102024376XmlBytes() ([]byte, error) {
	return _templatesCat1R3_2168401113883102024376Xml, nil
}

func templatesCat1R3_2168401113883102024376Xml() (*asset, error) {
	bytes, err := templatesCat1R3_2168401113883102024376XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.76.xml", size: 908, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_216840111388310202439Xml = []byte(`<entry>
  {{if derefBool .EntrySection.Entry.NegationInd}}
  <supply classCode="SPLY" moodCode="RQO">
    <!-- Plan of Care Activity Supply -->
    <templateId root="2.16.840.1.113883.10.20.22.4.43" extension="2014-06-09"/>
    <!-- Device, Order -->
    <templateId root="2.16.840.1.113883.10.20.24.3.9" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.Entry.Time}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </supply>
  {{else}}
  <act classCode="ACT" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="SPLY" codeSystem="2.16.840.1.113883.5.6"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.Entry.Time}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </act>
{{end}}
</entry>
`)

func templatesCat1R3_216840111388310202439XmlBytes() ([]byte, error) {
	return _templatesCat1R3_216840111388310202439Xml, nil
}

func templatesCat1R3_216840111388310202439Xml() (*asset, error) {
	bytes, err := templatesCat1R3_216840111388310202439XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.9.xml", size: 2445, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_addressXml = []byte(`<addr use="{{ escape  .Use }}">
    {{range .Street}}
      <streetAddressLine>{{escape .}}</streetAddressLine>
    {{end}}
    <city>{{escape .City}}</city>
    <state>{{escape .State}}</state>
    <postalCode>{{escape .Zip}}</postalCode>
    <country>{{escape .Country}}</country>
</addr>
`)

func templatesCat1R3_addressXmlBytes() ([]byte, error) {
	return _templatesCat1R3_addressXml, nil
}

func templatesCat1R3_addressXml() (*asset, error) {
	bytes, err := templatesCat1R3_addressXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_address.xml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_authorXml = []byte(`<!-- SHALL have 1..* author. MAY be device or person. -->
<author>
  <time value="{{.Time}}" />
  <assignedAuthor>
  {{range .Ids}}
    {{template "_id.xml" .}}
  {{end}}
  {{range .Addresses}}
    {{template "_address.xml" .}}
  {{end}}
  {{range .Telecoms}}
    {{template "_telecom.xml" .}}
  {{end}}

  {{if .Person.First}}
    <assignedPerson>
      <name>
        <given>{{escape .Person.First}}</given>
        <family>{{escape .Person.Last}}</family>
      </name>
    </assignedPerson>
  {{else if .Device.Model}}
    <assignedAuthoringDevice>
       <manufacturerModelName>{{escape .Device.Model}}</manufacturerModelName>
       <softwareName>{{escape .Device.Name}}</softwareName>
     </assignedAuthoringDevice>
  {{end}}

  {{template "_organization.xml" .Organization}}
  </assignedAuthor>
</author>
`)

func templatesCat1R3_authorXmlBytes() ([]byte, error) {
	return _templatesCat1R3_authorXml, nil
}

func templatesCat1R3_authorXml() (*asset, error) {
	bytes, err := templatesCat1R3_authorXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_author.xml", size: 814, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_codeXml = []byte(`<{{- valueOrDefault .TagName "code" -}}
  {{- if hasPreferredCode .PreferredCode}} code='{{- .PreferredCode.Code}}' codeSystem='{{- oidForCodeSystem .PreferredCode.CodeSystem}}' {{.RenderExtraContent}}
  {{- else}}
    {{- $excludeNullFlavor := valueOrDefault .ExcludeNullFlavor false}}
    {{- if $excludeNullFlavor}}{{- else}} nullFlavor='UNK' xsi:type="CD"
    {{- end}}
  {{- end -}}
>
  {{- $attribute := valueOrDefault .Attribute "codes"}}
  {{- if codeDisplayAttributeIsCodes $attribute}}
    <originalText>{{- .Description}}</originalText>
  {{- end}}
  {{- if hasLaterality .Laterality}}
    <!-- QDM Attribute: Laterality -->
    <qualifier>
        <name code='182353008' codeSystem='2.16.840.1.113883.6.96' displayName='Side' />
        <value xsi:type='CD' code='{{- .Laterality.Code}}' 
            displayName='{{- .Laterality.Title}}' 
            sdtc:valueSet='{{- oidForCode .Laterality.CodedConcept (index .MapDataCriteria.FieldOids "LATERALITY")}}'
            codeSystem='{{- oidForCodeSystem .Laterality.CodeSystem}}'/>
    </qualifier>
  {{- end}}
</{{- valueOrDefault .TagName "code"}}>`)

func templatesCat1R3_codeXmlBytes() ([]byte, error) {
	return _templatesCat1R3_codeXml, nil
}

func templatesCat1R3_codeXml() (*asset, error) {
	bytes, err := templatesCat1R3_codeXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_code.xml", size: 1111, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_fulfillsXml = []byte(`{{range .References}}
    {{if eq .Type "fulfills"}}
        <sdtc:inFulfillmentOf1 typeCode="FLFS">
            <sdtc:templateId root="2.16.840.1.113883.10.20.24.3.126" />
            <sdtc:actReference classCode="ACT" moodCode="EVN">
                <sdtc:id root="1.3.6.1.4.1.115" extension="{{.ReferencedID}}"/>
            </sdtc:actReference>
        </sdtc:inFulfillmentOf1>
    {{end}}
{{end}}`)

func templatesCat1R3_fulfillsXmlBytes() ([]byte, error) {
	return _templatesCat1R3_fulfillsXml, nil
}

func templatesCat1R3_fulfillsXml() (*asset, error) {
	bytes, err := templatesCat1R3_fulfillsXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_fulfills.xml", size: 401, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_idXml = []byte(`<id {{if .Root}}root="{{escape .Root}}"{{end}} extension="{{escape .Extension}}" />
`)

func templatesCat1R3_idXmlBytes() ([]byte, error) {
	return _templatesCat1R3_idXml, nil
}

func templatesCat1R3_idXml() (*asset, error) {
	bytes, err := templatesCat1R3_idXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_id.xml", size: 84, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_measuresXml = []byte(`<component>
  <section>
    <!--
      *****************************************************************
      Measure Section
      *****************************************************************
    -->
    <!-- This is the templateId for Measure Section -->
    <templateId root="2.16.840.1.113883.10.20.24.2.2"/>
    <!-- This is the templateId for Measure Section QDM -->
    <templateId root="2.16.840.1.113883.10.20.24.2.3"/>
    <!-- This is the LOINC code for "Measure document". This stays the same for all measure section required by QRDA standard -->
    <code code="55186-1" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Measure Section</title>
    <text>
      <table border="1" width="100%">
        <thead>
          <tr>
            <th>eMeasure Title</th>
            <th>Version Neutral Identifier</th>
            <th>eMeasure Version Number</th>
            <th>Version Specific Identifier</th>
          </tr>
        </thead>
        <tbody>
          {{range .}}
          <tr>
            <td>{{escape .Name}}</td>
            <td>{{escape .HQMFSetID}}</td>
            <td>{{.HQMFVersionNumber}}</td>
            <td>{{escape .HQMFID}}</td>
            <td></td>
          </tr>
          {{end}}
        </tbody>
      </table>
    </text>
    <!-- 1..* Organizers, each containing a reference to an eMeasure -->
    {{range .}}
    <entry>
      <organizer classCode="CLUSTER" moodCode="EVN">
        <!-- This is the templateId for Measure Reference -->
        <templateId root="2.16.840.1.113883.10.20.24.3.98"/>
        <!-- This is the templateId for eMeasure Reference QDM -->
        <templateId root="2.16.840.1.113883.10.20.24.3.97"/>
        <id root="1.3.6.1.4.1.115" extension="{{escape .HQMFID}}"/>
        <statusCode code="completed"/>
        <!-- Containing isBranch external references -->
        <reference typeCode="REFR">
          <externalDocument classCode="DOC" moodCode="EVN">
            <!-- SHALL: This is the version specific identifier for eMeasure: QualityMeasureDocument/id it is a GUID-->
            <id root="2.16.840.1.113883.4.738" extension="{{escape .HQMFID}}"/>
            <!-- SHOULD This is the title of the eMeasure -->
            <text>{{escape .Name}}</text>
            <!-- SHOULD: setId is the eMeasure version neutral id  -->
            <setId root="{{escape .HQMFSetID}}"/>
            <!-- This is the sequential eMeasure Version number -->
            <versionNumber value="{{.HQMFVersionNumber}}"/>
          </externalDocument>
        </reference>
      </organizer>
    </entry>
    {{end}}
  </section>
</component>
`)

func templatesCat1R3_measuresXmlBytes() ([]byte, error) {
	return _templatesCat1R3_measuresXml, nil
}

func templatesCat1R3_measuresXml() (*asset, error) {
	bytes, err := templatesCat1R3_measuresXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_measures.xml", size: 2610, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_medication_detailsXml = []byte(`{{if .EntrySection.Route}}
    {{$vset := oidForCode .EntrySection.Route (index .MapDataCriteria.FieldOids "ROUTE")}}
    <routeCode code="{{.EntrySection.Route.Code}}"
               codeSystem="{{oidForCodeSystem .EntrySection.Route.CodeSystem}}"
               {{if ne $vset ""}}
                   sdtc:valueSet="{{$vset}}"
               {{end}}
               />
{{end}}
{{if (.EntrySection.Entry.NegationInd) and (derefBool .EntrySection.Entry.NegationInd)}}
	<doseQuantity nullFlavor="NA"/>
{{else if .EntrySection.HasSetDose}}
    <doseQuantity {{.EntrySection.DoseQuantity}}/>
{{end}}`)

func templatesCat1R3_medication_detailsXmlBytes() ([]byte, error) {
	return _templatesCat1R3_medication_detailsXml, nil
}

func templatesCat1R3_medication_detailsXml() (*asset, error) {
	bytes, err := templatesCat1R3_medication_detailsXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_medication_details.xml", size: 594, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_medication_dispenseXml = []byte(`{{range .EntrySection.FulfillmentHistory}}
    <entryRelationship typeCode="REFR">
    <supply classCode="SPLY" moodCode="EVN">
        <!-- Medication Dispense template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.18" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{newRandom}}"/>
        <statusCode code="completed"/>
        <effectiveTime {{valueOrNullFlavor .DispenseDate}}/>
        <repeatNumber value="1"/>
        <quantity {{$.EntrySection.FulfillmentQuantity .}}/>
        <product>
        <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template -->
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
            {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "medicationDispense"}}
            </manufacturedMaterial>
        </manufacturedProduct>
        </product>
    </supply>
    </entryRelationship>
{{end}}`)

func templatesCat1R3_medication_dispenseXmlBytes() ([]byte, error) {
	return _templatesCat1R3_medication_dispenseXml, nil
}

func templatesCat1R3_medication_dispenseXml() (*asset, error) {
	bytes, err := templatesCat1R3_medication_dispenseXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_medication_dispense.xml", size: 1097, mode: os.FileMode(420), modTime: time.Unix(1493239144, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_ordinalityXml = []byte(`{{if .EntrySection.HasSetOrdinality}}
    {{$valueSetOid := oidForCode .EntrySection.Ordinality.CodedConcept (index .MapDataCriteria.FieldOids "ORDINAL")}}
    <priorityCode  code="{{.EntrySection.Ordinality.Code}}" 
                codeSystem="{{oidForCodeSystem .EntrySection.Ordinality.CodeSystem}}"
                {{if $valueSetOid}} sdtc:valueSet="{{$valueSetOid}}" {{end}}
                />
{{end}}`)

func templatesCat1R3_ordinalityXmlBytes() ([]byte, error) {
	return _templatesCat1R3_ordinalityXml, nil
}

func templatesCat1R3_ordinalityXml() (*asset, error) {
	bytes, err := templatesCat1R3_ordinalityXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_ordinality.xml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_organizationXml = []byte(`<{{escape .TagName}}>
  <!-- Represents unique registry organization TIN -->
  {{range .Ids}}
    {{template "_id.xml" .}}
  {{end}}
  <!-- Contains name - specific registry not required-->
  <name>{{escape .Name}}</name>
  {{range .Telecoms}}
    {{template "_telecom.xml" .}}
  {{end}}
  {{range .Addresses}}
    {{template "_address.xml" .}}
  {{end}}
</{{escape .TagName}}>
`)

func templatesCat1R3_organizationXmlBytes() ([]byte, error) {
	return _templatesCat1R3_organizationXml, nil
}

func templatesCat1R3_organizationXml() (*asset, error) {
	bytes, err := templatesCat1R3_organizationXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_organization.xml", size: 378, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_patient_dataXml = []byte(`<component>
<section>
    <!-- This is the templateId for Patient Data section -->
    <templateId root="2.16.840.1.113883.10.20.17.2.4"/>
    <!-- This is the templateId for Patient Data QDM section -->
    <templateId root="2.16.840.1.113883.10.20.24.2.1" extension="2014-12-01" />

    <code code="55188-7" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Patient Data</title>
    <text>

    </text>
    {{range .EntryInfos}}
      {{executeTemplateForEntry .}}
    {{end}}
</section>
</component>
`)

func templatesCat1R3_patient_dataXmlBytes() ([]byte, error) {
	return _templatesCat1R3_patient_dataXml, nil
}

func templatesCat1R3_patient_dataXml() (*asset, error) {
	bytes, err := templatesCat1R3_patient_dataXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_patient_data.xml", size: 501, mode: os.FileMode(420), modTime: time.Unix(1493311295, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_providersXml = []byte(`<documentationOf typeCode="DOC">
  <serviceEvent classCode="PCPR"> <!-- care provision -->
  {{if .ProviderPerformances}}
    {{range .ProviderPerformances }}
      <effectiveTime>
        <low {{valueOrNullFlavor .StartDate}}/>
        <high {{valueOrNullFlavor .EndDate}}/>
      </effectiveTime>
      <!-- You can include multiple performers, each with an NPI, TIN, CCN. -->
      <performer typeCode="PRF">
        <time>
          <low {{valueOrNullFlavor .StartDate}}/>
          <high {{valueOrNullFlavor .EndDate}}/>
        </time>
        <assignedEntity>
          {{range .Provider.CDAIdentifiers}}
            {{if ne .Root "2.16.840.1.113883.4.2"}}
              <id root="{{ escape .Root}}" extension="{{ escape .Extension}}" />
            {{end}}
          {{end}}
          <representedOrganization>
            {{range .Provider.CDAIdentifiers}}
              {{if eq .Root "2.16.840.1.113883.4.2"}}
                <id root="2.16.840.1.113883.4.2" extension="{{ escape .Extension}}" />
              {{end}}
            {{end}}
          </representedOrganization>
        </assignedEntity>
      </performer>
    {{end}}
  {{else}}
  <!-- No provider data found in the patient record
       putting in a fake provider -->
  <effectiveTime>
    <low value="20020716"/>
    <high value="{{timeToFormat timeNow "20060102"}}"/>
  </effectiveTime>
  <!-- You can include multiple performers, each with an NPI, TIN, CCN. -->
  <performer typeCode="PRF">
    <time>
      <low value="20020716"/>
      <high value="{{timeToFormat timeNow "20060102"}}"/>
    </time>
    <assignedEntity>
      <!-- This is the provider NPI -->
      <id root="2.16.840.1.113883.4.6" extension="1234567893" />
      <representedOrganization>
        <!-- This is the organization TIN -->
        <id root="2.16.840.1.113883.4.2" extension="123456789" />
        <!-- This is the organization CCN -->
        <id root="2.16.840.1.113883.4.336" extension="54321" />
      </representedOrganization>
    </assignedEntity>
  </performer>
  {{end}}
  </serviceEvent>
</documentationOf>
`)

func templatesCat1R3_providersXmlBytes() ([]byte, error) {
	return _templatesCat1R3_providersXml, nil
}

func templatesCat1R3_providersXml() (*asset, error) {
	bytes, err := templatesCat1R3_providersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_providers.xml", size: 2078, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_reasonXml = []byte(`{{if .EntrySection.Entry.HasReason}}
  {{$reason := .EntrySection.Entry.NegationReasonOrReason}}
  {{$valueSetOid := oidForCode $reason (index .MapDataCriteria.FieldOids "REASON")}}
  {{if $valueSetOid}}
    <entryRelationship typeCode="RSON">
      <observation classCode="OBS" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.24.3.88" extension="2014-12-01"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface $reason.Code .EntrySection.StartTime}}"/>
          <code code="77301-0" codeSystem="2.16.840.1.113883.6.1" displayName="reason" codeSystemName="LOINC"/>
        <statusCode code="completed"/>
          <effectiveTime>
            <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          </effectiveTime>
        <value xsi:type="CD" code="{{$reason.Code}}" codeSystem="{{oidForCodeSystem $reason.CodeSystem}}" sdtc:valueSet="{{$valueSetOid}}"/>
      </observation>
    </entryRelationship>
  {{end}}
{{end}}
`)

func templatesCat1R3_reasonXmlBytes() ([]byte, error) {
	return _templatesCat1R3_reasonXml, nil
}

func templatesCat1R3_reasonXml() (*asset, error) {
	bytes, err := templatesCat1R3_reasonXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_reason.xml", size: 966, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_record_targetXml = []byte(`<recordTarget>
  <patientRole>
    {{if .MedicalRecordNumber}}
      {{if .MedicalRecordAssigner}}
        <id extension="{{escape .MedicalRecordNumber}}" root="{{escape .MedicalRecordAssigner}}" />
      {{else}}
        <id extension="12345" root="PlaceholderOrganization" />
      {{end}}
    {{else}}
      <id extension="12345" root="PlaceholderOrganization" />
    {{end}}
    <addr use="HP">
      {{if .Addresses}}
        {{range .Addresses}}
          {{range .Street}}
            <streetAddressLine>{{escape .}}</streetAddressLine>
          {{end}}
          <city>{{escape .City}}</city>
          <state>{{escape .State}}</state>
          <postalCode>{{escape .Zip}}</postalCode>
          <country>{{escape .Country }}</country>
        {{end}}
      {{else}}
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      {{end}}
    </addr>
    <telecom use="WP" value="tel:+1-781-271-3000"/>
    <patient>
      <name>
        <given>{{escape .First}}</given>
        <family>{{escape .Last}}</family>
      </name>
      <administrativeGenderCode code="{{escape .Gender}}" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender"/>
      <birthTime value="{{timeToFormat .BirthDate "20060102"}}"/>
      {{if .Race}}
        <raceCode code="{{escape .Race.Code}}" {{if .Race.DisplayName }}displayName="{{escape .Race.DisplayName}}"{{end}} codeSystemName="CDC Race and Ethnicity" codeSystem="2.16.840.1.113883.6.238"/>
      {{end}}
      {{if .Ethnicity }}
        <ethnicGroupCode code="{{escape .Ethnicity.Code}}" {{ if .Ethnicity.DisplayName }}displayName="{{escape .Ethnicity.DisplayName }}"{{end}} codeSystemName="CDC Race and Ethnicity" codeSystem="2.16.840.1.113883.6.238"/>
      {{end}}
      {{if .Languages}}
        {{range .Languages}}
          <languageCommunication>
            <templateId root="2.16.840.1.113883.3.88.11.83.2" assigningAuthorityName="HITSP/C83"/>
            <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.1" assigningAuthorityName="IHE/PCC"/>
            <languageCode code="{{index .Codes "IETF" 0 }}"/>
          </languageCommunication>
        {{end}}
      {{else}}
        <languageCommunication>
          <templateId root="2.16.840.1.113883.3.88.11.83.2" assigningAuthorityName="HITSP/C83"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.1" assigningAuthorityName="IHE/PCC"/>
          <languageCode code="en"/>
        </languageCommunication>
      {{end}}
    </patient>
  </patientRole>
</recordTarget>
`)

func templatesCat1R3_record_targetXmlBytes() ([]byte, error) {
	return _templatesCat1R3_record_targetXml, nil
}

func templatesCat1R3_record_targetXml() (*asset, error) {
	bytes, err := templatesCat1R3_record_targetXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_record_target.xml", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_reporting_parametersXml = []byte(`<component>
  <section>
    <!-- This is the templateId for Reporting Parameters section -->
    <templateId root="2.16.840.1.113883.10.20.17.2.1"/>
    <code code="55187-9" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Reporting Parameters</title>
    <text>
      <list>
        <item>Reporting period: {{timeToFormat .StartDate "Mon, 02 Jan 2006 15:04:05 -0700"}} - {{timeToFormat .EndDate "Mon, 02 Jan 2006 15:04:05 -0700"}}</item>
      </list>
    </text>
    <entry typeCode="DRIV">
      <act classCode="ACT" moodCode="EVN">
        <!-- This is the templateId for Reporting Parameteres Act -->
        <templateId root="2.16.840.1.113883.10.20.17.3.8"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInt .StartDate .EndDate}}" />
        <code code="252116004" codeSystem="2.16.840.1.113883.6.96" displayName="Observation Parameters"/>
        <effectiveTime>
          <low value="{{timeToFormat .StartDate "20060102150405"}}"/>
          <high value="{{timeToFormat .EndDate "20060102150405"}}"/>
        </effectiveTime>
      </act>
    </entry>
  </section>
</component>
`)

func templatesCat1R3_reporting_parametersXmlBytes() ([]byte, error) {
	return _templatesCat1R3_reporting_parametersXml, nil
}

func templatesCat1R3_reporting_parametersXml() (*asset, error) {
	bytes, err := templatesCat1R3_reporting_parametersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_reporting_parameters.xml", size: 1102, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_result_valueXml = []byte(`{{if not .ResultValueEntry.IsValuesEmpty}}
    {{range .Values}}
        {{if .IsCodesPresent}}
            {{template "_code.xml" codeDisplayWithPreferredCodeForResultValue $.ResultValueEntry .Coded $.ResultValueMdc "resultValue"}}
        {{else if eq .GetScalarType "num"}}
            <value xsi:type="PQ" value="{{.Scalar}}" {{if ne .Units ""}}unit="{{.Units}}"{{else}}unit="1"{{end}}/>
        {{else if eq .GetScalarType "bool"}}
            <value xsi:type="BL" value="{{.Scalar}}" />
        {{else}}
            <value xsi:type="ST" >{{.Scalar}}</value> 
        {{end}}
    {{end}}
{{else}}
    <value xsi:type="CD" nullFlavor="UNK"/>
{{end}}
`)

func templatesCat1R3_result_valueXmlBytes() ([]byte, error) {
	return _templatesCat1R3_result_valueXml, nil
}

func templatesCat1R3_result_valueXml() (*asset, error) {
	bytes, err := templatesCat1R3_result_valueXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_result_value.xml", size: 654, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_telecomXml = []byte(`<telecom use="{{escape .Use}}" value="tel:+{{escape .Value}}" />
`)

func templatesCat1R3_telecomXmlBytes() ([]byte, error) {
	return _templatesCat1R3_telecomXml, nil
}

func templatesCat1R3_telecomXml() (*asset, error) {
	bytes, err := templatesCat1R3_telecomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/_telecom.xml", size: 65, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3Cat1Xml = []byte(`<?xml version="1.0" encoding="utf-8"?>
<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="urn:hl7-org:v3"
 xmlns:voc="urn:hl7-org:v3/voc"
 xmlns:sdtc="urn:hl7-org:sdtc">
  <!-- QRDA Header -->
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
  <!-- US Realm Header Template Id -->
  <templateId root="2.16.840.1.113883.10.20.22.1.1" extension="2014-06-09" />
  <!-- QRDA templateId -->
  <templateId root="2.16.840.1.113883.10.20.24.1.1" extension="2014-12-01" />
  <!-- QDM-based QRDA templateId -->
  <templateId root="2.16.840.1.113883.10.20.24.1.2" extension="2014-12-01" />
  <!-- This is the globally unique identifier for this QRDA document -->
  <id root="{{ newRandom }}"/>
  <!-- QRDA document type code -->
  <code code="55182-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Quality Measure Report"/>
  <title>QRDA Incidence Report</title>
  <!-- This is the document creation time -->
  <effectiveTime value="{{ timeToFormat timeNow "20060102150405-700" }}"/>
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>
  <languageCode code="en"/>
  <!-- reported patient -->
    {{template "_record_target.xml" .Record}}

    {{if .Header}}
    {{range .Header.Authors}}
      {{template "_author.xml" .}}
    {{end}}
    <!-- SHALL have 1..* author. MAY be device or person.
      The author of the CDA document in this example is a device at a data submission vendor/registry. -->

    <!-- The custodian of the CDA document is the same as the legal authenticator in this
    example and represents the reporting organization. -->
    <!-- SHALL -->
    <custodian>
      <assignedCustodian>
        {{template "_organization.xml" .Header.Custodian.Organization}}
      </assignedCustodian>
    </custodian>

    <!-- The legal authenticator of the CDA document is a single person who is at the
      same organization as the custodian in this example. This element must be present. -->
    <!-- SHALL -->
    <legalAuthenticator>
      <!-- SHALL -->
      <time value="{{timeToFormat .Header.Authenticator.Time "20060102150405-700"}}"/>
      <!-- SHALL -->
      <signatureCode code="S"/>
      <assignedEntity>
        <!-- SHALL ID -->
        {{range .Header.Authenticator.Ids}}
          {{template "_id.xml" .}}
        {{end}}
        {{range .Header.Authenticator.Addresses}}
          {{template "_address.xml" .}}
        {{end}}
        {{range .Header.Authenticator.Telecoms}}
          {{template "_telecom.xml" .}}
        {{end}}
        <assignedPerson>
          <name>
             <given>{{escape .Header.Authenticator.Person.First}}</given>
             <family>{{escape .Header.Authenticator.Person.Last}}</family>
          </name>
       </assignedPerson>
        {{template "_organization.xml" .Header.Authenticator.Organization}}
      </assignedEntity>
    </legalAuthenticator>

  {{ else }}
    <author>
    <time value="{{ timeNow }}"/>
    <assignedAuthor>
      <!-- id extension="Cypress" root="2.16.840.1.113883.19.5"/ -->
      <!-- NPI -->
      <id extension="FakeNPI" root="2.16.840.1.113883.4.6"/>
      <addr>
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      </addr>
      <telecom use="WP" value="tel:(781)271-3000"/>
      <assignedAuthoringDevice>
        <manufacturerModelName>Cypress</manufacturerModelName >
        <softwareName>Cypress</softwareName >
      </assignedAuthoringDevice >
    </assignedAuthor>
  </author>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id root="2.16.840.1.113883.19.5"/>
        <name>Cypress Test Deck</name>
        <telecom use="WP" value="tel:(781)271-3000"/>
        <addr>
          <streetAddressLine>202 Burlington Rd.</streetAddressLine>
          <city>Bedford</city>
          <state>MA</state>
          <postalCode>01730</postalCode>
          <country>US</country>
        </addr>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <legalAuthenticator>
    <time value="{{ timeNow }}"/>
    <signatureCode code="S"/>
    <assignedEntity>
      <id root="bc01a5d1-3a34-4286-82cc-43eb04c972a7"/>
      <addr>
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      </addr>
      <telecom use="WP" value="tel:(781)271-3000"/>
      <assignedPerson>
        <name>
           <given>Henry</given>
           <family>Seven</family>
        </name>
     </assignedPerson>
      <representedOrganization>
        <id root="2.16.840.1.113883.19.5"/>
        <name>Cypress</name>
      </representedOrganization>
    </assignedEntity>
  </legalAuthenticator>
  {{end}}

  {{template "_providers.xml" .Record}}
  <component>
    <structuredBody>
      {{template "_measures.xml" .Measures}}
      {{template "_reporting_parameters.xml" .}}
      {{template "_patient_data.xml" .}}
    </structuredBody>
  </component>

</ClinicalDocument>
`)

func templatesCat1R3Cat1XmlBytes() ([]byte, error) {
	return _templatesCat1R3Cat1Xml, nil
}

func templatesCat1R3Cat1Xml() (*asset, error) {
	bytes, err := templatesCat1R3Cat1XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3/cat1.xml", size: 5208, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_Xml = []byte(`<!-- no template found with no oid specified -->`)

func templatesCat1R3_1_XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_Xml, nil
}

func templatesCat1R3_1_Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_.xml", size: 48, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202431Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="GOL">
    <!-- Conforms to C-CDA R2 Goal Observation -->
    <templateId root="2.16.840.1.113883.10.20.22.4.121" />
    <templateId root="2.16.840.1.113883.10.20.24.3.1" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
  </observation>
</entry>`)

func templatesCat1R3_1_216840111388310202431XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202431Xml, nil
}

func templatesCat1R3_1_216840111388310202431Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202431XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.1.xml", size: 670, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_21684011138831020243103Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.103" extension="2014-12-01"/> 
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" />
    <statusCode code="completed" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_1_21684011138831020243103XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_21684011138831020243103Xml, nil
}

func templatesCat1R3_1_21684011138831020243103Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_21684011138831020243103XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.103.xml", size: 724, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_21684011138831020243105Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Discharge Medication Entry -->
    <templateId root="2.16.840.1.113883.10.20.24.3.105" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="75311-1"
          codeSystem="2.16.840.1.113883.6.1" 
          codeSystemName="LOINC" 
          displayName="Discharge medications"/> 
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
      <substanceAdministration moodCode="EVN" classCode="SBADM">
        <!-- Medication Activity (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/> 
        <!-- Medication, Active template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.41" extension="2016-02-01"/>
        
        <id root="{{newRandom}}"/>
        <text>{{.EntrySection.Description}}</text>
        <statusCode code="active"/> 
        <effectiveTime xsi:type="IVL_TS">
            <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
            <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{if .EntrySection.HasSetAdministrationTiming}}
          <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
            <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
          </effectiveTime>
        {{end}}
        {{if .EntrySection.Route}}
        <!-- Attribute: route -->
          {{$vset := oidForCode .EntrySection.Route (index .MapDataCriteria.FieldOids "ROUTE")}}
          {{if ne $vset ""}}
            <routeCode code="{{.EntrySection.Route.Code}}" codeSystem="{{oidForCodeSystem .EntrySection.Route.CodeSystem}}" sdtc:valueSet="{{$vset}}"/>
          {{end}}
        {{end}}
        
        <!-- Attribute: dose -->
        {{if .EntrySection.HasSetDose}}
          <doseQuantity value="{{.EntrySection.Dose.Value}}"/>
        {{end}}

        {{if .EntrySection.ProductForm}}
        <administrationUnitCode code="{{.EntrySection.ProductForm.Code}}" codeSystem="{{.EntrySection.ProductForm.CodeSystem}}"/>
        {{end}}

        <consumable>
          <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template --> 
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
              {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
            </manufacturedMaterial>
            <manufacturerOrganization>
              <name>Medication Factory Inc.</name>
            </manufacturerOrganization>
          </manufacturedProduct>
        </consumable>
      </substanceAdministration>
    </entryRelationship>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_1_21684011138831020243105XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_21684011138831020243105Xml, nil
}

func templatesCat1R3_1_21684011138831020243105Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_21684011138831020243105XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.105.xml", size: 3124, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024311Xml = []byte(`<entry> 
  <act classCode="ACT" moodCode="EVN">
  <!-- Conforms to C-CDA Problem Concern Act (V2) -->
  <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
  <!-- Diagnosis Active Concern Act -->
  <templateId root="2.16.840.1.113883.10.20.24.3.121" extension="2014-12-01" />
  <id root="{{newRandom}}" />
  <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
  <!-- The statusCode represents whether this is an active (active),       inactive (suspended) or resolved (completed) diagnosis -->    
  <statusCode code="active" />
  <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
  <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!--  Diagnosis active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.11" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="29308-4" displayName="diagnosis" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC"/>
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}
    {{template "_code.xml" codeDisplayWithPreferredCodeAndLaterality .EntrySection.Entry .EntrySection.Entry.Coded "entryCode" .EntrySection.Laterality .MapDataCriteria}}
    {{if .EntrySection.HasSetSeverity}}
    <entryRelationship typeCode="REFR">
       <observation classCode="OBS" moodCode="EVN">
          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>
          <code code="SEV" 
                codeSystem="2.16.840.1.113883.5.4"/>
           <statusCode code="completed"/>
           <value xsi:type="CD"
                code="{{.EntrySection.Severity.Code}}"
                codeSystem="{{oidForCodeSystem .EntrySection.Severity.CodeSystem}}"
              {{if ne .EntrySection.Severity.Title ""}}
                displayName="{{.EntrySection.Severity.Title}}"
              {{end}}
                sdtc:valueSet="{{oidForCode .EntrySection.Severity.CodedConcept (index .MapDataCriteria.FieldOids "SEVERITY")}}"
            />
       </observation>

    </entryRelationship>
   {{end}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024311XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024311Xml, nil
}

func templatesCat1R3_1_2168401113883102024311Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024311XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.11.xml", size: 2802, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024312Xml = []byte(`<entry typeCode="DRIV">
  <organizer moodCode="EVN" classCode="CLUSTER">
    <templateId root="2.16.840.1.113883.10.20.22.4.45" extension="2015-08-01"/>
    <!--    Family history organizer template   -->
    <templateId root="2.16.840.1.113883.10.20.24.3.12" extension="2016-02-01"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <!-- The subject is currently hardcoded to father -->
    <subject>
      <relatedSubject classCode="PRS">
        <code code="FTH" displayName="Father" 
              codeSystemName="HL7RoleCode" 
              codeSystem="2.16.840.1.113883.5.111">
          <translation code="9947008" 
                displayName="Biological father" 
                codeSystemName="SNOMED CT" 
                codeSystem="2.16.840.1.113883.6.96"/>
        </code>
        <subject>
          <administrativeGenderCode 
               code="M" codeSystem="2.16.840.1.113883.5.1"
               codeSystemName="HL7AdministrativeGender" 
               displayName="Male"/>
            <birthTime value="1912"/>
        </subject>
      </relatedSubject>
    </subject>
    <component>
      <observation classCode="OBS" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.22.4.46" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
        <code code="55607006" displayName="Problem" 
              codeSystemName="SNOMED CT" 
              codeSystem="2.16.840.1.113883.6.96"/>
        <statusCode code="completed"/>
        <effectiveTime>
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        <text>{{.EntrySection.Description}}</text>
      </observation>
    </component>
  </organizer>
</entry>`)

func templatesCat1R3_1_2168401113883102024312XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024312Xml, nil
}

func templatesCat1R3_1_2168401113883102024312Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024312XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.12.xml", size: 2090, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024313Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN">
    <!-- Conforms to C-CDA Problem Concern Act (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
    <!-- Diagnosis Resolved Concern Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.123" extension="2014-12-01" />
    <id root="{{newRandom}}"/>
    <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
    <statusCode code="suspended" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
  <!--  Problem observation template -->
  <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
  <!-- Diagnosis, inactive template -->
  <templateId root="2.16.840.1.113883.10.20.24.3.13" extension="2014-12-01"/>
  <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
  <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="diagnosis"/>
  
  <statusCode code="completed"/>

  <effectiveTime>
    <!-- Attribute: Start Datetime -->
    <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    <!-- Attribute: Stop Datetime -->
    <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
  </effectiveTime>
  {{template "_ordinality.xml" .}}

  {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024313XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024313Xml, nil
}

func templatesCat1R3_1_2168401113883102024313Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024313XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.13.xml", size: 1702, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_21684011138831020243135Xml = []byte(`<entry> 
  <act classCode="ACT" moodCode="EVN">
  <!-- Conforms to C-CDA 2.1 Problem Concern Act (V3) -->
  <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2015-08-01" />
  <!-- Diagnosis Concern Act -->
  <templateId root="2.16.840.1.113883.10.20.24.3.137" />
  <id root="{{newRandom}}" />
  <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
  <!-- The statusCode represents whether this is an active (active),       inactive (suspended) or resolved (completed) diagnosis -->    
  <statusCode code="active" />
  <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
  <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2015-08-01"/>
    <!-- Diagnosis template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.135" />
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1">
      <translation code="282291009" codeSystem="2.16.840.1.113883.6.96"/>
    </code>
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: admission datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: discharge datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCodeAndLaterality .EntrySection.Entry .EntrySection.Entry.Coded "entryCode" .EntrySection.Laterality .MapDataCriteria}}
    {{if .EntrySection.HasSetSeverity}}
    <entryRelationship typeCode="REFR">
       <observation classCode="OBS" moodCode="EVN">
          <templateId root="2.16.840.1.113883.10.20.22.4.8" extension="2014-06-09"/>
          <code code="SEV" 
                codeSystem="2.16.840.1.113883.5.4"/>
           <statusCode code="completed"/>
           <value xsi:type="CD"
                code="{{.EntrySection.Severity.Code}}"
                codeSystem="{{oidForCodeSystem .EntrySection.Severity.CodeSystem}}"
              {{if ne .EntrySection.Severity.Title ""}}
                displayName="{{.EntrySection.Severity.Title}}"
              {{end}}
                sdtc:valueSet="{{oidForCode .EntrySection.Severity.CodedConcept (index .MapDataCriteria.FieldOids "SEVERITY")}}"
            />
       </observation>
    </entryRelationship>
   {{end}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_1_21684011138831020243135XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_21684011138831020243135Xml, nil
}

func templatesCat1R3_1_21684011138831020243135Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_21684011138831020243135XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.135.xml", size: 2698, mode: os.FileMode(420), modTime: time.Unix(1493914661, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024314Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN">
    <!-- Conforms to C-CDA Problem Concern Act (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.3" extension="2014-06-09" />
    <!-- Diagnosis Resolved Concern Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.125" extension="2014-12-01" />
    <id root="{{newRandom}}"/>
    <code code="CONC" codeSystem="2.16.840.1.113883.5.6" displayName="Concern" />
    <statusCode code="completed" />
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="SUBJ">
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!-- Diagnosis, resolved template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.14" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="29308-4" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="diagnosis"/>
    
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <!-- Attribute: Stop Datetime -->
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}

    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
  </entryRelationship>
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024314XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024314Xml, nil
}

func templatesCat1R3_1_2168401113883102024314Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024314XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.14.xml", size: 1733, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024317Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidated Plan of Care Activity Observation
        templateId (Implied Template) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.44" extension="2014-06-09"/>
    <!-- Diagnostic Study, Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.17" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>
    <!-- The effectiveTime indicates the time when the Diagnostic Study is intended to take place -->
    <effectiveTime>
      <low  {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </observation>
</entry>
`)

func templatesCat1R3_1_2168401113883102024317XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024317Xml, nil
}

func templatesCat1R3_1_2168401113883102024317Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024317XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.17.xml", size: 1322, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024318Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
  <entry>
    <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
      <!-- Consolidated Procedure Activity Observation templateId 
        (Implied Template) -->
      <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
      <!-- Diagnostic Study, Performed template -->
      <templateId root="2.16.840.1.113883.10.20.24.3.18" extension="2016-02-01"/>
      <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
      {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
      <text>{{$.EntrySection.Entry.Description}}</text>
      <statusCode code="completed"/>
      <effectiveTime>
        <!-- Attribute: Start Datetime -->
        <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
        <!-- Attribute: End Datetime -->
        <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
      </effectiveTime>
      {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
      {{template "_reason.xml" $}}
    </observation>
  </entry>
{{end}}
`)

func templatesCat1R3_1_2168401113883102024318XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024318Xml, nil
}

func templatesCat1R3_1_2168401113883102024318Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024318XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.18.xml", size: 1217, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202432Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Communication from patient to provider -->
    <templateId root="2.16.840.1.113883.10.20.24.3.2" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}} 

    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>

    <participant typeCode="AUT">
      <participantRole classCode="PAT">
        <code code="116154003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Patient"/>
      </participantRole>
    </participant>

    <participant typeCode="IRCP">
      <participantRole classCode="ASSIGNED">
        <code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
      </participantRole>
    </participant>

    {{if .EntrySection.Entry.HasReason}}
      {{template "_reason.xml" .}}
    {{end}}

  </act>
</entry>
`)

func templatesCat1R3_1_216840111388310202432XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202432Xml, nil
}

func templatesCat1R3_1_216840111388310202432Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202432XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.2.xml", size: 1286, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024322Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="RQO">
    <!--  Plan of Care Activity Encounter template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.40" extension="2014-06-09"/>
    <!-- Encounter order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.22" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
		{{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
  
    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}} />
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>

  </encounter>
</entry>
`)

func templatesCat1R3_1_2168401113883102024322XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024322Xml, nil
}

func templatesCat1R3_1_2168401113883102024322Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024322XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.22.xml", size: 896, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024323Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="EVN">
    <!-- Encounter activities template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.49" extension="2014-06-09" />
    <!-- Encounter performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.23" extension="2014-12-01" />
    <id root="1.3.6.1.4.1.115" extension="{{newRandom}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- We try to look for the admit/discharge times on the encounter if they are there. If not, we fall back to the typical start/end date. -->
      {{$startTime := condAssign .EntrySection.AdmitTime .EntrySection.StartTime}}
      {{$endTime := condAssign .EntrySection.DischargeTime .EntrySection.EndTime}}
      <low {{valueOrNullFlavor $startTime}}/>
      <high {{valueOrNullFlavor $endTime}}/>
    </effectiveTime>
    {{if .EntrySection.DischargeDisposition}}
      {{dischargeDispositionDisplay .EntrySection.DischargeDisposition}}
    {{end}}

    {{if not .EntrySection.Facility.IsEmpty}}
      <participant typeCode="LOC">
        <!-- Facility Location template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.100"/>
        <time>
          <!-- Attribute: facility location arrival datetime -->
          <low {{valueOrNullFlavor .EntrySection.Facility.StartTime}}/>
          <!-- Attribute: facility location departure datetime -->
          <high {{valueOrNullFlavor .EntrySection.Facility.StartTime}}/>
        </time>
        <participantRole classCode="SDLOC">
          {{if .EntrySection.Facility.Code}}
            {{$vset := oidForCode .EntrySection.Facility.Code (index .MapDataCriteria.FieldOids "FACILITY_LOCATION")}}
            {{if ne $vset ""}}
              <code code="{{.EntrySection.Facility.Code.Code}}"
                codeSystem="{{oidForCodeSystem .EntrySection.Facility.Code.CodeSystem}}" sdtc:valueSet="{{$vset}}"/>
            {{else}}
              <code nullFlavor="UNK"/>
            {{end}}
          {{else}}
            <code nullFlavor="UNK"/>
          {{end}}
          {{if gt (len .EntrySection.Facility.Addresses) 0}}
            {{$firstAddr := index .EntrySection.Facility.Addresses 0}}
            <addr>
              <streetAddressLine>{{$firstAddr.Street}}</streetAddressLine>
              <city>{{$firstAddr.City}}</city>
              <state>{{$firstAddr.State}}</state>
              <postalCode>{{$firstAddr.Zip}}</postalCode>
              <country>{{$firstAddr.Country}}</country>
            </addr>
          {{end}}
          <telecom nullFlavor="UNK"/>
          <playingEntity classCode="PLC">
            <name>{{.EntrySection.Facility.Name}}</name>
          </playingEntity>
        </participantRole>
      </participant>
    {{end}}
    {{if .EntrySection.Reason}}
      {{template "_reason.xml" .}}
    {{end}}
  </encounter>
</entry>
`)

func templatesCat1R3_1_2168401113883102024323XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024323Xml, nil
}

func templatesCat1R3_1_2168401113883102024323Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024323XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.23.xml", size: 3023, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024326Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- Conforms to C-CDA R2 Procedure Activity Observation (V2) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
    <!-- Functional Status, Performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.26" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>

    <!-- Result -->
    {{if len .EntrySection.Entry.Values}}
      {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValue (index .EntrySection.Entry.Values 0) .MapDataCriteria)}}
    {{else}}
      <value xsi:type="CD" nullFlavor="UNK"/>
    {{end}}
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024326XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024326Xml, nil
}

func templatesCat1R3_1_2168401113883102024326Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024326XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.26.xml", size: 1089, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202433Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{ negationIndicator .EntrySection.Entry}}>
    <!-- Communication from provider to patient -->
    <templateId root="2.16.840.1.113883.10.20.24.3.3" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>  
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>
    
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    
    <participant typeCode="AUT">
      <participantRole classCode="ASSIGNED">
        <code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
      </participantRole>
    </participant>
    
    <participant typeCode="IRCP">
      <participantRole classCode="PAT"/>
    </participant>
    
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_1_216840111388310202433XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202433Xml, nil
}

func templatesCat1R3_1_216840111388310202433Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202433XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.3.xml", size: 1108, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024331Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Plan of Care Activity Act template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.39" extension="2014-06-09"/>
    <!-- Intervention Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.31" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="active"/>
     <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024331XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024331Xml, nil
}

func templatesCat1R3_1_2168401113883102024331Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024331XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.31.xml", size: 1083, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024332Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidation CDA: Procedure Activity Act template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.12" extension="2014-06-09"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.32" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_reason.xml" .}}
    {{if not .EntrySection.Entry.IsValuesEmpty}}
      {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValues .EntrySection.Entry.Values .MapDataCriteria)}}
    {{end}}

  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024332XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024332Xml, nil
}

func templatesCat1R3_1_2168401113883102024332Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024332XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.32.xml", size: 1011, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024337Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidation Plan of Care Activity Observation -->
    <templateId root="2.16.840.1.113883.10.20.22.4.44" extension="2014-06-09"/>
    <!-- Lab Test Order -->
    <templateId root="2.16.840.1.113883.10.20.24.3.37" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <!-- Attribute: datetime -->
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.AsPointInTime}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024337XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024337Xml, nil
}

func templatesCat1R3_1_2168401113883102024337Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024337XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.37.xml", size: 994, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024338Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Lab test performed -->
    <templateId root="2.16.840.1.113883.10.20.24.3.38" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{if not .EntrySection.Entry.IsValuesEmpty}}
      {{template "_result_value.xml" (.EntrySection.Entry.WrapResultValues .EntrySection.Entry.Values .MapDataCriteria)}}
    {{else}}
      <value xsi:type="PQ" nullFlavor="UNK"/>
    {{end}}
    {{template "_reason.xml" .}}
    </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024338XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024338Xml, nil
}

func templatesCat1R3_1_2168401113883102024338Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024338XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.38.xml", size: 980, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202434Xml = []byte(`<entry>
	<act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
		<!-- Communication from provider to provider -->
		<templateId root="2.16.840.1.113883.10.20.24.3.4" extension="2014-12-01"/>
		<id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
		{{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
		<text>{{ .EntrySection.Description }}</text>
		<statusCode code="completed"/>

		<effectiveTime>
			<low {{valueOrNullFlavor .EntrySection.StartTime}}/>
			<high {{valueOrNullFlavor .EntrySection.EndTime}}/>
		</effectiveTime>

		<participant typeCode="AUT">
			<participantRole classCode="ASSIGNED">
				<code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
			</participantRole>
		</participant>

		<participant typeCode="IRCP">
			<participantRole classCode="ASSIGNED">
				<code code="158965000" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Medical Practitioner"/>
			</participantRole>
		</participant>

		{{template "_reason.xml" .}}

		{{range .EntrySection.References}}
				{{template "_fulfills.xml" .}}
		{{end}}

	</act>
</entry>
`)

func templatesCat1R3_1_216840111388310202434XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202434Xml, nil
}

func templatesCat1R3_1_216840111388310202434Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202434XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.4.xml", size: 1277, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024341Xml = []byte(`<entry>
  <substanceAdministration classCode="SBADM" moodCode="EVN">
    <!-- Medication Activity (consolidation) template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/>
    <!-- Medication, Active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.41" extension="2016-02-01"/>

    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime xsi:type="IVL_TS">
        <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
        <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{if .EntrySection.HasSetAdministrationTiming}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
      </effectiveTime>
    {{end}}
    {{template "_medication_details.xml" .}}

    {{if .EntrySection.ProductForm}}
    <administrationUnitCode code="{{escape .EntrySection.ProductForm.Code}}" codeSystem="{{.EntrySection.ProductForm.CodeSystem}}"/>
    {{end}}

    <consumable>
      <manufacturedProduct classCode="MANU">
        <!-- Medication Information (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <manufacturedMaterial>
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </manufacturedMaterial>
        <manufacturerOrganization>
          <name>Medication Factory Inc.</name>
        </manufacturerOrganization>
      </manufacturedProduct>
    </consumable>

    {{template "_medication_dispense.xml" .}}

  </substanceAdministration>

</entry>`)

func templatesCat1R3_1_2168401113883102024341XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024341Xml, nil
}

func templatesCat1R3_1_2168401113883102024341Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024341XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.41.xml", size: 1910, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024342Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Medication, Administered template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.42" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="416118004" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Administration"/>
    <statusCode code="completed"/>
    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <entryRelationship typeCode="COMP">
      <substanceAdministration classCode="SBADM" moodCode="EVN">
        <!-- Medication Activity (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.16" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <text>{{.EntrySection.Description}}</text>
        <statusCode code="completed"/>
        <effectiveTime xsi:type="IVL_TS">
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        {{template "_medication_details.xml" .}}
        <consumable>
          <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template -->
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
              {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
            </manufacturedMaterial>
          </manufacturedProduct>
        </consumable>
      </substanceAdministration>
    </entryRelationship>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024342XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024342Xml, nil
}

func templatesCat1R3_1_2168401113883102024342Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024342XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.42.xml", size: 1897, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024343Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <!--  Medication Allergy -->
    <templateId root="2.16.840.1.113883.10.20.24.3.43" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" displayName="Assertion" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value code="62014003" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Adverse drug effect" xsi:type="CD"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024343XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024343Xml, nil
}

func templatesCat1R3_1_2168401113883102024343Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024343XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.43.xml", size: 1186, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024344Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <!--  Medication Allergy -->
    <templateId root="2.16.840.1.113883.10.20.24.3.44" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" displayName="Assertion" codeSystem="2.16.840.1.113883.5.4" codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    <value code="416098002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Drug allergy" xsi:type="CD"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024344XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024344Xml, nil
}

func templatesCat1R3_1_2168401113883102024344Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024344XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.44.xml", size: 1238, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024345Xml = []byte(`<entry>
  <act classCode="ACT" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Medication Dispensed Act -->
    <templateId root="2.16.840.1.113883.10.20.24.3.139"/>
    <id root="{{newRandom}}" />
    <code code="SPLY" codeSystem="2.16.840.1.113883.5.6" displayName="supply" codeSystemName="ActClass"/>
    <entryRelationship typeCode="SUBJ">
      <!--Medication dispensed -->
      <supply classCode="SPLY" moodCode="EVN">
        <!--  Medication Dispensed template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.45" extension="2016-02-01"/>
        <!-- Medication Dispense template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.18" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
        <text>{{.EntrySection.Description}}</text>
        <statusCode code="completed"/>
        <effectiveTime xsi:type="IVL_TS">
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
        <product>
          <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template -->
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
              {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
            </manufacturedMaterial>
          </manufacturedProduct>
        </product>
      </supply>
    </entryRelationship>
    {{template "_reason.xml" .}}
  </act>
</entry>`)

func templatesCat1R3_1_2168401113883102024345XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024345Xml, nil
}

func templatesCat1R3_1_2168401113883102024345Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024345XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.45.xml", size: 1702, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024346Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!-- consolidation CDA Allergy Observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.7" extension="2014-06-09"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.46" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" 
          displayName="Assertion" 
          codeSystem="2.16.840.1.113883.5.4" 
          codeSystemName="ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value xsi:type="CD" 
           code="59037007" 
           displayName="Drug intolerance"
           codeSystem="2.16.840.1.113883.6.96" 
           codeSystemName="SNOMED CT"/>

    <participant typeCode="CSM">
      <participantRole classCode="MANU">
        <playingEntity classCode="MMAT">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
          <name>{{.EntrySection.Description}}</name>
        </playingEntity>
      </participantRole>
    </participant>
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024346XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024346Xml, nil
}

func templatesCat1R3_1_2168401113883102024346Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024346XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.46.xml", size: 1230, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024347Xml = []byte(`<entry>
  <!--Medication Order -->
  <substanceAdministration classCode="SBADM" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <templateId root="2.16.840.1.113883.10.20.22.4.42" extension="2014-06-09"/>
    <!-- Medication, Order template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.47" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="active"/>
    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{if (.EntrySection.Entry.NegationInd) and derefBool .EntrySection.Entry.NegationInd}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period nullFlavor="NA"/>
      </effectiveTime>
    {{else if .EntrySection.HasSetAdministrationTiming}}
      <effectiveTime xsi:type="PIVL_TS" institutionSpecified="true" operator="A">
        <period value="{{.EntrySection.AdministrationTiming.Period.Value}}" unit="{{.EntrySection.AdministrationTiming.Period.Unit}}"/>
      </effectiveTime>
    {{end}}
    {{if .EntrySection.AllowedAdministrations}}
      <repeatNumber value="{{.EntrySection.AllowedAdministrations}}" />
    {{end}}
    {{template "_medication_details.xml" .}}
    <consumable>
      <manufacturedProduct classCode="MANU">
        <!-- Medication Information (consolidation) template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
        <id root="{{newRandom}}"/>
        <manufacturedMaterial>
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </manufacturedMaterial>
      </manufacturedProduct>
    </consumable>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <assignedAuthor>
        <id root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </substanceAdministration>
</entry>
`)

func templatesCat1R3_1_2168401113883102024347XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024347Xml, nil
}

func templatesCat1R3_1_2168401113883102024347Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024347XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.47.xml", size: 2194, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024351Xml = []byte(`<entry>
  <!-- Clinical Trial Participant -->
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.51" extension="2016-02-01"/>
    <id root="{{newRandom}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4"/>
    <statusCode code="active"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024351XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024351Xml, nil
}

func templatesCat1R3_1_2168401113883102024351Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024351XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.51.xml", size: 616, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024354Xml = []byte(`<entry>
  <!-- Patient characteristic expired -->
  <observation classCode="OBS" moodCode="EVN">
    <!-- Consolidation Deceased Observation templateId -->
    <templateId root="2.16.840.1.113883.10.20.22.4.79" extension="2015-08-01"/>
    <!-- Patient Characteristic Expired -->
    <templateId root="2.16.840.1.113883.10.20.24.3.54" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{newRandom}}"/>
    <code code="ASSERTION" codeSystem="2.16.840.1.113883.5.4" codeSystemName="HL7ActCode"/>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value code="419099009" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Dead" xsi:type="CD"/>
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024354XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024354Xml, nil
}

func templatesCat1R3_1_2168401113883102024354Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024354XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.54.xml", size: 797, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024355Xml = []byte(`<entry>
  <!-- Patient Characteristic Payer -->
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.55"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="48768-6" codeSystemName="LOINC" codeSystem="2.16.840.1.113883.6.1" displayName="Payment source"/> 
    <statusCode code="completed"/>
    <effectiveTime>
      <!-- Attribute: Start Datetime -->
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      {{if .EntrySection.EndTime}}
        <high {{valueOrNullFlavor .EntrySection.EndTime}} />
      {{end}}
    </effectiveTime>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}

  </observation>            
</entry>`)

func templatesCat1R3_1_2168401113883102024355XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024355Xml, nil
}

func templatesCat1R3_1_2168401113883102024355Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024355XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.55.xml", size: 813, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024359Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
<entry>
  <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
    <!-- Procedure Activity Procedure (Consolidation) template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.13" extension="2014-06-09"/>
    <!-- Physical Exam, Performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.59" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
    <text>{{$.EntrySection.Description}}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
    {{template "_reason.xml" $}}
  </observation>
</entry>
{{end}}`)

func templatesCat1R3_1_2168401113883102024359XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024359Xml, nil
}

func templatesCat1R3_1_2168401113883102024359Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024359XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.59.xml", size: 1058, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024362Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <templateId root="2.16.840.1.113883.10.20.24.3.62" extension="2016-02-01"/>
    <templateId root="2.16.840.1.113883.10.20.24.3.104" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="ASSERTION" 
          codeSystem="2.16.840.1.113883.5.4"
          codeSystemName="ActCode"
          displayName="Assertion"/>  
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
    </effectiveTime>
    <value xsi:type="CD"
           code="102460003"
           codeSystem="2.16.840.1.113883.6.96"
           codeSystemName="SNOMED CT"
           displayName="Decreased tolerance"/>
    <entryRelationship typeCode="CAUS" inversionInd="true">
      <procedure classCode="PROC" moodCode="EVN">
        <!--  Procedure performed template -->
        <templateId root="2.16.840.1.113883.10.20.24.3.64" extension="2016-02-01"/>
        <!-- Procedure Activity Procedure-->
        <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        <text>{{ .EntrySection.Description }}</text>
        <statusCode code="completed"/>
        <effectiveTime>
          <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
        </effectiveTime>
      </procedure>
    </entryRelationship>
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024362XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024362Xml, nil
}

func templatesCat1R3_1_2168401113883102024362Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024362XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.62.xml", size: 1706, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024363Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <!-- Consolidated Plan of Care Activity Procedure TemplateId (Implied Template) -->
    <templateId root="2.16.840.1.113883.10.20.22.4.41" extension="2014-06-09"/> 
    <!-- QRDA Procedure, Order TemplateId --> 
    <templateId root="2.16.840.1.113883.10.20.24.3.63" extension="2014-12-01"/> 
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="active"/>
    <!-- Attribute: datetime --> 
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.StartTime}}/> 
      <assignedAuthor>
        <id nullFlavor="NA"/>
      </assignedAuthor>
    </author>
    {{template "_reason.xml" .}}
  </procedure>
</entry>`)

func templatesCat1R3_1_2168401113883102024363XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024363Xml, nil
}

func templatesCat1R3_1_2168401113883102024363Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024363XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.63.xml", size: 1011, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024364Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!--  Procedure performed template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.64" extension="2016-02-01"/>
    <!-- Procedure Activity Procedure-->
    <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
    <text>{{ .EntrySection.Description }}</text>
    <statusCode code="completed"/>
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_ordinality.xml" .}}
    {{template "_reason.xml" .}}
    {{if .EntrySection.HasSetIncisionTime}}
    <entryRelationship typeCode="REFR">
      <procedure classCode="PROC" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.24.3.89"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface .EntrySection.Entry.ObjectIdentifier.ID .EntrySection.IncisionTime}}" />
        <code code="34896006" 
              codeSystem="2.16.840.1.113883.6.96"
              codeSystemName="SNOMED CT" 
              displayName="incision"/>
              <effectiveTime {{valueOrNullFlavor .EntrySection.IncisionTime}}/>
      </procedure>
    </entryRelationship>
    {{end}}

    {{range .EntrySection.Entry.Values}}
      <entryRelationship typeCode="REFR">
       <observation classCode="OBS" moodCode="EVN">
         <!-- Conforms to C-CDA R2 Result Observation (V2) -->
         <templateId root="2.16.840.1.113883.10.20.22.4.2" extension="2015-08-01"/>
         <!-- Result (QRDA I R3) -->
         <templateId root="2.16.840.1.113883.10.20.24.3.87" extension="2016-02-01"/>
         <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface $}}"/>
          {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
          <statusCode code="completed"/>
          <effectiveTime>
            <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
            <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
          </effectiveTime>
         {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
        
       </observation>
     </entryRelationship>
   {{end}}
  </procedure>
</entry>`)

func templatesCat1R3_1_2168401113883102024364XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024364Xml, nil
}

func templatesCat1R3_1_2168401113883102024364Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024364XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.64.xml", size: 2554, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024369Xml = []byte(`{{range .EntrySection.Entry.NonEmptyResultValueArray}}
<entry>
  <observation classCode="OBS" moodCode="EVN" {{negationIndicator $.EntrySection.Entry}}>
    <!-- Consolidation Assessment Scale Observation templateId -->
    <templateId root="2.16.840.1.113883.10.20.22.4.69"/>
    <!-- Risk Category Assessment -->
    <templateId root="2.16.840.1.113883.10.20.24.3.69" extension="2016-02-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{$.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "entryCode"}}
    <text>{{$.EntrySection.Description}}</text>
    <statusCode code="completed"/>

    <effectiveTime>
      <low {{valueOrNullFlavor $.EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor $.EntrySection.EndTime}}/>
    </effectiveTime>
    {{template "_result_value.xml" ($.EntrySection.Entry.WrapResultValue . $.MapDataCriteria)}}
    {{template "_reason.xml" $}}
  </observation>
</entry>
{{end}}`)

func templatesCat1R3_1_2168401113883102024369XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024369Xml, nil
}

func templatesCat1R3_1_2168401113883102024369Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024369XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.69.xml", size: 1027, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202437Xml = []byte(`<entry>
  <procedure classCode="PROC" moodCode="EVN" {{negationIndicator .EntrySection.Entry}}>
    <!-- Procedure Activity Procedure -->
    <templateId root="2.16.840.1.113883.10.20.22.4.14" extension="2014-06-09"/>
    <!-- Device Applied -->
    <templateId root="2.16.840.1.113883.10.20.24.3.7" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension={{.EntrySection.Entry.ObjectIdentifier.ID}}/>
    <code code="360030002" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="application of device"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="completed"/>
    
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>

    {{$vset := oidForCode .EntrySection.AnatomicalStructure (index .MapDataCriteria.FieldOids "ANATOMICAL_LOCATION_SITE")}}
    {{if ne $vset ""}}
      <targetSiteCode code="{{.EntrySection.AnatomicalStructure.Code}}"
        codeSystem="{{oidForCodeSystem .EntrySection.AnatomicalStructure}}" sdtc:valueSet="{{$vset}}"/>
    {{end}}
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </procedure>
</entry>`)

func templatesCat1R3_1_216840111388310202437XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202437Xml, nil
}

func templatesCat1R3_1_216840111388310202437Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202437XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.7.xml", size: 1517, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024376Xml = []byte(`<entry>
  <observation classCode="OBS" moodCode="EVN">
    <!--  Problem observation template -->
    <templateId root="2.16.840.1.113883.10.20.22.4.4" extension="2014-06-09"/>
    <!-- Symptom, active template -->
    <templateId root="2.16.840.1.113883.10.20.24.3.76" extension="2014-12-01"/>  
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="418799008" codeSystem="2.16.840.1.113883.6.96" codeSystemName="SNOMED CT" displayName="Symptom"/>
    <text>{{.EntrySection.Description}}</text>
    <statusCode code="completed"/> 
   
    <effectiveTime>
      <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
    </effectiveTime>
    
    {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
  </observation>
</entry>`)

func templatesCat1R3_1_2168401113883102024376XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024376Xml, nil
}

func templatesCat1R3_1_2168401113883102024376Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024376XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.76.xml", size: 908, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024381Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="EVN">
    <!-- Transfer From -->
    <templateId root="2.16.840.1.113883.10.20.24.3.81" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="77305-1" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="transferred from"/>
    <statusCode code="completed"/>
    <participant typeCode="ORG">
      <time>
        <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
        <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
      </time>
      <participantRole classCode="LOCE">
        <code code="{{.EntrySection.TransferFrom.Code}}"
              codeSystem="{{oidForCodeSystem .EntrySection.TransferFrom.CodeSystem}}"
              sdtc:valueSet="{{oidForCode .EntrySection.TransferFrom.CodedConcept (index .MapDataCriteria.FieldOids "TRANSFER_FROM")}}"
            />
      </participantRole> 
    </participant>
  </encounter>
</entry>`)

func templatesCat1R3_1_2168401113883102024381XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024381Xml, nil
}

func templatesCat1R3_1_2168401113883102024381Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024381XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.81.xml", size: 984, mode: os.FileMode(420), modTime: time.Unix(1493756780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_2168401113883102024382Xml = []byte(`<entry>
  <encounter classCode="ENC" moodCode="EVN">
    <!-- Transfer To -->
    <templateId root="2.16.840.1.113883.10.20.24.3.82" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="77306-9" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Discharge disposition"/>
    <statusCode code="completed"/>
    <participant typeCode="DST">
      <time>
        <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
        <high {{valueOrNullFlavor .EntrySection.EndTime}}/>
      </time>
      <participantRole classCode="LOCE">
        <code code="{{.EntrySection.TransferTo.Code}}"
              codeSystem="{{oidForCodeSystem .EntrySection.TransferTo.CodeSystem}}"
              sdtc:valueSet="{{oidForCode .EntrySection.TransferTo.CodedConcept (index .MapDataCriteria.FieldOids "TRANSFER_TO")}}"
            />
      </participantRole> 
      </participant>
  </encounter>
</entry>`)

func templatesCat1R3_1_2168401113883102024382XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_2168401113883102024382Xml, nil
}

func templatesCat1R3_1_2168401113883102024382Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_2168401113883102024382XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.82.xml", size: 981, mode: os.FileMode(420), modTime: time.Unix(1493756780, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_216840111388310202439Xml = []byte(`<entry>
  {{if derefBool .EntrySection.Entry.NegationInd}}
  <supply classCode="SPLY" moodCode="RQO">
    <!-- Plan of Care Activity Supply -->
    <templateId root="2.16.840.1.113883.10.20.22.4.43" extension="2014-06-09"/>
    <!-- Device, Order -->
    <templateId root="2.16.840.1.113883.10.20.24.3.9" extension="2014-12-01"/>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.Entry.Time}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
          {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </supply>
  {{else}}
  <act classCode="ACT" moodCode="RQO" {{negationIndicator .EntrySection.Entry}}>
    <id root="1.3.6.1.4.1.115" extension="{{.EntrySection.Entry.ObjectIdentifier.ID}}"/>
    <code code="SPLY" codeSystem="2.16.840.1.113883.5.6"/>
    <text>{{.EntrySection.Entry.Description}}</text>
    <statusCode code="active"/>

    <effectiveTime xsi:type="IVL_TS">
      <low {{valueOrNullFlavor .EntrySection.Entry.StartTime}}/>
      <high {{valueOrNullFlavor .EntrySection.Entry.EndTime}}/>
    </effectiveTime>
    <author>
      <templateId root="2.16.840.1.113883.10.20.22.4.119"/>
      <time {{valueOrNullFlavor .EntrySection.Entry.Time}}/>
      <assignedAuthor>
        <id nullFlavor="NA" root="{{newRandom}}"/>
      </assignedAuthor>
    </author>
    <participant typeCode="DEV">
      <participantRole classCode="MANU">
        <playingDevice classCode="DEV">
        {{template "_code.xml" codeDisplayWithPreferredCode .EntrySection.Entry .EntrySection.Entry.Coded .MapDataCriteria "entryCode"}}
        </playingDevice>
      </participantRole>
    </participant>
    {{template "_reason.xml" .}}
  </act>
{{end}}
</entry>
`)

func templatesCat1R3_1_216840111388310202439XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_216840111388310202439Xml, nil
}

func templatesCat1R3_1_216840111388310202439Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1_216840111388310202439XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.9.xml", size: 2445, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_addressXml = []byte(`<addr use="{{ escape  .Use }}">
    {{range .Street}}
      <streetAddressLine>{{escape .}}</streetAddressLine>
    {{end}}
    <city>{{escape .City}}</city>
    <state>{{escape .State}}</state>
    <postalCode>{{escape .Zip}}</postalCode>
    <country>{{escape .Country}}</country>
</addr>
`)

func templatesCat1R3_1_addressXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_addressXml, nil
}

func templatesCat1R3_1_addressXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_addressXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_address.xml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_authorXml = []byte(`<!-- SHALL have 1..* author. MAY be device or person. -->
<author>
  <time value="{{.Time}}" />
  <assignedAuthor>
  {{range .Ids}}
    {{template "_id.xml" .}}
  {{end}}
  {{range .Addresses}}
    {{template "_address.xml" .}}
  {{end}}
  {{range .Telecoms}}
    {{template "_telecom.xml" .}}
  {{end}}

  {{if .Person.First}}
    <assignedPerson>
      <name>
        <given>{{escape .Person.First}}</given>
        <family>{{escape .Person.Last}}</family>
      </name>
    </assignedPerson>
  {{else if .Device.Model}}
    <assignedAuthoringDevice>
       <manufacturerModelName>{{escape .Device.Model}}</manufacturerModelName>
       <softwareName>{{escape .Device.Name}}</softwareName>
     </assignedAuthoringDevice>
  {{end}}

  {{template "_organization.xml" .Organization}}
  </assignedAuthor>
</author>
`)

func templatesCat1R3_1_authorXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_authorXml, nil
}

func templatesCat1R3_1_authorXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_authorXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_author.xml", size: 814, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_codeXml = []byte(`<{{- valueOrDefault .TagName "code" -}}
  {{- if hasPreferredCode .PreferredCode}} code='{{- .PreferredCode.Code}}' codeSystem='{{- oidForCodeSystem .PreferredCode.CodeSystem}}' {{.RenderExtraContent}}
  {{- else}}
    {{- $excludeNullFlavor := valueOrDefault .ExcludeNullFlavor false}}
    {{- if $excludeNullFlavor}}{{- else}} nullFlavor='UNK' xsi:type="CD"
    {{- end}}
  {{- end -}}
>
  {{- $attribute := valueOrDefault .Attribute "codes"}}
  {{- if codeDisplayAttributeIsCodes $attribute}}
    <originalText>{{- .Description}}</originalText>
  {{- end}}
  {{- if hasLaterality .Laterality}}
    <!-- QDM Attribute: Laterality -->
    <qualifier>
        <name code='182353008' codeSystem='2.16.840.1.113883.6.96' displayName='Side' />
        <value xsi:type='CD' code='{{- .Laterality.Code}}' 
            displayName='{{- .Laterality.Title}}' 
            sdtc:valueSet='{{- oidForCode .Laterality.CodedConcept (index .MapDataCriteria.FieldOids "LATERALITY")}}'
            codeSystem='{{- oidForCodeSystem .Laterality.CodeSystem}}'/>
    </qualifier>
  {{- end}}
</{{- valueOrDefault .TagName "code"}}>`)

func templatesCat1R3_1_codeXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_codeXml, nil
}

func templatesCat1R3_1_codeXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_codeXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_code.xml", size: 1111, mode: os.FileMode(420), modTime: time.Unix(1494434866, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_fulfillsXml = []byte(`{{range .References}}
    {{if eq .Type "fulfills"}}
        <sdtc:inFulfillmentOf1 typeCode="FLFS">
            <sdtc:templateId root="2.16.840.1.113883.10.20.24.3.126" />
            <sdtc:actReference classCode="ACT" moodCode="EVN">
                <sdtc:id root="1.3.6.1.4.1.115" extension="{{.ReferencedID}}"/>
            </sdtc:actReference>
        </sdtc:inFulfillmentOf1>
    {{end}}
{{end}}`)

func templatesCat1R3_1_fulfillsXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_fulfillsXml, nil
}

func templatesCat1R3_1_fulfillsXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_fulfillsXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_fulfills.xml", size: 401, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_idXml = []byte(`<id {{if .Root}}root="{{escape .Root}}"{{end}} extension="{{escape .Extension}}" />
`)

func templatesCat1R3_1_idXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_idXml, nil
}

func templatesCat1R3_1_idXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_idXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_id.xml", size: 84, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_measuresXml = []byte(`<component>
  <section>
    <!--
      *****************************************************************
      Measure Section
      *****************************************************************
    -->
    <!-- This is the templateId for Measure Section -->
    <templateId root="2.16.840.1.113883.10.20.24.2.2"/>
    <!-- This is the templateId for Measure Section QDM -->
    <templateId root="2.16.840.1.113883.10.20.24.2.3"/>
    <!-- This is the LOINC code for "Measure document". This stays the same for all measure section required by QRDA standard -->
    <code code="55186-1" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Measure Section</title>
    <text>
      <table border="1" width="100%">
        <thead>
          <tr>
            <th>eMeasure Title</th>
            <th>Version Neutral Identifier</th>
            <th>eMeasure Version Number</th>
            <th>Version Specific Identifier</th>
          </tr>
        </thead>
        <tbody>
          {{range .}}
          <tr>
            <td>{{escape .Name}}</td>
            <td>{{escape .HQMFSetID}}</td>
            <td>{{.HQMFVersionNumber}}</td>
            <td>{{escape .HQMFID}}</td>
            <td></td>
          </tr>
          {{end}}
        </tbody>
      </table>
    </text>
    <!-- 1..* Organizers, each containing a reference to an eMeasure -->
    {{range .}}
    <entry>
      <organizer classCode="CLUSTER" moodCode="EVN">
        <!-- This is the templateId for Measure Reference -->
        <templateId root="2.16.840.1.113883.10.20.24.3.98"/>
        <!-- This is the templateId for eMeasure Reference QDM -->
        <templateId root="2.16.840.1.113883.10.20.24.3.97"/>
        <id root="1.3.6.1.4.1.115" extension="{{escape .HQMFID}}"/>
        <statusCode code="completed"/>
        <!-- Containing isBranch external references -->
        <reference typeCode="REFR">
          <externalDocument classCode="DOC" moodCode="EVN">
            <!-- SHALL: This is the version specific identifier for eMeasure: QualityMeasureDocument/id it is a GUID-->
            <id root="2.16.840.1.113883.4.738" extension="{{escape .HQMFID}}"/>
            <!-- SHOULD This is the title of the eMeasure -->
            <text>{{escape .Name}}</text>
            <!-- SHOULD: setId is the eMeasure version neutral id  -->
            <setId root="{{escape .HQMFSetID}}"/>
            <!-- This is the sequential eMeasure Version number -->
            <versionNumber value="{{.HQMFVersionNumber}}"/>
          </externalDocument>
        </reference>
      </organizer>
    </entry>
    {{end}}
  </section>
</component>
`)

func templatesCat1R3_1_measuresXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_measuresXml, nil
}

func templatesCat1R3_1_measuresXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_measuresXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_measures.xml", size: 2610, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_medication_detailsXml = []byte(`{{if .EntrySection.Route}}
    {{$vset := oidForCode .EntrySection.Route (index .MapDataCriteria.FieldOids "ROUTE")}}
    <routeCode code="{{.EntrySection.Route.Code}}"
               codeSystem="{{oidForCodeSystem .EntrySection.Route.CodeSystem}}"
               {{if ne $vset ""}}
                   sdtc:valueSet="{{$vset}}"
               {{end}}
               />
{{end}}
{{if (.EntrySection.Entry.NegationInd) and (derefBool .EntrySection.Entry.NegationInd)}}
	<doseQuantity nullFlavor="NA"/>
{{else if .EntrySection.HasSetDose}}
    <doseQuantity {{.EntrySection.DoseQuantity}}/>
{{end}}`)

func templatesCat1R3_1_medication_detailsXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_medication_detailsXml, nil
}

func templatesCat1R3_1_medication_detailsXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_medication_detailsXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_medication_details.xml", size: 594, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_medication_dispenseXml = []byte(`{{range .EntrySection.FulfillmentHistory}}
    <entryRelationship typeCode="REFR">
    <supply classCode="SPLY" moodCode="EVN">
        <!-- Medication Dispense template -->
        <templateId root="2.16.840.1.113883.10.20.22.4.18" extension="2014-06-09"/>
        <id root="1.3.6.1.4.1.115" extension="{{newRandom}}"/>
        <statusCode code="completed"/>
        <effectiveTime {{valueOrNullFlavor .DispenseDate}}/>
        <repeatNumber value="1"/>
        <quantity {{$.EntrySection.FulfillmentQuantity .}}/>
        <product>
        <manufacturedProduct classCode="MANU">
            <!-- Medication Information (consolidation) template -->
            <templateId root="2.16.840.1.113883.10.20.22.4.23" extension="2014-06-09"/>
            <id root="{{newRandom}}"/>
            <manufacturedMaterial>
            {{template "_code.xml" codeDisplayWithPreferredCode $.EntrySection.Entry $.EntrySection.Entry.Coded $.MapDataCriteria "medicationDispense"}}
            </manufacturedMaterial>
        </manufacturedProduct>
        </product>
    </supply>
    </entryRelationship>
{{end}}`)

func templatesCat1R3_1_medication_dispenseXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_medication_dispenseXml, nil
}

func templatesCat1R3_1_medication_dispenseXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_medication_dispenseXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_medication_dispense.xml", size: 1097, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_ordinalityXml = []byte(`{{if .EntrySection.HasSetOrdinality}}
    {{$valueSetOid := oidForCode .EntrySection.Ordinality.CodedConcept (index .MapDataCriteria.FieldOids "ORDINAL")}}
    <priorityCode  code="{{.EntrySection.Ordinality.Code}}" 
                codeSystem="{{oidForCodeSystem .EntrySection.Ordinality.CodeSystem}}"
                {{if $valueSetOid}} sdtc:valueSet="{{$valueSetOid}}" {{end}}
                />
{{end}}`)

func templatesCat1R3_1_ordinalityXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_ordinalityXml, nil
}

func templatesCat1R3_1_ordinalityXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_ordinalityXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_ordinality.xml", size: 406, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_organizationXml = []byte(`<{{escape .TagName}}>
  <!-- Represents unique registry organization TIN -->
  {{range .Ids}}
    {{template "_id.xml" .}}
  {{end}}
  <!-- Contains name - specific registry not required-->
  <name>{{escape .Name}}</name>
  {{range .Telecoms}}
    {{template "_telecom.xml" .}}
  {{end}}
  {{range .Addresses}}
    {{template "_address.xml" .}}
  {{end}}
</{{escape .TagName}}>
`)

func templatesCat1R3_1_organizationXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_organizationXml, nil
}

func templatesCat1R3_1_organizationXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_organizationXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_organization.xml", size: 378, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_patient_dataXml = []byte(`<component>
<section>
    <!-- This is the templateId for Patient Data section -->
    <templateId root="2.16.840.1.113883.10.20.17.2.4"/>
    <!-- This is the templateId for Patient Data QDM section -->
    <templateId root="2.16.840.1.113883.10.20.24.2.1" extension="2016-02-01" />

    <code code="55188-7" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Patient Data</title>
    <text>

    </text>
    {{range .EntryInfos}}
      {{executeTemplateForEntry .}}
    {{end}}
</section>
</component>
`)

func templatesCat1R3_1_patient_dataXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_patient_dataXml, nil
}

func templatesCat1R3_1_patient_dataXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_patient_dataXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_patient_data.xml", size: 501, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_providersXml = []byte(`<documentationOf typeCode="DOC">
  <serviceEvent classCode="PCPR"> <!-- care provision -->
  {{if .ProviderPerformances}}
    {{range .ProviderPerformances }}
      <effectiveTime>
        <low {{valueOrNullFlavor .StartDate}}/>
        <high {{valueOrNullFlavor .EndDate}}/>
      </effectiveTime>
      <!-- You can include multiple performers, each with an NPI, TIN, CCN. -->
      <performer typeCode="PRF">
        <time>
          <low {{valueOrNullFlavor .StartDate}}/>
          <high {{valueOrNullFlavor .EndDate}}/>
        </time>
        <assignedEntity>
          {{range .Provider.CDAIdentifiers}}
            {{if ne .Root "2.16.840.1.113883.4.2"}}
              <id root="{{ escape .Root}}" extension="{{ escape .Extension}}" />
            {{end}}
          {{end}}
          <representedOrganization>
            {{range .Provider.CDAIdentifiers}}
              {{if eq .Root "2.16.840.1.113883.4.2"}}
                <id root="2.16.840.1.113883.4.2" extension="{{ escape .Extension}}" />
              {{end}}
            {{end}}
          </representedOrganization>
        </assignedEntity>
      </performer>
    {{end}}
  {{else}}
  <!-- No provider data found in the patient record
       putting in a fake provider -->
  <effectiveTime>
    <low value="20020716"/>
    <high value="{{timeToFormat timeNow "20060102"}}"/>
  </effectiveTime>
  <!-- You can include multiple performers, each with an NPI, TIN, CCN. -->
  <performer typeCode="PRF">
    <time>
      <low value="20020716"/>
      <high value="{{timeToFormat timeNow "20060102"}}"/>
    </time>
    <assignedEntity>
      <!-- This is the provider NPI -->
      <id root="2.16.840.1.113883.4.6" extension="1234567893" />
      <representedOrganization>
        <!-- This is the organization TIN -->
        <id root="2.16.840.1.113883.4.2" extension="123456789" />
        <!-- This is the organization CCN -->
        <id root="2.16.840.1.113883.4.336" extension="54321" />
      </representedOrganization>
    </assignedEntity>
  </performer>
  {{end}}
  </serviceEvent>
</documentationOf>
`)

func templatesCat1R3_1_providersXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_providersXml, nil
}

func templatesCat1R3_1_providersXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_providersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_providers.xml", size: 2078, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_reasonXml = []byte(`{{if .EntrySection.Entry.HasReason}}
  {{$reason := .EntrySection.Entry.NegationReasonOrReason}}
  {{$valueSetOid := oidForCode $reason (index .MapDataCriteria.FieldOids "REASON")}}
  {{if $valueSetOid}}
    <entryRelationship typeCode="RSON">
      <observation classCode="OBS" moodCode="EVN">
        <templateId root="2.16.840.1.113883.10.20.24.3.88" extension="2014-12-01"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInterface $reason.Code .EntrySection.StartTime}}"/>
          <code code="77301-0" codeSystem="2.16.840.1.113883.6.1" displayName="reason" codeSystemName="LOINC"/>
        <statusCode code="completed"/>
          <effectiveTime>
            <low {{valueOrNullFlavor .EntrySection.StartTime}}/>
          </effectiveTime>
        <value xsi:type="CD" code="{{$reason.Code}}" codeSystem="{{oidForCodeSystem $reason.CodeSystem}}" sdtc:valueSet="{{$valueSetOid}}"/>
      </observation>
    </entryRelationship>
  {{end}}
{{end}}
`)

func templatesCat1R3_1_reasonXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_reasonXml, nil
}

func templatesCat1R3_1_reasonXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_reasonXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_reason.xml", size: 966, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_record_targetXml = []byte(`<recordTarget>
  <patientRole>
    {{if .MedicalRecordNumber}}
      {{if .MedicalRecordAssigner}}
        <id extension="{{escape .MedicalRecordNumber}}" root="{{escape .MedicalRecordAssigner}}" />
      {{else}}
        <id extension="12345" root="PlaceholderOrganization" />
      {{end}}
    {{else}}
      <id extension="12345" root="PlaceholderOrganization" />
    {{end}}
    <addr use="HP">
      {{if .Addresses}}
        {{range .Addresses}}
          {{range .Street}}
            <streetAddressLine>{{escape .}}</streetAddressLine>
          {{end}}
          <city>{{escape .City}}</city>
          <state>{{escape .State}}</state>
          <postalCode>{{escape .Zip}}</postalCode>
          <country>{{escape .Country }}</country>
        {{end}}
      {{else}}
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      {{end}}
    </addr>
    <telecom use="WP" value="tel:+1-781-271-3000"/>
    <patient>
      <name>
        <given>{{escape .First}}</given>
        <family>{{escape .Last}}</family>
      </name>
      <administrativeGenderCode code="{{escape .Gender}}" codeSystem="2.16.840.1.113883.5.1" codeSystemName="HL7 AdministrativeGender"/>
      <birthTime value="{{timeToFormat .BirthDate "20060102"}}"/>
      {{if .Race}}
        <raceCode code="{{escape .Race.Code}}" {{if .Race.DisplayName }}displayName="{{escape .Race.DisplayName}}"{{end}} codeSystemName="CDC Race and Ethnicity" codeSystem="2.16.840.1.113883.6.238"/>
      {{end}}
      {{if .Ethnicity }}
        <ethnicGroupCode code="{{escape .Ethnicity.Code}}" {{ if .Ethnicity.DisplayName }}displayName="{{escape .Ethnicity.DisplayName }}"{{end}} codeSystemName="CDC Race and Ethnicity" codeSystem="2.16.840.1.113883.6.238"/>
      {{end}}
      {{if .Languages}}
        {{range .Languages}}
          <languageCommunication>
            <templateId root="2.16.840.1.113883.3.88.11.83.2" assigningAuthorityName="HITSP/C83"/>
            <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.1" assigningAuthorityName="IHE/PCC"/>
            <languageCode code="{{index .Codes "IETF" 0 }}"/>
          </languageCommunication>
        {{end}}
      {{else}}
        <languageCommunication>
          <templateId root="2.16.840.1.113883.3.88.11.83.2" assigningAuthorityName="HITSP/C83"/>
          <templateId root="1.3.6.1.4.1.19376.1.5.3.1.2.1" assigningAuthorityName="IHE/PCC"/>
          <languageCode code="en"/>
        </languageCommunication>
      {{end}}
    </patient>
  </patientRole>
</recordTarget>
`)

func templatesCat1R3_1_record_targetXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_record_targetXml, nil
}

func templatesCat1R3_1_record_targetXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_record_targetXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_record_target.xml", size: 2634, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_reporting_parametersXml = []byte(`<component>
  <section>
    <!-- This is the templateId for Reporting Parameters section -->
    <templateId root="2.16.840.1.113883.10.20.17.2.1"/>
    <code code="55187-9" codeSystem="2.16.840.1.113883.6.1"/>
    <title>Reporting Parameters</title>
    <text>
      <list>
        <item>Reporting period: {{timeToFormat .StartDate "Mon, 02 Jan 2006 15:04:05 -0700"}} - {{timeToFormat .EndDate "Mon, 02 Jan 2006 15:04:05 -0700"}}</item>
      </list>
    </text>
    <entry typeCode="DRIV">
      <act classCode="ACT" moodCode="EVN">
        <!-- This is the templateId for Reporting Parameteres Act -->
        <templateId root="2.16.840.1.113883.10.20.17.3.8"/>
        <id root="1.3.6.1.4.1.115" extension="{{identifierForInt .StartDate .EndDate}}" />
        <code code="252116004" codeSystem="2.16.840.1.113883.6.96" displayName="Observation Parameters"/>
        <effectiveTime>
          <low value="{{timeToFormat .StartDate "20060102150405"}}"/>
          <high value="{{timeToFormat .EndDate "20060102150405"}}"/>
        </effectiveTime>
      </act>
    </entry>
  </section>
</component>
`)

func templatesCat1R3_1_reporting_parametersXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_reporting_parametersXml, nil
}

func templatesCat1R3_1_reporting_parametersXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_reporting_parametersXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_reporting_parameters.xml", size: 1102, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_result_valueXml = []byte(`{{if not .ResultValueEntry.IsValuesEmpty}}
    {{range .ResultValueEntry.Values}}
        {{if .IsCodesPresent}}
            {{template "_code.xml" codeDisplayWithPreferredCodeForResultValue $.ResultValueEntry .Coded $.ResultValueMdc "resultValue"}}
        {{else if eq .GetScalarType "num"}}
            <value xsi:type="PQ" value="{{.Scalar}}" {{if ne .Units ""}}unit="{{.Units}}"{{else}}unit="1"{{end}}/>
        {{else if eq .GetScalarType "bool"}}
            <value xsi:type="BL" value="{{.Scalar}}" />
        {{else}}
            <value xsi:type="ST" >{{.Scalar}}</value> 
        {{end}}
    {{end}}
{{else}}
    <value xsi:type="CD" nullFlavor="UNK"/>
{{end}}
`)

func templatesCat1R3_1_result_valueXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_result_valueXml, nil
}

func templatesCat1R3_1_result_valueXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_result_valueXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_result_value.xml", size: 671, mode: os.FileMode(420), modTime: time.Unix(1494432834, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1_telecomXml = []byte(`<telecom use="{{escape .Use}}" value="tel:+{{escape .Value}}" />
`)

func templatesCat1R3_1_telecomXmlBytes() ([]byte, error) {
	return _templatesCat1R3_1_telecomXml, nil
}

func templatesCat1R3_1_telecomXml() (*asset, error) {
	bytes, err := templatesCat1R3_1_telecomXmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/_telecom.xml", size: 65, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesCat1R3_1Cat1Xml = []byte(`<?xml version="1.0" encoding="utf-8"?>
<ClinicalDocument xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns="urn:hl7-org:v3"
 xmlns:voc="urn:hl7-org:v3/voc"
 xmlns:sdtc="urn:hl7-org:sdtc">
  <!-- QRDA Header -->
  <realmCode code="US"/>
  <typeId root="2.16.840.1.113883.1.3" extension="POCD_HD000040"/>
  <!-- US Realm Header Template Id -->
  <templateId root="2.16.840.1.113883.10.20.22.1.1" extension="2014-06-09" />
  <!-- QRDA templateId -->
  <templateId root="2.16.840.1.113883.10.20.24.1.1" extension="2014-12-01" />
  <!-- QDM-based QRDA templateId -->
  <templateId root="2.16.840.1.113883.10.20.24.1.2" />
  <!-- This is the globally unique identifier for this QRDA document -->
  <id root="{{ newRandom }}"/>
  <!-- QRDA document type code -->
  <code code="55182-0" codeSystem="2.16.840.1.113883.6.1" codeSystemName="LOINC" displayName="Quality Measure Report"/>
  <title>QRDA Incidence Report</title>
  <!-- This is the document creation time -->
  <effectiveTime value="{{ timeToFormat timeNow "20060102150405-700" }}"/>
  <confidentialityCode code="N" codeSystem="2.16.840.1.113883.5.25"/>
  <languageCode code="en"/>
  <!-- reported patient -->
    {{template "_record_target.xml" .Record}}

    {{if .Header}}
    {{range .Header.Authors}}
      {{template "_author.xml" .}}
    {{end}}
    <!-- SHALL have 1..* author. MAY be device or person.
      The author of the CDA document in this example is a device at a data submission vendor/registry. -->

    <!-- The custodian of the CDA document is the same as the legal authenticator in this
    example and represents the reporting organization. -->
    <!-- SHALL -->
    <custodian>
      <assignedCustodian>
        {{template "_organization.xml" .Header.Custodian.Organization}}
      </assignedCustodian>
    </custodian>

    <!-- The legal authenticator of the CDA document is a single person who is at the
      same organization as the custodian in this example. This element must be present. -->
    <!-- SHALL -->
    <legalAuthenticator>
      <!-- SHALL -->
      <time value="{{timeToFormat .Header.Authenticator.Time "20060102150405-700"}}"/>
      <!-- SHALL -->
      <signatureCode code="S"/>
      <assignedEntity>
        <!-- SHALL ID -->
        {{range .Header.Authenticator.Ids}}
          {{template "_id.xml" .}}
        {{end}}
        {{range .Header.Authenticator.Addresses}}
          {{template "_address.xml" .}}
        {{end}}
        {{range .Header.Authenticator.Telecoms}}
          {{template "_telecom.xml" .}}
        {{end}}
        <assignedPerson>
          <name>
             <given>{{escape .Header.Authenticator.Person.First}}</given>
             <family>{{escape .Header.Authenticator.Person.Last}}</family>
          </name>
       </assignedPerson>
        {{template "_organization.xml" .Header.Authenticator.Organization}}
      </assignedEntity>
    </legalAuthenticator>

  {{ else }}
    <author>
    <time value="{{ timeNow }}"/>
    <assignedAuthor>
      <!-- id extension="Cypress" root="2.16.840.1.113883.19.5"/ -->
      <!-- NPI -->
      <id extension="FakeNPI" root="2.16.840.1.113883.4.6"/>
      <addr>
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      </addr>
      <telecom use="WP" value="tel:(781)271-3000"/>
      <assignedAuthoringDevice>
        <manufacturerModelName>Cypress</manufacturerModelName >
        <softwareName>Cypress</softwareName >
      </assignedAuthoringDevice >
    </assignedAuthor>
  </author>
  <custodian>
    <assignedCustodian>
      <representedCustodianOrganization>
        <id root="2.16.840.1.113883.19.5"/>
        <name>Cypress Test Deck</name>
        <telecom use="WP" value="tel:(781)271-3000"/>
        <addr>
          <streetAddressLine>202 Burlington Rd.</streetAddressLine>
          <city>Bedford</city>
          <state>MA</state>
          <postalCode>01730</postalCode>
          <country>US</country>
        </addr>
      </representedCustodianOrganization>
    </assignedCustodian>
  </custodian>
  <legalAuthenticator>
    <time value="{{ timeNow }}"/>
    <signatureCode code="S"/>
    <assignedEntity>
      <id root="bc01a5d1-3a34-4286-82cc-43eb04c972a7"/>
      <addr>
        <streetAddressLine>202 Burlington Rd.</streetAddressLine>
        <city>Bedford</city>
        <state>MA</state>
        <postalCode>01730</postalCode>
        <country>US</country>
      </addr>
      <telecom use="WP" value="tel:(781)271-3000"/>
      <assignedPerson>
        <name>
           <given>Henry</given>
           <family>Seven</family>
        </name>
     </assignedPerson>
      <representedOrganization>
        <id root="2.16.840.1.113883.19.5"/>
        <name>Cypress</name>
      </representedOrganization>
    </assignedEntity>
  </legalAuthenticator>
  {{end}}

  {{template "_providers.xml" .Record}}
  <component>
    <structuredBody>
      {{template "_measures.xml" .Measures}}
      {{template "_reporting_parameters.xml" .}}
      {{template "_patient_data.xml" .}}
    </structuredBody>
  </component>

</ClinicalDocument>
`)

func templatesCat1R3_1Cat1XmlBytes() ([]byte, error) {
	return _templatesCat1R3_1Cat1Xml, nil
}

func templatesCat1R3_1Cat1Xml() (*asset, error) {
	bytes, err := templatesCat1R3_1Cat1XmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/cat1/r3_1/cat1.xml", size: 5185, mode: os.FileMode(420), modTime: time.Unix(1492793736, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmf_template_oid_mapJson = []byte(`{
  "2.16.840.1.113883.3.560.1.1001":{
      "definition":"patient_characteristic",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.25":{
      "definition":"patient_characteristic_birthdate",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.400":{
      "definition":"patient_characteristic_birthdate",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.401":{
      "definition":"patient_characteristic_clinical_trial_participant",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.402":{
      "definition":"patient_characteristic_gender",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.403":{
      "definition":"patient_characteristic_ethnicity",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.404":{
      "definition":"patient_characteristic_expired",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.405":{
      "definition":"patient_characteristic_payer",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.406":{
      "definition":"patient_characteristic_race",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.4":{
      "definition":"encounter",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.81":{
      "definition":"encounter",
      "status":"active",
      "negation":false},
  "2.16.840.1.113883.3.560.1.79":{
      "definition":"encounter",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.83":{
      "definition":"encounter",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.84":{
      "definition":"encounter",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.179":{
      "definition":"encounter",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.182":{
      "definition":"encounter",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.181":{
      "definition":"encounter",
      "status":"active",
      "negation":true},
  "2.16.840.1.113883.3.560.1.183":{
      "definition":"encounter",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.184":{
      "definition":"encounter",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.104":{
      "definition":"encounter",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.6":{
      "definition":"procedure",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.62":{
      "definition":"procedure",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.63":{
      "definition":"procedure_result",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.60":{
      "definition":"procedure_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.61":{
      "definition":"procedure_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.92":{
      "definition":"procedure",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.162":{
      "definition":"procedure",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.163":{
      "definition":"procedure_result",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.160":{
      "definition":"procedure_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.161":{
      "definition":"procedure_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.106":{
      "definition":"procedure",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.192":{
      "definition":"procedure",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.2":{
      "definition":"diagnosis",
      "status":"active",
      "negation":false},
  "2.16.840.1.113883.3.560.1.24":{
      "definition":"diagnosis",
      "status":"resolved",
      "negation":false},
  "2.16.840.1.113883.3.560.1.32":{
      "definition":"diagnosis",
      "status":"family_history",
      "negation":false},
  "2.16.840.1.113883.3.560.1.23":{
      "definition":"diagnosis",
      "status":"inactive",
      "negation":false},
  "2.16.840.1.113883.3.560.1.33":{
      "definition":"diagnosis_risk_of",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.124":{
      "definition":"diagnosis",
      "status":"resolved",
      "negation":true},
  "2.16.840.1.113883.3.560.1.132":{
      "definition":"diagnosis",
      "status":"family_history",
      "negation":true},
  "2.16.840.1.113883.3.560.1.123":{
      "definition":"diagnosis",
      "status":"inactive",
      "negation":true},
  "2.16.840.1.113883.3.560.1.102":{
      "definition":"diagnosis",
      "status":"active",
      "negation":true},
  "2.16.840.1.113883.3.560.1.133":{
      "definition":"diagnosis_risk_of",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.3":{
      "definition":"diagnostic_study",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.11":{
      "definition":"diagnostic_study_result",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.38":{
      "definition":"diagnostic_study_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.39":{
      "definition":"diagnostic_study_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.40":{
      "definition":"diagnostic_study",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.103":{
      "definition":"diagnostic_study",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.138":{
      "definition":"diagnostic_study_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.139":{
      "definition":"diagnostic_study_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.140":{
      "definition":"diagnostic_study",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.111":{
      "definition":"diagnostic_study_result",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.8":{
      "definition":"medication",
      "status":"dispensed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.17":{
      "definition":"medication",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.199":{
      "definition":"medication",
      "status":"discharge",
      "negation":false},
  "2.16.840.1.113883.3.560.1.200":{
      "definition":"medication",
      "status":"discharge",
      "negation":true},
  "2.16.840.1.113883.3.560.1.13":{
      "definition":"medication",
      "status":"active",
      "negation":false},
  "2.16.840.1.113883.3.560.1.14":{
      "definition":"medication",
      "status":"administered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.7":{
      "definition":"medication_adverse_effects",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.1":{
      "definition":"medication_allergy",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.15":{
      "definition":"medication_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.77":{
      "definition":"medication",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.78":{
      "definition":"medication",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.108":{
      "definition":"medication",
      "status":"dispensed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.113":{
      "definition":"medication",
      "status":"active",
      "negation":true},
  "2.16.840.1.113883.3.560.1.107":{
      "definition":"medication_adverse_effects",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.101":{
      "definition":"medication_allergy",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.115":{
      "definition":"medication_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.114":{
      "definition":"medication",
      "status":"administered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.18":{
      "definition":"physical_exam",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.56":{
      "definition":"physical_exam",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.57":{
      "definition":"physical_exam",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.91":{
      "definition":"physical_exam",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.156":{
      "definition":"physical_exam",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.157":{
      "definition":"physical_exam",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.191":{
      "definition":"physical_exam",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.118":{
      "definition":"physical_exam",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.12":{
      "definition":"laboratory_test",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.5":{
      "definition":"laboratory_test",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.48":{
      "definition":"laboratory_test_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.49":{
      "definition":"laboratory_test_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.50":{
      "definition":"laboratory_test",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.90":{
      "definition":"laboratory_test",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.112":{
      "definition":"laboratory_test",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.148":{
      "definition":"laboratory_test_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.149":{
      "definition":"laboratory_test_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.150":{
      "definition":"laboratory_test",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.190":{
      "definition":"laboratory_test",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.105":{
      "definition":"laboratory_test",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.9":{
      "definition":"care_goal",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.109":{
      "definition":"care_goal",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.30":{
      "definition":"communication_from_patient_to_provider",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.31":{
      "definition":"communication_from_provider_to_patient",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.29":{
      "definition":"communication_from_provider_to_provider",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.130":{
      "definition":"communication_from_patient_to_provider",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.131":{
      "definition":"communication_from_provider_to_patient",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.129":{
      "definition":"communication_from_provider_to_provider",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.10":{
      "definition":"device",
      "status":"applied",
      "negation":false},
  "2.16.840.1.113883.3.560.1.34":{
      "definition":"device_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.35":{
      "definition":"device_allergy",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.36":{
      "definition":"device_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.37":{
      "definition":"device",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.80":{
      "definition":"device",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.134":{
      "definition":"device_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.135":{
      "definition":"device_allergy",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.136":{
      "definition":"device_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.137":{
      "definition":"device",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.180":{
      "definition":"device",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.110":{
      "definition":"device",
      "status":"applied",
      "negation":true},
  "2.16.840.1.113883.3.560.1.64":{
      "definition":"substance",
      "status":"administered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.68":{
      "definition":"substance",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.65":{
      "definition":"substance_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.67":{
      "definition":"substance_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.66":{
      "definition":"substance_allergy",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.93":{
      "definition":"substance",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.165":{
      "definition":"substance_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.167":{
      "definition":"substance_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.164":{
      "definition":"substance",
      "status":"administered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.168":{
      "definition":"substance",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.193":{
      "definition":"substance",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.166":{
      "definition":"substance_allergy",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.43":{
      "definition":"intervention_adverse_event",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.44":{
      "definition":"intervention_intolerance",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.45":{
      "definition":"intervention",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.46":{
      "definition":"intervention",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.47":{
      "definition":"intervention_result",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.89":{
      "definition":"intervention",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.143":{
      "definition":"intervention_adverse_event",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.144":{
      "definition":"intervention_intolerance",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.145":{
      "definition":"intervention",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.146":{
      "definition":"intervention",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.147":{
      "definition":"intervention_result",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.189":{
      "definition":"intervention",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.69":{
      "definition":"symptom",
      "status":"active",
      "negation":false},
  "2.16.840.1.113883.3.560.1.70":{
      "definition":"symptom",
      "status":"assessed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.97":{
      "definition":"symptom",
      "status":"inactive",
      "negation":false},
  "2.16.840.1.113883.3.560.1.98":{
      "definition":"symptom",
      "status":"resolved",
      "negation":false},
  "2.16.840.1.113883.3.560.1.169":{
      "definition":"symptom",
      "status":"active",
      "negation":true},
  "2.16.840.1.113883.3.560.1.170":{
      "definition":"symptom",
      "status":"assessed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.197":{
      "definition":"symptom",
      "status":"inactive",
      "negation":true},
  "2.16.840.1.113883.3.560.1.198":{
      "definition":"symptom",
      "status":"resolved",
      "negation":true},
  "2.16.840.1.113883.3.560.1.41":{
      "definition":"functional_status",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.85":{
      "definition":"functional_status",
      "status":"performed",
      "negation":false},
  "2.16.840.1.113883.3.560.1.86":{
      "definition":"functional_status",
      "status":"ordered",
      "negation":false},
  "2.16.840.1.113883.3.560.1.87":{
      "definition":"functional_status",
      "status":"recommended",
      "negation":false},
  "2.16.840.1.113883.3.560.1.88":{
      "definition":"functional_status_result",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.185":{
      "definition":"functional_status",
      "status":"performed",
      "negation":true},
  "2.16.840.1.113883.3.560.1.186":{
      "definition":"functional_status",
      "status":"ordered",
      "negation":true},
  "2.16.840.1.113883.3.560.1.187":{
      "definition":"functional_status",
      "status":"recommended",
      "negation":true},
  "2.16.840.1.113883.3.560.1.188":{
      "definition":"functional_status_result",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.141":{
      "definition":"functional_status",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.21":{
      "definition":"risk_category_assessment",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.121":{
      "definition":"risk_category_assessment",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.28":{
      "definition":"provider_care_experience",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.128":{
      "definition":"provider_care_experience",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.96":{
      "definition":"patient_care_experience",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.196":{
      "definition":"patient_care_experience",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.59":{
      "definition":"preference_provider",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.58":{
      "definition":"preference_patient",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.94":{
      "definition":"system_characteristic",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.194":{
      "definition":"system_characteristic",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.95":{
      "definition":"provider_characteristic",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.195":{
      "definition":"provider_characteristic",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.71":{
      "definition":"transfer_from",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.72":{
      "definition":"transfer_to",
      "status":"",
      "negation":false},
  "2.16.840.1.113883.3.560.1.171":{
      "definition":"transfer_from",
      "status":"",
      "negation":true},
  "2.16.840.1.113883.3.560.1.172":{
      "definition":"transfer_to",
      "status":"",
      "negation":true}
}
`)

func hqmf_template_oid_mapJsonBytes() ([]byte, error) {
	return _hqmf_template_oid_mapJson, nil
}

func hqmf_template_oid_mapJson() (*asset, error) {
	bytes, err := hqmf_template_oid_mapJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmf_template_oid_map.json", size: 20534, mode: os.FileMode(420), modTime: time.Unix(1494432774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmf_qrda_oidsJson = []byte(`[
  {
    "hqmf_name": "Care Goal",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.9",
    "qrda_name": "Care Goal",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.1",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": []
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Patient to Provider",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.30",
    "qrda_name": "Communication from Patient to Provider",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.2",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Provider to Patient",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.31",
    "qrda_name": "Communication from Provider to Patient",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.3",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Provider to Provider",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.29",
    "qrda_name": "Communication from Provider to Provider",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.4",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Device, Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.34",
    "qrda_name": "Device Adverse Event",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.5"
  },
  {
    "hqmf_name": "Device, Allergy",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.35",
    "qrda_name": "Device Allergy",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.6"
  },
  {
    "hqmf_name": "Device, Applied",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.10",
    "qrda_name": "Device Applied",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.7",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Device, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.36",
    "qrda_name": "Device Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.8"
  },
  {
    "hqmf_name": "Device, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.37",
    "qrda_name": "Device Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.9",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Device, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.80",
    "qrda_name": "Device Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.10"
  },
  {
    "hqmf_name": "Diagnosis, Active",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.2",
    "qrda_name": "Diagnosis Active",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.11",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnosis, Family History",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.32",
    "qrda_name": "Diagnosis Family History",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.12",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnosis, Inactive",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.23",
    "qrda_name": "Diagnosis Inactive",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.13",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnosis, Resolved",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.24",
    "qrda_name": "Diagnosis Resolved",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.14",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.38",
    "qrda_name": "Diagnostic Study Adverse Event",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.15"
  },
  {
    "hqmf_name": "Diagnostic Study, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.39",
    "qrda_name": "Diagnostic Study Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.16"
  },
  {
    "hqmf_name": "Diagnostic Study, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.40",
    "qrda_name": "Diagnostic Study Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.17",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.140",
    "qrda_name": "Diagnostic Study Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.17",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.3",
    "qrda_name": "Diagnostic Study Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.18",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study, not Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.103",
    "qrda_name": "Diagnostic Study Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.18",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.40",
    "qrda_name": "Diagnostic Study Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.19",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Diagnostic Study, Result",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.11",
    "qrda_name": "Diagnostic Study Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.20"
  },
  {
    "hqmf_name": "Discharge Medication (Health Record Field Flow Attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.199",
    "qrda_name": "Discharge Medication - Active Medication",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.105",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Encounter, Active",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.81",
    "qrda_name": "Encounter Active",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.21"
  },
  {
    "hqmf_name": "Encounter, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.83",
    "qrda_name": "Encounter Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.22",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT", "HCPCS", "CDT"]
      }
    ]
  },
  {
    "hqmf_name": "Encounter, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.79",
    "qrda_name": "Encounter Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.23",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      },
      {
        "code_type": "transferFrom",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      },
      {
        "code_type": "transferTo",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Encounter, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.84",
    "qrda_name": "Encounter Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.24"
  },
  {
    "hqmf_name": "Facility Location (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1034",
    "qrda_name": "Facility Location",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.100"
  },
  {
    "hqmf_name": "Functional Status, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.86",
    "qrda_name": "Functional Status Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.25"
  },
  {
    "hqmf_name": "Functional Status, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.85",
    "qrda_name": "Functional Status Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.26",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "", 
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Functional Status, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.87",
    "qrda_name": "Functional Status Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.27"
  },
  {
    "hqmf_name": "Functional Status, Result",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.88",
    "qrda_name": "Functional Status Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.28"
  },
  {
    "hqmf_name": "Incision Datetime (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1007",
    "qrda_name": "Incision Datetime",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.89"
  },
  {
    "hqmf_name": "Intervention, Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.43",
    "qrda_name": "Intervention Adverse Event",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.29"
  },
  {
    "hqmf_name": "Intervention, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.44",
    "qrda_name": "Intervention Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.30"
  },
  {
    "hqmf_name": "Intervention, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.45",
    "qrda_name": "Intervention Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.31",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "HCPCS"]
      }
    ]
  },
  {
    "hqmf_name": "Intervention, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.145",
    "qrda_name": "Intervention Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.31",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "HCPCS"]
      }
    ]
  },
  {
    "hqmf_name": "Intervention, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.46",
    "qrda_name": "Intervention Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.32",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Intervention, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.89",
    "qrda_name": "Intervention Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.33"
  },
  {
    "hqmf_name": "Intervention, Result",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.47",
    "qrda_name": "Intervention Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.34"
  },
  {
    "hqmf_name": "Laboratory Test, Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.48",
    "qrda_name": "Laboratory Test Adverse Event",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.35"
  },
  {
    "hqmf_name": "Laboratory Test, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.49",
    "qrda_name": "Laboratory Test Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.36"
  },
  {
    "hqmf_name": "Laboratory Test, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.50",
    "qrda_name": "Laboratory Test Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.37",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Laboratory Test, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.150",
    "qrda_name": "Laboratory Test Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.37",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Laboratory Test, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.5",
    "qrda_name": "Laboratory Test Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.38",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM"]
      }
    ]
  },
  {
    "hqmf_name": "Laboratory Test, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.90",
    "qrda_name": "Laboratory Test Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.39"
  },
  {
    "hqmf_name": "Laboratory Test, Result",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.12",
    "qrda_name": "Laboratory Test Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.40"
  },
  {
    "hqmf_name": "Medication, Active",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.13",
    "qrda_name": "Medication Active",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.41",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "RxNorm"]
      },
      {
        "code_type": "medicationDispense",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.14",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "CVX", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Adverse Effects",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.7",
    "qrda_name": "Medication Adverse Effect",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.43",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Allergy",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1",
    "qrda_name": "Medication Allergy",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.44",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT", "CVX"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Dispensed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.8",
    "qrda_name": "Medication Dispensed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.45",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.15",
    "qrda_name": "Medication Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.46",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT", "CVX"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.17",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Care Experience",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.96",
    "qrda_name": "Patient Care Experience",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.48"
  },
  {
    "hqmf_name": "Patient CharacteristicGestational Age",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1001",
    "qrda_name": "Patient Characteristic Gestational Age",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.101"
  },
  {
    "hqmf_name": "Patient Characteristic Clinical Trial Participant",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.401",
    "qrda_name": "Patient Characteristic Clinical Trial Participant",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.51",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "", 
        "preferred_code_sets": ["SNOMED-CT", "LOINC", "ICD-9-CM", "ICD-10-CM"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Characteristic Expired",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.404",
    "qrda_name": "Patient Characteristic Expired",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.54",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "", 
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Characteristic Payer",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.405",
    "qrda_name": "Patient Characteristic Payer",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.55",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\" sdtc:valueSet=\"2.16.840.1.114222.4.11.3591\"", 
        "preferred_code_sets": ["SOP","Source of Payment Typology"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Characteristic, ECOG Performance Status Poor",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1001",
    "qrda_name": "Patient Characteristic Observation Assertion",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.103",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"", 
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Charactersitic, Estimated Date of Conception",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1001",
    "qrda_name": "Patient Characteristic Estimated Date of Conception",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.102"
  },
  {
    "hqmf_name": "Patient Charactersitic, Tobacco user and Non-User",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1001",
    "qrda_name": "Tobacco Use",
    "qrda_oid": "2.16.840.1.113883.10.20.22.4.85",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"", 
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Patient Preference (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1013",
    "qrda_name": "Patient Preference",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.83"
  },
  {
    "hqmf_name": "Physical Exam, Finding",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.18",
    "qrda_name": "Physical Exam Finding",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.57"
  },
  {
    "hqmf_name": "Physical Exam, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.56",
    "qrda_name": "Physical Exam Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.58"
  },
  {
    "hqmf_name": "Physical Exam, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.57",
    "qrda_name": "Physical Exam Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.59",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Physical Exam, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.91",
    "qrda_name": "Physical Exam Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.60"
  },
  {
    "hqmf_name": "Procedure, Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.60",
    "qrda_name": "Procedure Adverse Event",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.61"
  },
  {
    "hqmf_name": "Procedure, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.61",
    "qrda_name": "Procedure Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.62",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "", 
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Procedure, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.62",
    "qrda_name": "Procedure Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.63",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-PCS", "ICD-10-PCS"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Procedure, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.6",
    "qrda_name": "Procedure Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.64",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "CPT", "ICD-9-PCS", "ICD-10-PCS"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Procedure, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.92",
    "qrda_name": "Procedure Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.65"
  },
  {
    "hqmf_name": "Procedure, Result",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.63",
    "qrda_name": "Procedure Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.66"
  },
  {
    "hqmf_name": "Provider Care Experience",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.28",
    "qrda_name": "Provider Care Experience",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.67"
  },
  {
    "hqmf_name": "Provider Preference (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1014",
    "qrda_name": "Provider Preference",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.84"
  },
  {
    "hqmf_name": "Radiation Dosage (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1015",
    "qrda_name": "Radiation Dosage and Duration",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.91"
  },
  {
    "hqmf_name": "Radiation Duration (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.10005",
    "qrda_name": "Radiation Dosage and Duration",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.91"
  },
  {
    "hqmf_name": "Reaction (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1016.1",
    "qrda_name": "Reaction",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.85"
  },
  {
    "hqmf_name": "Reason (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1017.1",
    "qrda_name": "Reason",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.88"
  },
  {
    "hqmf_name": "Result (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1019",
    "qrda_name": "Result",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.87"
  },
  {
    "hqmf_name": "Risk Category Assessment",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.21",
    "qrda_name": "Risk Category Assessment",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.69",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Severity (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1021",
    "qrda_name": "Severity Observation",
    "qrda_oid": "2.16.840.1.113883.10.20.22.4.8"
  },
  {
    "hqmf_name": "Status (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1022",
    "qrda_name": "Status",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.93"
  },
  {
    "hqmf_name": "Substance, Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.64",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "CVX", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Adverse Event",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.65",
    "qrda_name": "Medication Adverse Effect",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.43",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Allergy",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.66",
    "qrda_name": "Medication Allergy",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.44",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT", "CVX"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Intolerance",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.67",
    "qrda_name": "Medication Intolerance",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.46",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT", "CVX"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.68",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Recommended",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.93",
    "qrda_name": "Substance Recommended",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.75"
  },
  {
    "hqmf_name": "Symptom, Active",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.69",
    "qrda_name": "Symptom Active",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.76",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Symptom, Assessed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.70",
    "qrda_name": "Symptom Assessed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.77"
  },
  {
    "hqmf_name": "Symptom, Inactive",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.97",
    "qrda_name": "Symptom Inactive",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.78"
  },
  {
    "hqmf_name": "Symptom, Resolved",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.98",
    "qrda_name": "Symptom Resolved",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.79"
  },
  {
    "hqmf_name": "Transfer From (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.71",
    "qrda_name": "Transfer From",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.81"
  },
  {
    "hqmf_name": "Transfer To (attribute)",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.72",
    "qrda_name": "Transfer To",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.82"
  },
  {
    "hqmf_name": "Laboratory Test, not Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.105",
    "qrda_name": "Laboratory Test Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.38",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM"]
      }
    ]
  },
  {
    "hqmf_name": "Discharge Medication, not Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.200",
    "qrda_name": "Discharge Medication - Active Medication",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.105",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Procedure, not Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.106",
    "qrda_name": "Procedure Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.64",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "CPT", "ICD-9-PCS", "ICD-10-PCS"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, not Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.114",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "CVX", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Intervention, not Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.146",
    "qrda_name": "Intervention Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.32",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, not Active",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.113",
    "qrda_name": "Medication Active",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.41",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "RxNorm"]
      },
      {
        "code_type": "medicationDispense",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.78",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Device, Applied not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.110",
    "qrda_name": "Device Applied",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.7",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Device, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.137",
    "qrda_name": "Device Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.9",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "CPT"]
      }
    ]
  },
  {
    "hqmf_name": "Procedure, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.162",
    "qrda_name": "Procedure Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.63",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT", "ICD-9-PCS", "ICD-10-PCS"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Administered not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.164",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm", "CVX", "SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Provider to Provider not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.129",
    "qrda_name": "Communication from Provider to Provider",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.4",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Patient to Provider not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.130",
    "qrda_name": "Communication from Patient to Provider",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.2",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Risk Category Assessment not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.121",
    "qrda_name": "Risk Category Assessment",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.69",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["LOINC", "SNOMED-CT"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Communication: From Provider to Patient not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.131",
    "qrda_name": "Communication from Provider to Patient",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.3",
     "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT"]
      }
    ]
  },
  {
    "hqmf_name": "Physical Exam, Performed not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.157",
    "qrda_name": "Physical Exam Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.59",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  }
]
`)

func hqmf_qrda_oidsJsonBytes() ([]byte, error) {
	return _hqmf_qrda_oidsJson, nil
}

func hqmf_qrda_oidsJson() (*asset, error) {
	bytes, err := hqmf_qrda_oidsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmf_qrda_oids.json", size: 43927, mode: os.FileMode(420), modTime: time.Unix(1494432774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _hqmf_qrda_oids_r3_1Json = []byte(`[
  {
    "hqmf_name": "Functional Status, Performed",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.85",
    "qrda_name": "Functional Status Performed",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.26",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "", 
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.14",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.64",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, not Administered",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.114",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Administered not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.164",
    "qrda_name": "Medication Administered",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.42",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Allergy",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.1",
    "qrda_name": "Medication Allergy",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.44",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Allergy",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.66",
    "qrda_name": "Medication Allergy",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.44",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.17",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Substance, Order",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.68",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Medication, Order not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.78",
    "qrda_name": "Medication Order",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.47",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["RxNorm"]
      }
    ]
  },
  {
    "hqmf_name": "Risk Category Assessment",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.21",
    "qrda_name": "Risk Category Assessment",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.69",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  },
  {
    "hqmf_name": "Risk Category Assessment not done",
    "hqmf_oid": "2.16.840.1.113883.3.560.1.121",
    "qrda_name": "Risk Category Assessment",
    "qrda_oid": "2.16.840.1.113883.10.20.24.3.69",
    "code_displays": [
      {
        "code_type": "entryCode",
        "tag_name": "code",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "",
        "preferred_code_sets": ["*"]
      },
      {
        "code_type": "resultValue",
        "tag_name": "value",
        "attribute": "",
        "exclude_null_flavor": false,
        "extra_content": "xsi:type=\"CD\"",
        "preferred_code_sets": ["SNOMED-CT", "ICD-9-CM", "ICD-10-CM", "LOINC"]
      }
    ]
  }
]`)

func hqmf_qrda_oids_r3_1JsonBytes() ([]byte, error) {
	return _hqmf_qrda_oids_r3_1Json, nil
}

func hqmf_qrda_oids_r3_1Json() (*asset, error) {
	bytes, err := hqmf_qrda_oids_r3_1JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "hqmf_qrda_oids_r3_1.json", size: 5727, mode: os.FileMode(420), modTime: time.Unix(1494432774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/cat1/r3/_.xml": templatesCat1R3_Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.1.xml": templatesCat1R3_216840111388310202431Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.103.xml": templatesCat1R3_21684011138831020243103Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.105.xml": templatesCat1R3_21684011138831020243105Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.11.xml": templatesCat1R3_2168401113883102024311Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.12.xml": templatesCat1R3_2168401113883102024312Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.13.xml": templatesCat1R3_2168401113883102024313Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.14.xml": templatesCat1R3_2168401113883102024314Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.17.xml": templatesCat1R3_2168401113883102024317Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.18.xml": templatesCat1R3_2168401113883102024318Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.2.xml": templatesCat1R3_216840111388310202432Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.22.xml": templatesCat1R3_2168401113883102024322Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.23.xml": templatesCat1R3_2168401113883102024323Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.26.xml": templatesCat1R3_2168401113883102024326Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.3.xml": templatesCat1R3_216840111388310202433Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.31.xml": templatesCat1R3_2168401113883102024331Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.32.xml": templatesCat1R3_2168401113883102024332Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.37.xml": templatesCat1R3_2168401113883102024337Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.38.xml": templatesCat1R3_2168401113883102024338Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.4.xml": templatesCat1R3_216840111388310202434Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.41.xml": templatesCat1R3_2168401113883102024341Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.42.xml": templatesCat1R3_2168401113883102024342Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.43.xml": templatesCat1R3_2168401113883102024343Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.44.xml": templatesCat1R3_2168401113883102024344Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.45.xml": templatesCat1R3_2168401113883102024345Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.46.xml": templatesCat1R3_2168401113883102024346Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.47.xml": templatesCat1R3_2168401113883102024347Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.51.xml": templatesCat1R3_2168401113883102024351Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.54.xml": templatesCat1R3_2168401113883102024354Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.55.xml": templatesCat1R3_2168401113883102024355Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.59.xml": templatesCat1R3_2168401113883102024359Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.62.xml": templatesCat1R3_2168401113883102024362Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.63.xml": templatesCat1R3_2168401113883102024363Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.64.xml": templatesCat1R3_2168401113883102024364Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.69.xml": templatesCat1R3_2168401113883102024369Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.7.xml": templatesCat1R3_216840111388310202437Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.76.xml": templatesCat1R3_2168401113883102024376Xml,
	"templates/cat1/r3/_2.16.840.1.113883.10.20.24.3.9.xml": templatesCat1R3_216840111388310202439Xml,
	"templates/cat1/r3/_address.xml": templatesCat1R3_addressXml,
	"templates/cat1/r3/_author.xml": templatesCat1R3_authorXml,
	"templates/cat1/r3/_code.xml": templatesCat1R3_codeXml,
	"templates/cat1/r3/_fulfills.xml": templatesCat1R3_fulfillsXml,
	"templates/cat1/r3/_id.xml": templatesCat1R3_idXml,
	"templates/cat1/r3/_measures.xml": templatesCat1R3_measuresXml,
	"templates/cat1/r3/_medication_details.xml": templatesCat1R3_medication_detailsXml,
	"templates/cat1/r3/_medication_dispense.xml": templatesCat1R3_medication_dispenseXml,
	"templates/cat1/r3/_ordinality.xml": templatesCat1R3_ordinalityXml,
	"templates/cat1/r3/_organization.xml": templatesCat1R3_organizationXml,
	"templates/cat1/r3/_patient_data.xml": templatesCat1R3_patient_dataXml,
	"templates/cat1/r3/_providers.xml": templatesCat1R3_providersXml,
	"templates/cat1/r3/_reason.xml": templatesCat1R3_reasonXml,
	"templates/cat1/r3/_record_target.xml": templatesCat1R3_record_targetXml,
	"templates/cat1/r3/_reporting_parameters.xml": templatesCat1R3_reporting_parametersXml,
	"templates/cat1/r3/_result_value.xml": templatesCat1R3_result_valueXml,
	"templates/cat1/r3/_telecom.xml": templatesCat1R3_telecomXml,
	"templates/cat1/r3/cat1.xml": templatesCat1R3Cat1Xml,
	"templates/cat1/r3_1/_.xml": templatesCat1R3_1_Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.1.xml": templatesCat1R3_1_216840111388310202431Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.103.xml": templatesCat1R3_1_21684011138831020243103Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.105.xml": templatesCat1R3_1_21684011138831020243105Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.11.xml": templatesCat1R3_1_2168401113883102024311Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.12.xml": templatesCat1R3_1_2168401113883102024312Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.13.xml": templatesCat1R3_1_2168401113883102024313Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.135.xml": templatesCat1R3_1_21684011138831020243135Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.14.xml": templatesCat1R3_1_2168401113883102024314Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.17.xml": templatesCat1R3_1_2168401113883102024317Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.18.xml": templatesCat1R3_1_2168401113883102024318Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.2.xml": templatesCat1R3_1_216840111388310202432Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.22.xml": templatesCat1R3_1_2168401113883102024322Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.23.xml": templatesCat1R3_1_2168401113883102024323Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.26.xml": templatesCat1R3_1_2168401113883102024326Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.3.xml": templatesCat1R3_1_216840111388310202433Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.31.xml": templatesCat1R3_1_2168401113883102024331Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.32.xml": templatesCat1R3_1_2168401113883102024332Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.37.xml": templatesCat1R3_1_2168401113883102024337Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.38.xml": templatesCat1R3_1_2168401113883102024338Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.4.xml": templatesCat1R3_1_216840111388310202434Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.41.xml": templatesCat1R3_1_2168401113883102024341Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.42.xml": templatesCat1R3_1_2168401113883102024342Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.43.xml": templatesCat1R3_1_2168401113883102024343Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.44.xml": templatesCat1R3_1_2168401113883102024344Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.45.xml": templatesCat1R3_1_2168401113883102024345Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.46.xml": templatesCat1R3_1_2168401113883102024346Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.47.xml": templatesCat1R3_1_2168401113883102024347Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.51.xml": templatesCat1R3_1_2168401113883102024351Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.54.xml": templatesCat1R3_1_2168401113883102024354Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.55.xml": templatesCat1R3_1_2168401113883102024355Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.59.xml": templatesCat1R3_1_2168401113883102024359Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.62.xml": templatesCat1R3_1_2168401113883102024362Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.63.xml": templatesCat1R3_1_2168401113883102024363Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.64.xml": templatesCat1R3_1_2168401113883102024364Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.69.xml": templatesCat1R3_1_2168401113883102024369Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.7.xml": templatesCat1R3_1_216840111388310202437Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.76.xml": templatesCat1R3_1_2168401113883102024376Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.81.xml": templatesCat1R3_1_2168401113883102024381Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.82.xml": templatesCat1R3_1_2168401113883102024382Xml,
	"templates/cat1/r3_1/_2.16.840.1.113883.10.20.24.3.9.xml": templatesCat1R3_1_216840111388310202439Xml,
	"templates/cat1/r3_1/_address.xml": templatesCat1R3_1_addressXml,
	"templates/cat1/r3_1/_author.xml": templatesCat1R3_1_authorXml,
	"templates/cat1/r3_1/_code.xml": templatesCat1R3_1_codeXml,
	"templates/cat1/r3_1/_fulfills.xml": templatesCat1R3_1_fulfillsXml,
	"templates/cat1/r3_1/_id.xml": templatesCat1R3_1_idXml,
	"templates/cat1/r3_1/_measures.xml": templatesCat1R3_1_measuresXml,
	"templates/cat1/r3_1/_medication_details.xml": templatesCat1R3_1_medication_detailsXml,
	"templates/cat1/r3_1/_medication_dispense.xml": templatesCat1R3_1_medication_dispenseXml,
	"templates/cat1/r3_1/_ordinality.xml": templatesCat1R3_1_ordinalityXml,
	"templates/cat1/r3_1/_organization.xml": templatesCat1R3_1_organizationXml,
	"templates/cat1/r3_1/_patient_data.xml": templatesCat1R3_1_patient_dataXml,
	"templates/cat1/r3_1/_providers.xml": templatesCat1R3_1_providersXml,
	"templates/cat1/r3_1/_reason.xml": templatesCat1R3_1_reasonXml,
	"templates/cat1/r3_1/_record_target.xml": templatesCat1R3_1_record_targetXml,
	"templates/cat1/r3_1/_reporting_parameters.xml": templatesCat1R3_1_reporting_parametersXml,
	"templates/cat1/r3_1/_result_value.xml": templatesCat1R3_1_result_valueXml,
	"templates/cat1/r3_1/_telecom.xml": templatesCat1R3_1_telecomXml,
	"templates/cat1/r3_1/cat1.xml": templatesCat1R3_1Cat1Xml,
	"hqmf_template_oid_map.json": hqmf_template_oid_mapJson,
	"hqmf_qrda_oids.json": hqmf_qrda_oidsJson,
	"hqmf_qrda_oids_r3_1.json": hqmf_qrda_oids_r3_1Json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"hqmf_qrda_oids.json": &bintree{hqmf_qrda_oidsJson, map[string]*bintree{}},
	"hqmf_qrda_oids_r3_1.json": &bintree{hqmf_qrda_oids_r3_1Json, map[string]*bintree{}},
	"hqmf_template_oid_map.json": &bintree{hqmf_template_oid_mapJson, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		"cat1": &bintree{nil, map[string]*bintree{
			"r3": &bintree{nil, map[string]*bintree{
				"_.xml": &bintree{templatesCat1R3_Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.1.xml": &bintree{templatesCat1R3_216840111388310202431Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.103.xml": &bintree{templatesCat1R3_21684011138831020243103Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.105.xml": &bintree{templatesCat1R3_21684011138831020243105Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.11.xml": &bintree{templatesCat1R3_2168401113883102024311Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.12.xml": &bintree{templatesCat1R3_2168401113883102024312Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.13.xml": &bintree{templatesCat1R3_2168401113883102024313Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.14.xml": &bintree{templatesCat1R3_2168401113883102024314Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.17.xml": &bintree{templatesCat1R3_2168401113883102024317Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.18.xml": &bintree{templatesCat1R3_2168401113883102024318Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.2.xml": &bintree{templatesCat1R3_216840111388310202432Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.22.xml": &bintree{templatesCat1R3_2168401113883102024322Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.23.xml": &bintree{templatesCat1R3_2168401113883102024323Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.26.xml": &bintree{templatesCat1R3_2168401113883102024326Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.3.xml": &bintree{templatesCat1R3_216840111388310202433Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.31.xml": &bintree{templatesCat1R3_2168401113883102024331Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.32.xml": &bintree{templatesCat1R3_2168401113883102024332Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.37.xml": &bintree{templatesCat1R3_2168401113883102024337Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.38.xml": &bintree{templatesCat1R3_2168401113883102024338Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.4.xml": &bintree{templatesCat1R3_216840111388310202434Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.41.xml": &bintree{templatesCat1R3_2168401113883102024341Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.42.xml": &bintree{templatesCat1R3_2168401113883102024342Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.43.xml": &bintree{templatesCat1R3_2168401113883102024343Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.44.xml": &bintree{templatesCat1R3_2168401113883102024344Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.45.xml": &bintree{templatesCat1R3_2168401113883102024345Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.46.xml": &bintree{templatesCat1R3_2168401113883102024346Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.47.xml": &bintree{templatesCat1R3_2168401113883102024347Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.51.xml": &bintree{templatesCat1R3_2168401113883102024351Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.54.xml": &bintree{templatesCat1R3_2168401113883102024354Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.55.xml": &bintree{templatesCat1R3_2168401113883102024355Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.59.xml": &bintree{templatesCat1R3_2168401113883102024359Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.62.xml": &bintree{templatesCat1R3_2168401113883102024362Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.63.xml": &bintree{templatesCat1R3_2168401113883102024363Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.64.xml": &bintree{templatesCat1R3_2168401113883102024364Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.69.xml": &bintree{templatesCat1R3_2168401113883102024369Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.7.xml": &bintree{templatesCat1R3_216840111388310202437Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.76.xml": &bintree{templatesCat1R3_2168401113883102024376Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.9.xml": &bintree{templatesCat1R3_216840111388310202439Xml, map[string]*bintree{}},
				"_address.xml": &bintree{templatesCat1R3_addressXml, map[string]*bintree{}},
				"_author.xml": &bintree{templatesCat1R3_authorXml, map[string]*bintree{}},
				"_code.xml": &bintree{templatesCat1R3_codeXml, map[string]*bintree{}},
				"_fulfills.xml": &bintree{templatesCat1R3_fulfillsXml, map[string]*bintree{}},
				"_id.xml": &bintree{templatesCat1R3_idXml, map[string]*bintree{}},
				"_measures.xml": &bintree{templatesCat1R3_measuresXml, map[string]*bintree{}},
				"_medication_details.xml": &bintree{templatesCat1R3_medication_detailsXml, map[string]*bintree{}},
				"_medication_dispense.xml": &bintree{templatesCat1R3_medication_dispenseXml, map[string]*bintree{}},
				"_ordinality.xml": &bintree{templatesCat1R3_ordinalityXml, map[string]*bintree{}},
				"_organization.xml": &bintree{templatesCat1R3_organizationXml, map[string]*bintree{}},
				"_patient_data.xml": &bintree{templatesCat1R3_patient_dataXml, map[string]*bintree{}},
				"_providers.xml": &bintree{templatesCat1R3_providersXml, map[string]*bintree{}},
				"_reason.xml": &bintree{templatesCat1R3_reasonXml, map[string]*bintree{}},
				"_record_target.xml": &bintree{templatesCat1R3_record_targetXml, map[string]*bintree{}},
				"_reporting_parameters.xml": &bintree{templatesCat1R3_reporting_parametersXml, map[string]*bintree{}},
				"_result_value.xml": &bintree{templatesCat1R3_result_valueXml, map[string]*bintree{}},
				"_telecom.xml": &bintree{templatesCat1R3_telecomXml, map[string]*bintree{}},
				"cat1.xml": &bintree{templatesCat1R3Cat1Xml, map[string]*bintree{}},
			}},
			"r3_1": &bintree{nil, map[string]*bintree{
				"_.xml": &bintree{templatesCat1R3_1_Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.1.xml": &bintree{templatesCat1R3_1_216840111388310202431Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.103.xml": &bintree{templatesCat1R3_1_21684011138831020243103Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.105.xml": &bintree{templatesCat1R3_1_21684011138831020243105Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.11.xml": &bintree{templatesCat1R3_1_2168401113883102024311Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.12.xml": &bintree{templatesCat1R3_1_2168401113883102024312Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.13.xml": &bintree{templatesCat1R3_1_2168401113883102024313Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.135.xml": &bintree{templatesCat1R3_1_21684011138831020243135Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.14.xml": &bintree{templatesCat1R3_1_2168401113883102024314Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.17.xml": &bintree{templatesCat1R3_1_2168401113883102024317Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.18.xml": &bintree{templatesCat1R3_1_2168401113883102024318Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.2.xml": &bintree{templatesCat1R3_1_216840111388310202432Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.22.xml": &bintree{templatesCat1R3_1_2168401113883102024322Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.23.xml": &bintree{templatesCat1R3_1_2168401113883102024323Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.26.xml": &bintree{templatesCat1R3_1_2168401113883102024326Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.3.xml": &bintree{templatesCat1R3_1_216840111388310202433Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.31.xml": &bintree{templatesCat1R3_1_2168401113883102024331Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.32.xml": &bintree{templatesCat1R3_1_2168401113883102024332Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.37.xml": &bintree{templatesCat1R3_1_2168401113883102024337Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.38.xml": &bintree{templatesCat1R3_1_2168401113883102024338Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.4.xml": &bintree{templatesCat1R3_1_216840111388310202434Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.41.xml": &bintree{templatesCat1R3_1_2168401113883102024341Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.42.xml": &bintree{templatesCat1R3_1_2168401113883102024342Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.43.xml": &bintree{templatesCat1R3_1_2168401113883102024343Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.44.xml": &bintree{templatesCat1R3_1_2168401113883102024344Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.45.xml": &bintree{templatesCat1R3_1_2168401113883102024345Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.46.xml": &bintree{templatesCat1R3_1_2168401113883102024346Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.47.xml": &bintree{templatesCat1R3_1_2168401113883102024347Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.51.xml": &bintree{templatesCat1R3_1_2168401113883102024351Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.54.xml": &bintree{templatesCat1R3_1_2168401113883102024354Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.55.xml": &bintree{templatesCat1R3_1_2168401113883102024355Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.59.xml": &bintree{templatesCat1R3_1_2168401113883102024359Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.62.xml": &bintree{templatesCat1R3_1_2168401113883102024362Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.63.xml": &bintree{templatesCat1R3_1_2168401113883102024363Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.64.xml": &bintree{templatesCat1R3_1_2168401113883102024364Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.69.xml": &bintree{templatesCat1R3_1_2168401113883102024369Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.7.xml": &bintree{templatesCat1R3_1_216840111388310202437Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.76.xml": &bintree{templatesCat1R3_1_2168401113883102024376Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.81.xml": &bintree{templatesCat1R3_1_2168401113883102024381Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.82.xml": &bintree{templatesCat1R3_1_2168401113883102024382Xml, map[string]*bintree{}},
				"_2.16.840.1.113883.10.20.24.3.9.xml": &bintree{templatesCat1R3_1_216840111388310202439Xml, map[string]*bintree{}},
				"_address.xml": &bintree{templatesCat1R3_1_addressXml, map[string]*bintree{}},
				"_author.xml": &bintree{templatesCat1R3_1_authorXml, map[string]*bintree{}},
				"_code.xml": &bintree{templatesCat1R3_1_codeXml, map[string]*bintree{}},
				"_fulfills.xml": &bintree{templatesCat1R3_1_fulfillsXml, map[string]*bintree{}},
				"_id.xml": &bintree{templatesCat1R3_1_idXml, map[string]*bintree{}},
				"_measures.xml": &bintree{templatesCat1R3_1_measuresXml, map[string]*bintree{}},
				"_medication_details.xml": &bintree{templatesCat1R3_1_medication_detailsXml, map[string]*bintree{}},
				"_medication_dispense.xml": &bintree{templatesCat1R3_1_medication_dispenseXml, map[string]*bintree{}},
				"_ordinality.xml": &bintree{templatesCat1R3_1_ordinalityXml, map[string]*bintree{}},
				"_organization.xml": &bintree{templatesCat1R3_1_organizationXml, map[string]*bintree{}},
				"_patient_data.xml": &bintree{templatesCat1R3_1_patient_dataXml, map[string]*bintree{}},
				"_providers.xml": &bintree{templatesCat1R3_1_providersXml, map[string]*bintree{}},
				"_reason.xml": &bintree{templatesCat1R3_1_reasonXml, map[string]*bintree{}},
				"_record_target.xml": &bintree{templatesCat1R3_1_record_targetXml, map[string]*bintree{}},
				"_reporting_parameters.xml": &bintree{templatesCat1R3_1_reporting_parametersXml, map[string]*bintree{}},
				"_result_value.xml": &bintree{templatesCat1R3_1_result_valueXml, map[string]*bintree{}},
				"_telecom.xml": &bintree{templatesCat1R3_1_telecomXml, map[string]*bintree{}},
				"cat1.xml": &bintree{templatesCat1R3_1Cat1Xml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

